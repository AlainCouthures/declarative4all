<test-set name="prod-ForClause" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the ForClause production (or the ForExpr in XPath)</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-ForClause" type="spec"/>
  <link document="XQuery" idref="id-for-let" section-number="3.8.1" type="spec"/>
  <environment name="fsx">
    <source file="ForClause/fsx.xml" role=".">
      <description>Data about a filesystem represented in XML.</description>
      <created by="Mike Rorke" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="fsx_NS2">
    <source file="ForClause/fsx_NS.xml" role=".">
      <description>Data about a filesystem represented in XMLwith namespace-qualified names .</description>
      <created by="Mike Rorke" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="orderData">
    <source file="OrderByClause/orderData.xml" role="." validation="strict">
      <description>A Schema validated xml file, that contains values for some of the order by tests generated by NIST.</description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
    </source>
    <schema file="OrderByClause/orderData.xsd" uri="http://www.w3.org/XQueryTestOrderBy">
      <description>A Schema for orderData.xml</description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
    </schema>
  </environment>
  <environment name="SpecialTypes">
    <source file="ForClause/SpecialTypes.xml" role="." validation="strict">
      <description>A Schema validated XML file containing certain special types e.g. interleave types, union types, anySimpleType</description>
      <created by="Mike Rorke" on="2005-06-01"/>
    </source>
    <schema file="ForClause/SpecialTypes.xsd" uri="http://www.example.com/typedecl">
      <description>A Schema containing certain special types e.g. interleave types, union types, anySimpleType</description>
      <created by="Mike Rorke" on="2005-06-01"/>
    </schema>
  </environment>
  <test-case name="ForExpr001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("test"),xs:string("test1"),xs:string("test2"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("test"),xs:string("test1"),xs:string("test2"))</response-string>
    <description> For+Return - to iterate a constant sequence </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <test>for $a in ("test", "test1", "test2") return $a</test>
    <result-string>(xs:string("test"),xs:string("test1"),xs:string("test2"))</result-string>
    <result>
      <assert-string-value>test test1 test2</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> For+Return - error, undefined variable in &apos;IN&apos; Expr </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $folder in $folder/File return <file name="{$folder/File/FileName}"/>]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="ForExpr003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName name="Folder00000000047"/&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName name="Folder00000000047"/&gt;</response-string>
    <description> For+Return - use predicate in &apos;IN&apos; Expr </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $f in /MyComputer/Drive4/Folder[@id="128"] return <FolderName>{$f/@name}</FolderName>]]>
    </test>
    <result-string>&lt;FolderName name="Folder00000000047"/&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<FolderName name="Folder00000000047"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;file creator="Mani" creation_date="08/06/00"/&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;file creator="Mani" creation_date="08/06/00"/&gt;</response-string>
    <description> For+Return - use more than one predicates in &apos;IN&apos; Expr </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $f in /MyComputer/Drive1/Folder[@creator="Mani"]/File[@creation_date="08/06/00"] return <file>{$f/../@creator}{$f/@creation_date}</file>]]>
    </test>
    <result-string>&lt;file creator="Mani" creation_date="08/06/00"/&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<file creator="Mani" creation_date="08/06/00" />]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> For+Return - use sequence(security/right) as the predicate </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $f in /MyComputer//File[@creation_date="08/06/00"]/SecurityObject/Denies/Deny[security/right] return $f/../../@name/string()</test>
    <result-string>xs:string("so00000000001")</result-string>
    <result>
      <assert-string-value>so00000000001</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;fragment-result&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;/fragment-result&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;fragment-result&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;/fragment-result&gt;</response-string>
    <description> For+Return - 2 For will generate two iterations </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<fragment-result>{ for $folder in /MyComputer/Drive3/Folder ,$file in /MyComputer/Drive3/Folder/File return <Folder>{ $folder/@name, $folder/@id }<file>{ $file/@idref }{ data($file/@name) }</file> </Folder> }</fragment-result>]]>
    </test>
    <result-string>&lt;fragment-result&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000017" id="67"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="67"&gt;File00000000047&lt;/file&gt;&lt;/Folder&gt;&lt;Folder name="Folder00000000032" id="97"&gt;&lt;file idref="97"&gt;File00000000062&lt;/file&gt;&lt;/Folder&gt;&lt;/fragment-result&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<fragment-result><Folder name="Folder00000000017" id="67"><file idref="67">File00000000047</file></Folder><Folder name="Folder00000000017" id="67"><file idref="97">File00000000062</file></Folder><Folder name="Folder00000000032" id="97"><file idref="67">File00000000047</file></Folder><Folder name="Folder00000000032" id="97"><file idref="97">File00000000062</file></Folder></fragment-result>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</response-string>
    <description> For+Return - use special character in variable name </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $AaBbCc.-_Dd in /MyComputer/Drive1/Folder return $AaBbCc.-_Dd/FolderName</test>
    <result-string>&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<FolderName>Folder00000000000</FolderName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</response-string>
    <description> For+Where+Return - use special characters in variable name </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $AaBbCc.-_Dd in /MyComputer/Drive1/Folder where $AaBbCc.-_Dd/@creator = "Mani" return $AaBbCc.-_Dd/FolderName</test>
    <result-string>&lt;FolderName&gt;Folder00000000000&lt;/FolderName&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<FolderName>Folder00000000000</FolderName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> For+Return - error, use variable in it&apos;s own declaration </description>
    <created by="Jinghao Liu" on="2003-02-10"/>
    <test>for $a in $a/* return $a</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="ForExpr010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;File folder="Folder00000000000"&gt;File00000000000&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000001&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000002&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000003&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000004&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000005&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000006&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000007&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000008&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000009&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000010&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000011&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000012&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000013&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000014&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000015&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000016&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000017&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000018&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000019&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000020&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000021&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000022&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000023&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000024&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000025&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000026&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000027&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000028&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000029&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000030&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000031&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000016"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000047&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000062&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000020"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000021"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000023"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000024"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000027"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000028"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000030"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000031"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000035"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000036"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000038"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000039"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000042"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000043"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000045"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000046"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000100&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000054"&gt;File00000000100&lt;/File&gt;)</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;File folder="Folder00000000000"&gt;File00000000000&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000001&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000002&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000003&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000004&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000005&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000006&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000007&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000008&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000009&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000010&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000011&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000012&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000013&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000014&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000015&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000016&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000017&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000018&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000019&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000020&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000021&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000022&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000023&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000024&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000025&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000026&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000027&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000028&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000029&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000030&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000031&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000016"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000047&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000062&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000020"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000021"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000023"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000024"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000027"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000028"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000030"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000031"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000035"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000036"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000038"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000039"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000042"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000043"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000045"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000046"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000100&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000054"&gt;File00000000100&lt;/File&gt;)</response-string>
    <description> FLWOR expression with multiple, interdependent variables </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $folder in //Folder for $file in $folder//File return <File folder="{$folder/FolderName}">{string($file/FileName[1])}</File>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<File folder="Folder00000000000">File00000000000</File><File folder="Folder00000000000">File00000000001</File><File folder="Folder00000000000">File00000000002</File><File folder="Folder00000000000">File00000000003</File><File folder="Folder00000000000">File00000000004</File><File folder="Folder00000000000">File00000000005</File><File folder="Folder00000000000">File00000000006</File><File folder="Folder00000000000">File00000000007</File><File folder="Folder00000000000">File00000000008</File><File folder="Folder00000000000">File00000000009</File><File folder="Folder00000000000">File00000000010</File><File folder="Folder00000000000">File00000000011</File><File folder="Folder00000000000">File00000000012</File><File folder="Folder00000000000">File00000000013</File><File folder="Folder00000000000">File00000000014</File><File folder="Folder00000000000">File00000000015</File><File folder="Folder00000000000">File00000000016</File><File folder="Folder00000000000">File00000000017</File><File folder="Folder00000000000">File00000000018</File><File folder="Folder00000000000">File00000000019</File><File folder="Folder00000000000">File00000000020</File><File folder="Folder00000000000">File00000000021</File><File folder="Folder00000000000">File00000000022</File><File folder="Folder00000000000">File00000000023</File><File folder="Folder00000000000">File00000000024</File><File folder="Folder00000000000">File00000000025</File><File folder="Folder00000000000">File00000000026</File><File folder="Folder00000000000">File00000000027</File><File folder="Folder00000000000">File00000000028</File><File folder="Folder00000000000">File00000000029</File><File folder="Folder00000000000">File00000000030</File><File folder="Folder00000000001">File00000000031</File><File folder="Folder00000000001">File00000000032</File><File folder="Folder00000000001">File00000000033</File><File folder="Folder00000000001">File00000000034</File><File folder="Folder00000000001">File00000000035</File><File folder="Folder00000000001">File00000000036</File><File folder="Folder00000000001">File00000000037</File><File folder="Folder00000000001">File00000000038</File><File folder="Folder00000000001">File00000000039</File><File folder="Folder00000000001">File00000000040</File><File folder="Folder00000000001">File00000000041</File><File folder="Folder00000000001">File00000000042</File><File folder="Folder00000000001">File00000000043</File><File folder="Folder00000000001">File00000000044</File><File folder="Folder00000000001">File00000000045</File><File folder="Folder00000000001">File00000000046</File><File folder="Folder00000000002">File00000000032</File><File folder="Folder00000000002">File00000000033</File><File folder="Folder00000000002">File00000000034</File><File folder="Folder00000000002">File00000000035</File><File folder="Folder00000000002">File00000000036</File><File folder="Folder00000000002">File00000000037</File><File folder="Folder00000000002">File00000000038</File><File folder="Folder00000000002">File00000000039</File><File folder="Folder00000000002">File00000000040</File><File folder="Folder00000000002">File00000000041</File><File folder="Folder00000000002">File00000000042</File><File folder="Folder00000000002">File00000000043</File><File folder="Folder00000000002">File00000000044</File><File folder="Folder00000000002">File00000000045</File><File folder="Folder00000000002">File00000000046</File><File folder="Folder00000000003">File00000000033</File><File folder="Folder00000000003">File00000000034</File><File folder="Folder00000000003">File00000000035</File><File folder="Folder00000000003">File00000000036</File><File folder="Folder00000000003">File00000000037</File><File folder="Folder00000000003">File00000000038</File><File folder="Folder00000000003">File00000000039</File><File folder="Folder00000000003">File00000000040</File><File folder="Folder00000000003">File00000000041</File><File folder="Folder00000000003">File00000000042</File><File folder="Folder00000000003">File00000000043</File><File folder="Folder00000000003">File00000000044</File><File folder="Folder00000000003">File00000000045</File><File folder="Folder00000000003">File00000000046</File><File folder="Folder00000000004">File00000000034</File><File folder="Folder00000000004">File00000000035</File><File folder="Folder00000000004">File00000000036</File><File folder="Folder00000000004">File00000000037</File><File folder="Folder00000000004">File00000000038</File><File folder="Folder00000000004">File00000000039</File><File folder="Folder00000000004">File00000000040</File><File folder="Folder00000000004">File00000000041</File><File folder="Folder00000000004">File00000000042</File><File folder="Folder00000000004">File00000000043</File><File folder="Folder00000000004">File00000000044</File><File folder="Folder00000000004">File00000000045</File><File folder="Folder00000000004">File00000000046</File><File folder="Folder00000000005">File00000000035</File><File folder="Folder00000000005">File00000000036</File><File folder="Folder00000000005">File00000000037</File><File folder="Folder00000000005">File00000000038</File><File folder="Folder00000000005">File00000000039</File><File folder="Folder00000000005">File00000000040</File><File folder="Folder00000000005">File00000000041</File><File folder="Folder00000000005">File00000000042</File><File folder="Folder00000000005">File00000000043</File><File folder="Folder00000000005">File00000000044</File><File folder="Folder00000000005">File00000000045</File><File folder="Folder00000000005">File00000000046</File><File folder="Folder00000000006">File00000000036</File><File folder="Folder00000000006">File00000000037</File><File folder="Folder00000000006">File00000000038</File><File folder="Folder00000000006">File00000000039</File><File folder="Folder00000000006">File00000000040</File><File folder="Folder00000000006">File00000000041</File><File folder="Folder00000000006">File00000000042</File><File folder="Folder00000000006">File00000000043</File><File folder="Folder00000000006">File00000000044</File><File folder="Folder00000000006">File00000000045</File><File folder="Folder00000000006">File00000000046</File><File folder="Folder00000000007">File00000000037</File><File folder="Folder00000000007">File00000000038</File><File folder="Folder00000000007">File00000000039</File><File folder="Folder00000000007">File00000000040</File><File folder="Folder00000000007">File00000000041</File><File folder="Folder00000000007">File00000000042</File><File folder="Folder00000000007">File00000000043</File><File folder="Folder00000000007">File00000000044</File><File folder="Folder00000000007">File00000000045</File><File folder="Folder00000000007">File00000000046</File><File folder="Folder00000000008">File00000000038</File><File folder="Folder00000000008">File00000000039</File><File folder="Folder00000000008">File00000000040</File><File folder="Folder00000000008">File00000000041</File><File folder="Folder00000000008">File00000000042</File><File folder="Folder00000000008">File00000000043</File><File folder="Folder00000000008">File00000000044</File><File folder="Folder00000000008">File00000000045</File><File folder="Folder00000000008">File00000000046</File><File folder="Folder00000000009">File00000000039</File><File folder="Folder00000000009">File00000000040</File><File folder="Folder00000000009">File00000000041</File><File folder="Folder00000000009">File00000000042</File><File folder="Folder00000000009">File00000000043</File><File folder="Folder00000000009">File00000000044</File><File folder="Folder00000000009">File00000000045</File><File folder="Folder00000000009">File00000000046</File><File folder="Folder00000000010">File00000000040</File><File folder="Folder00000000010">File00000000041</File><File folder="Folder00000000010">File00000000042</File><File folder="Folder00000000010">File00000000043</File><File folder="Folder00000000010">File00000000044</File><File folder="Folder00000000010">File00000000045</File><File folder="Folder00000000010">File00000000046</File><File folder="Folder00000000011">File00000000041</File><File folder="Folder00000000011">File00000000042</File><File folder="Folder00000000011">File00000000043</File><File folder="Folder00000000011">File00000000044</File><File folder="Folder00000000011">File00000000045</File><File folder="Folder00000000011">File00000000046</File><File folder="Folder00000000012">File00000000042</File><File folder="Folder00000000012">File00000000043</File><File folder="Folder00000000012">File00000000044</File><File folder="Folder00000000012">File00000000045</File><File folder="Folder00000000012">File00000000046</File><File folder="Folder00000000013">File00000000043</File><File folder="Folder00000000013">File00000000044</File><File folder="Folder00000000013">File00000000045</File><File folder="Folder00000000013">File00000000046</File><File folder="Folder00000000014">File00000000044</File><File folder="Folder00000000014">File00000000045</File><File folder="Folder00000000014">File00000000046</File><File folder="Folder00000000015">File00000000045</File><File folder="Folder00000000015">File00000000046</File><File folder="Folder00000000016">File00000000046</File><File folder="Folder00000000017">File00000000047</File><File folder="Folder00000000017">File00000000048</File><File folder="Folder00000000017">File00000000049</File><File folder="Folder00000000017">File00000000050</File><File folder="Folder00000000017">File00000000051</File><File folder="Folder00000000017">File00000000052</File><File folder="Folder00000000017">File00000000053</File><File folder="Folder00000000017">File00000000054</File><File folder="Folder00000000017">File00000000055</File><File folder="Folder00000000017">File00000000056</File><File folder="Folder00000000017">File00000000057</File><File folder="Folder00000000017">File00000000058</File><File folder="Folder00000000017">File00000000059</File><File folder="Folder00000000017">File00000000060</File><File folder="Folder00000000017">File00000000061</File><File folder="Folder00000000018">File00000000048</File><File folder="Folder00000000018">File00000000049</File><File folder="Folder00000000018">File00000000050</File><File folder="Folder00000000018">File00000000051</File><File folder="Folder00000000018">File00000000052</File><File folder="Folder00000000018">File00000000053</File><File folder="Folder00000000018">File00000000054</File><File folder="Folder00000000019">File00000000049</File><File folder="Folder00000000019">File00000000050</File><File folder="Folder00000000019">File00000000051</File><File folder="Folder00000000020">File00000000050</File><File folder="Folder00000000021">File00000000051</File><File folder="Folder00000000022">File00000000052</File><File folder="Folder00000000022">File00000000053</File><File folder="Folder00000000022">File00000000054</File><File folder="Folder00000000023">File00000000053</File><File folder="Folder00000000024">File00000000054</File><File folder="Folder00000000025">File00000000055</File><File folder="Folder00000000025">File00000000056</File><File folder="Folder00000000025">File00000000057</File><File folder="Folder00000000025">File00000000058</File><File folder="Folder00000000025">File00000000059</File><File folder="Folder00000000025">File00000000060</File><File folder="Folder00000000025">File00000000061</File><File folder="Folder00000000026">File00000000056</File><File folder="Folder00000000026">File00000000057</File><File folder="Folder00000000026">File00000000058</File><File folder="Folder00000000027">File00000000057</File><File folder="Folder00000000028">File00000000058</File><File folder="Folder00000000029">File00000000059</File><File folder="Folder00000000029">File00000000060</File><File folder="Folder00000000029">File00000000061</File><File folder="Folder00000000030">File00000000060</File><File folder="Folder00000000031">File00000000061</File><File folder="Folder00000000032">File00000000062</File><File folder="Folder00000000032">File00000000063</File><File folder="Folder00000000032">File00000000064</File><File folder="Folder00000000032">File00000000065</File><File folder="Folder00000000032">File00000000066</File><File folder="Folder00000000032">File00000000067</File><File folder="Folder00000000032">File00000000068</File><File folder="Folder00000000032">File00000000069</File><File folder="Folder00000000032">File00000000070</File><File folder="Folder00000000032">File00000000071</File><File folder="Folder00000000032">File00000000072</File><File folder="Folder00000000032">File00000000073</File><File folder="Folder00000000032">File00000000074</File><File folder="Folder00000000032">File00000000075</File><File folder="Folder00000000032">File00000000076</File><File folder="Folder00000000033">File00000000063</File><File folder="Folder00000000033">File00000000064</File><File folder="Folder00000000033">File00000000065</File><File folder="Folder00000000033">File00000000066</File><File folder="Folder00000000033">File00000000067</File><File folder="Folder00000000033">File00000000068</File><File folder="Folder00000000033">File00000000069</File><File folder="Folder00000000034">File00000000064</File><File folder="Folder00000000034">File00000000065</File><File folder="Folder00000000034">File00000000066</File><File folder="Folder00000000035">File00000000065</File><File folder="Folder00000000036">File00000000066</File><File folder="Folder00000000037">File00000000067</File><File folder="Folder00000000037">File00000000068</File><File folder="Folder00000000037">File00000000069</File><File folder="Folder00000000038">File00000000068</File><File folder="Folder00000000039">File00000000069</File><File folder="Folder00000000040">File00000000070</File><File folder="Folder00000000040">File00000000071</File><File folder="Folder00000000040">File00000000072</File><File folder="Folder00000000040">File00000000073</File><File folder="Folder00000000040">File00000000074</File><File folder="Folder00000000040">File00000000075</File><File folder="Folder00000000040">File00000000076</File><File folder="Folder00000000041">File00000000071</File><File folder="Folder00000000041">File00000000072</File><File folder="Folder00000000041">File00000000073</File><File folder="Folder00000000042">File00000000072</File><File folder="Folder00000000043">File00000000073</File><File folder="Folder00000000044">File00000000074</File><File folder="Folder00000000044">File00000000075</File><File folder="Folder00000000044">File00000000076</File><File folder="Folder00000000045">File00000000075</File><File folder="Folder00000000046">File00000000076</File><File folder="Folder00000000047">File00000000077</File><File folder="Folder00000000047">File00000000078</File><File folder="Folder00000000047">File00000000079</File><File folder="Folder00000000047">File00000000080</File><File folder="Folder00000000047">File00000000081</File><File folder="Folder00000000047">File00000000082</File><File folder="Folder00000000047">File00000000083</File><File folder="Folder00000000047">File00000000084</File><File folder="Folder00000000047">File00000000085</File><File folder="Folder00000000047">File00000000086</File><File folder="Folder00000000047">File00000000087</File><File folder="Folder00000000047">File00000000088</File><File folder="Folder00000000047">File00000000089</File><File folder="Folder00000000047">File00000000090</File><File folder="Folder00000000047">File00000000091</File><File folder="Folder00000000047">File00000000092</File><File folder="Folder00000000047">File00000000093</File><File folder="Folder00000000047">File00000000094</File><File folder="Folder00000000047">File00000000095</File><File folder="Folder00000000047">File00000000096</File><File folder="Folder00000000047">File00000000097</File><File folder="Folder00000000047">File00000000098</File><File folder="Folder00000000047">File00000000099</File><File folder="Folder00000000047">File00000000100</File><File folder="Folder00000000048">File00000000077</File><File folder="Folder00000000048">File00000000078</File><File folder="Folder00000000048">File00000000079</File><File folder="Folder00000000048">File00000000080</File><File folder="Folder00000000048">File00000000081</File><File folder="Folder00000000049">File00000000082</File><File folder="Folder00000000049">File00000000083</File><File folder="Folder00000000049">File00000000084</File><File folder="Folder00000000049">File00000000085</File><File folder="Folder00000000049">File00000000086</File><File folder="Folder00000000050">File00000000087</File><File folder="Folder00000000050">File00000000088</File><File folder="Folder00000000051">File00000000089</File><File folder="Folder00000000051">File00000000090</File><File folder="Folder00000000051">File00000000091</File><File folder="Folder00000000051">File00000000092</File><File folder="Folder00000000051">File00000000093</File><File folder="Folder00000000051">File00000000094</File><File folder="Folder00000000052">File00000000095</File><File folder="Folder00000000052">File00000000096</File><File folder="Folder00000000053">File00000000097</File><File folder="Folder00000000053">File00000000098</File><File folder="Folder00000000053">File00000000099</File><File folder="Folder00000000054">File00000000100</File>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;File folder="Folder00000000000"&gt;File00000000000&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000001&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000002&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000003&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000004&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000005&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000006&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000007&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000008&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000009&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000010&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000011&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000012&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000013&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000014&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000015&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000016&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000017&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000018&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000019&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000020&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000021&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000022&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000023&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000024&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000025&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000026&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000027&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000028&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000029&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000030&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000031&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000016"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000047&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000062&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000020"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000021"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000023"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000024"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000027"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000028"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000030"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000031"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000035"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000036"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000038"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000039"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000042"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000043"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000045"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000046"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000100&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000054"&gt;File00000000100&lt;/File&gt;)</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;File folder="Folder00000000000"&gt;File00000000000&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000001&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000002&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000003&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000004&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000005&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000006&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000007&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000008&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000009&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000010&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000011&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000012&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000013&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000014&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000015&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000016&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000017&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000018&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000019&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000020&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000021&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000022&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000023&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000024&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000025&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000026&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000027&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000028&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000029&lt;/File&gt;,&lt;File folder="Folder00000000000"&gt;File00000000030&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000031&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000001"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000032&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000002"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000033&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000003"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000034&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000004"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000035&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000005"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000036&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000006"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000037&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000007"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000038&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000008"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000039&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000009"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000040&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000010"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000041&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000011"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000042&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000012"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000043&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000013"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000044&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000014"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000045&lt;/File&gt;,&lt;File folder="Folder00000000015"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000016"&gt;File00000000046&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000047&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000017"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000062&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000032"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000048&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000018"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000055&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000025"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000049&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000019"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000052&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000022"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000020"&gt;File00000000050&lt;/File&gt;,&lt;File folder="Folder00000000021"&gt;File00000000051&lt;/File&gt;,&lt;File folder="Folder00000000023"&gt;File00000000053&lt;/File&gt;,&lt;File folder="Folder00000000024"&gt;File00000000054&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000056&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000026"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000059&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000029"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000027"&gt;File00000000057&lt;/File&gt;,&lt;File folder="Folder00000000028"&gt;File00000000058&lt;/File&gt;,&lt;File folder="Folder00000000030"&gt;File00000000060&lt;/File&gt;,&lt;File folder="Folder00000000031"&gt;File00000000061&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000063&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000033"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000070&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000040"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000064&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000034"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000067&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000037"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000035"&gt;File00000000065&lt;/File&gt;,&lt;File folder="Folder00000000036"&gt;File00000000066&lt;/File&gt;,&lt;File folder="Folder00000000038"&gt;File00000000068&lt;/File&gt;,&lt;File folder="Folder00000000039"&gt;File00000000069&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000071&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000041"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000074&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000044"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000042"&gt;File00000000072&lt;/File&gt;,&lt;File folder="Folder00000000043"&gt;File00000000073&lt;/File&gt;,&lt;File folder="Folder00000000045"&gt;File00000000075&lt;/File&gt;,&lt;File folder="Folder00000000046"&gt;File00000000076&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000047"&gt;File00000000100&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000077&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000078&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000079&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000080&lt;/File&gt;,&lt;File folder="Folder00000000048"&gt;File00000000081&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000082&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000083&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000084&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000085&lt;/File&gt;,&lt;File folder="Folder00000000049"&gt;File00000000086&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000087&lt;/File&gt;,&lt;File folder="Folder00000000050"&gt;File00000000088&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000089&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000090&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000091&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000092&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000093&lt;/File&gt;,&lt;File folder="Folder00000000051"&gt;File00000000094&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000095&lt;/File&gt;,&lt;File folder="Folder00000000052"&gt;File00000000096&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000097&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000098&lt;/File&gt;,&lt;File folder="Folder00000000053"&gt;File00000000099&lt;/File&gt;,&lt;File folder="Folder00000000054"&gt;File00000000100&lt;/File&gt;)</response-string>
    <description> FLWOR expression with multiple, interdependent variables </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $folder in //Folder, $file in $folder//File return <File folder="{$folder/FolderName}">{string($file/FileName[1])}</File>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<File folder="Folder00000000000">File00000000000</File><File folder="Folder00000000000">File00000000001</File><File folder="Folder00000000000">File00000000002</File><File folder="Folder00000000000">File00000000003</File><File folder="Folder00000000000">File00000000004</File><File folder="Folder00000000000">File00000000005</File><File folder="Folder00000000000">File00000000006</File><File folder="Folder00000000000">File00000000007</File><File folder="Folder00000000000">File00000000008</File><File folder="Folder00000000000">File00000000009</File><File folder="Folder00000000000">File00000000010</File><File folder="Folder00000000000">File00000000011</File><File folder="Folder00000000000">File00000000012</File><File folder="Folder00000000000">File00000000013</File><File folder="Folder00000000000">File00000000014</File><File folder="Folder00000000000">File00000000015</File><File folder="Folder00000000000">File00000000016</File><File folder="Folder00000000000">File00000000017</File><File folder="Folder00000000000">File00000000018</File><File folder="Folder00000000000">File00000000019</File><File folder="Folder00000000000">File00000000020</File><File folder="Folder00000000000">File00000000021</File><File folder="Folder00000000000">File00000000022</File><File folder="Folder00000000000">File00000000023</File><File folder="Folder00000000000">File00000000024</File><File folder="Folder00000000000">File00000000025</File><File folder="Folder00000000000">File00000000026</File><File folder="Folder00000000000">File00000000027</File><File folder="Folder00000000000">File00000000028</File><File folder="Folder00000000000">File00000000029</File><File folder="Folder00000000000">File00000000030</File><File folder="Folder00000000001">File00000000031</File><File folder="Folder00000000001">File00000000032</File><File folder="Folder00000000001">File00000000033</File><File folder="Folder00000000001">File00000000034</File><File folder="Folder00000000001">File00000000035</File><File folder="Folder00000000001">File00000000036</File><File folder="Folder00000000001">File00000000037</File><File folder="Folder00000000001">File00000000038</File><File folder="Folder00000000001">File00000000039</File><File folder="Folder00000000001">File00000000040</File><File folder="Folder00000000001">File00000000041</File><File folder="Folder00000000001">File00000000042</File><File folder="Folder00000000001">File00000000043</File><File folder="Folder00000000001">File00000000044</File><File folder="Folder00000000001">File00000000045</File><File folder="Folder00000000001">File00000000046</File><File folder="Folder00000000002">File00000000032</File><File folder="Folder00000000002">File00000000033</File><File folder="Folder00000000002">File00000000034</File><File folder="Folder00000000002">File00000000035</File><File folder="Folder00000000002">File00000000036</File><File folder="Folder00000000002">File00000000037</File><File folder="Folder00000000002">File00000000038</File><File folder="Folder00000000002">File00000000039</File><File folder="Folder00000000002">File00000000040</File><File folder="Folder00000000002">File00000000041</File><File folder="Folder00000000002">File00000000042</File><File folder="Folder00000000002">File00000000043</File><File folder="Folder00000000002">File00000000044</File><File folder="Folder00000000002">File00000000045</File><File folder="Folder00000000002">File00000000046</File><File folder="Folder00000000003">File00000000033</File><File folder="Folder00000000003">File00000000034</File><File folder="Folder00000000003">File00000000035</File><File folder="Folder00000000003">File00000000036</File><File folder="Folder00000000003">File00000000037</File><File folder="Folder00000000003">File00000000038</File><File folder="Folder00000000003">File00000000039</File><File folder="Folder00000000003">File00000000040</File><File folder="Folder00000000003">File00000000041</File><File folder="Folder00000000003">File00000000042</File><File folder="Folder00000000003">File00000000043</File><File folder="Folder00000000003">File00000000044</File><File folder="Folder00000000003">File00000000045</File><File folder="Folder00000000003">File00000000046</File><File folder="Folder00000000004">File00000000034</File><File folder="Folder00000000004">File00000000035</File><File folder="Folder00000000004">File00000000036</File><File folder="Folder00000000004">File00000000037</File><File folder="Folder00000000004">File00000000038</File><File folder="Folder00000000004">File00000000039</File><File folder="Folder00000000004">File00000000040</File><File folder="Folder00000000004">File00000000041</File><File folder="Folder00000000004">File00000000042</File><File folder="Folder00000000004">File00000000043</File><File folder="Folder00000000004">File00000000044</File><File folder="Folder00000000004">File00000000045</File><File folder="Folder00000000004">File00000000046</File><File folder="Folder00000000005">File00000000035</File><File folder="Folder00000000005">File00000000036</File><File folder="Folder00000000005">File00000000037</File><File folder="Folder00000000005">File00000000038</File><File folder="Folder00000000005">File00000000039</File><File folder="Folder00000000005">File00000000040</File><File folder="Folder00000000005">File00000000041</File><File folder="Folder00000000005">File00000000042</File><File folder="Folder00000000005">File00000000043</File><File folder="Folder00000000005">File00000000044</File><File folder="Folder00000000005">File00000000045</File><File folder="Folder00000000005">File00000000046</File><File folder="Folder00000000006">File00000000036</File><File folder="Folder00000000006">File00000000037</File><File folder="Folder00000000006">File00000000038</File><File folder="Folder00000000006">File00000000039</File><File folder="Folder00000000006">File00000000040</File><File folder="Folder00000000006">File00000000041</File><File folder="Folder00000000006">File00000000042</File><File folder="Folder00000000006">File00000000043</File><File folder="Folder00000000006">File00000000044</File><File folder="Folder00000000006">File00000000045</File><File folder="Folder00000000006">File00000000046</File><File folder="Folder00000000007">File00000000037</File><File folder="Folder00000000007">File00000000038</File><File folder="Folder00000000007">File00000000039</File><File folder="Folder00000000007">File00000000040</File><File folder="Folder00000000007">File00000000041</File><File folder="Folder00000000007">File00000000042</File><File folder="Folder00000000007">File00000000043</File><File folder="Folder00000000007">File00000000044</File><File folder="Folder00000000007">File00000000045</File><File folder="Folder00000000007">File00000000046</File><File folder="Folder00000000008">File00000000038</File><File folder="Folder00000000008">File00000000039</File><File folder="Folder00000000008">File00000000040</File><File folder="Folder00000000008">File00000000041</File><File folder="Folder00000000008">File00000000042</File><File folder="Folder00000000008">File00000000043</File><File folder="Folder00000000008">File00000000044</File><File folder="Folder00000000008">File00000000045</File><File folder="Folder00000000008">File00000000046</File><File folder="Folder00000000009">File00000000039</File><File folder="Folder00000000009">File00000000040</File><File folder="Folder00000000009">File00000000041</File><File folder="Folder00000000009">File00000000042</File><File folder="Folder00000000009">File00000000043</File><File folder="Folder00000000009">File00000000044</File><File folder="Folder00000000009">File00000000045</File><File folder="Folder00000000009">File00000000046</File><File folder="Folder00000000010">File00000000040</File><File folder="Folder00000000010">File00000000041</File><File folder="Folder00000000010">File00000000042</File><File folder="Folder00000000010">File00000000043</File><File folder="Folder00000000010">File00000000044</File><File folder="Folder00000000010">File00000000045</File><File folder="Folder00000000010">File00000000046</File><File folder="Folder00000000011">File00000000041</File><File folder="Folder00000000011">File00000000042</File><File folder="Folder00000000011">File00000000043</File><File folder="Folder00000000011">File00000000044</File><File folder="Folder00000000011">File00000000045</File><File folder="Folder00000000011">File00000000046</File><File folder="Folder00000000012">File00000000042</File><File folder="Folder00000000012">File00000000043</File><File folder="Folder00000000012">File00000000044</File><File folder="Folder00000000012">File00000000045</File><File folder="Folder00000000012">File00000000046</File><File folder="Folder00000000013">File00000000043</File><File folder="Folder00000000013">File00000000044</File><File folder="Folder00000000013">File00000000045</File><File folder="Folder00000000013">File00000000046</File><File folder="Folder00000000014">File00000000044</File><File folder="Folder00000000014">File00000000045</File><File folder="Folder00000000014">File00000000046</File><File folder="Folder00000000015">File00000000045</File><File folder="Folder00000000015">File00000000046</File><File folder="Folder00000000016">File00000000046</File><File folder="Folder00000000017">File00000000047</File><File folder="Folder00000000017">File00000000048</File><File folder="Folder00000000017">File00000000049</File><File folder="Folder00000000017">File00000000050</File><File folder="Folder00000000017">File00000000051</File><File folder="Folder00000000017">File00000000052</File><File folder="Folder00000000017">File00000000053</File><File folder="Folder00000000017">File00000000054</File><File folder="Folder00000000017">File00000000055</File><File folder="Folder00000000017">File00000000056</File><File folder="Folder00000000017">File00000000057</File><File folder="Folder00000000017">File00000000058</File><File folder="Folder00000000017">File00000000059</File><File folder="Folder00000000017">File00000000060</File><File folder="Folder00000000017">File00000000061</File><File folder="Folder00000000018">File00000000048</File><File folder="Folder00000000018">File00000000049</File><File folder="Folder00000000018">File00000000050</File><File folder="Folder00000000018">File00000000051</File><File folder="Folder00000000018">File00000000052</File><File folder="Folder00000000018">File00000000053</File><File folder="Folder00000000018">File00000000054</File><File folder="Folder00000000019">File00000000049</File><File folder="Folder00000000019">File00000000050</File><File folder="Folder00000000019">File00000000051</File><File folder="Folder00000000020">File00000000050</File><File folder="Folder00000000021">File00000000051</File><File folder="Folder00000000022">File00000000052</File><File folder="Folder00000000022">File00000000053</File><File folder="Folder00000000022">File00000000054</File><File folder="Folder00000000023">File00000000053</File><File folder="Folder00000000024">File00000000054</File><File folder="Folder00000000025">File00000000055</File><File folder="Folder00000000025">File00000000056</File><File folder="Folder00000000025">File00000000057</File><File folder="Folder00000000025">File00000000058</File><File folder="Folder00000000025">File00000000059</File><File folder="Folder00000000025">File00000000060</File><File folder="Folder00000000025">File00000000061</File><File folder="Folder00000000026">File00000000056</File><File folder="Folder00000000026">File00000000057</File><File folder="Folder00000000026">File00000000058</File><File folder="Folder00000000027">File00000000057</File><File folder="Folder00000000028">File00000000058</File><File folder="Folder00000000029">File00000000059</File><File folder="Folder00000000029">File00000000060</File><File folder="Folder00000000029">File00000000061</File><File folder="Folder00000000030">File00000000060</File><File folder="Folder00000000031">File00000000061</File><File folder="Folder00000000032">File00000000062</File><File folder="Folder00000000032">File00000000063</File><File folder="Folder00000000032">File00000000064</File><File folder="Folder00000000032">File00000000065</File><File folder="Folder00000000032">File00000000066</File><File folder="Folder00000000032">File00000000067</File><File folder="Folder00000000032">File00000000068</File><File folder="Folder00000000032">File00000000069</File><File folder="Folder00000000032">File00000000070</File><File folder="Folder00000000032">File00000000071</File><File folder="Folder00000000032">File00000000072</File><File folder="Folder00000000032">File00000000073</File><File folder="Folder00000000032">File00000000074</File><File folder="Folder00000000032">File00000000075</File><File folder="Folder00000000032">File00000000076</File><File folder="Folder00000000033">File00000000063</File><File folder="Folder00000000033">File00000000064</File><File folder="Folder00000000033">File00000000065</File><File folder="Folder00000000033">File00000000066</File><File folder="Folder00000000033">File00000000067</File><File folder="Folder00000000033">File00000000068</File><File folder="Folder00000000033">File00000000069</File><File folder="Folder00000000034">File00000000064</File><File folder="Folder00000000034">File00000000065</File><File folder="Folder00000000034">File00000000066</File><File folder="Folder00000000035">File00000000065</File><File folder="Folder00000000036">File00000000066</File><File folder="Folder00000000037">File00000000067</File><File folder="Folder00000000037">File00000000068</File><File folder="Folder00000000037">File00000000069</File><File folder="Folder00000000038">File00000000068</File><File folder="Folder00000000039">File00000000069</File><File folder="Folder00000000040">File00000000070</File><File folder="Folder00000000040">File00000000071</File><File folder="Folder00000000040">File00000000072</File><File folder="Folder00000000040">File00000000073</File><File folder="Folder00000000040">File00000000074</File><File folder="Folder00000000040">File00000000075</File><File folder="Folder00000000040">File00000000076</File><File folder="Folder00000000041">File00000000071</File><File folder="Folder00000000041">File00000000072</File><File folder="Folder00000000041">File00000000073</File><File folder="Folder00000000042">File00000000072</File><File folder="Folder00000000043">File00000000073</File><File folder="Folder00000000044">File00000000074</File><File folder="Folder00000000044">File00000000075</File><File folder="Folder00000000044">File00000000076</File><File folder="Folder00000000045">File00000000075</File><File folder="Folder00000000046">File00000000076</File><File folder="Folder00000000047">File00000000077</File><File folder="Folder00000000047">File00000000078</File><File folder="Folder00000000047">File00000000079</File><File folder="Folder00000000047">File00000000080</File><File folder="Folder00000000047">File00000000081</File><File folder="Folder00000000047">File00000000082</File><File folder="Folder00000000047">File00000000083</File><File folder="Folder00000000047">File00000000084</File><File folder="Folder00000000047">File00000000085</File><File folder="Folder00000000047">File00000000086</File><File folder="Folder00000000047">File00000000087</File><File folder="Folder00000000047">File00000000088</File><File folder="Folder00000000047">File00000000089</File><File folder="Folder00000000047">File00000000090</File><File folder="Folder00000000047">File00000000091</File><File folder="Folder00000000047">File00000000092</File><File folder="Folder00000000047">File00000000093</File><File folder="Folder00000000047">File00000000094</File><File folder="Folder00000000047">File00000000095</File><File folder="Folder00000000047">File00000000096</File><File folder="Folder00000000047">File00000000097</File><File folder="Folder00000000047">File00000000098</File><File folder="Folder00000000047">File00000000099</File><File folder="Folder00000000047">File00000000100</File><File folder="Folder00000000048">File00000000077</File><File folder="Folder00000000048">File00000000078</File><File folder="Folder00000000048">File00000000079</File><File folder="Folder00000000048">File00000000080</File><File folder="Folder00000000048">File00000000081</File><File folder="Folder00000000049">File00000000082</File><File folder="Folder00000000049">File00000000083</File><File folder="Folder00000000049">File00000000084</File><File folder="Folder00000000049">File00000000085</File><File folder="Folder00000000049">File00000000086</File><File folder="Folder00000000050">File00000000087</File><File folder="Folder00000000050">File00000000088</File><File folder="Folder00000000051">File00000000089</File><File folder="Folder00000000051">File00000000090</File><File folder="Folder00000000051">File00000000091</File><File folder="Folder00000000051">File00000000092</File><File folder="Folder00000000051">File00000000093</File><File folder="Folder00000000051">File00000000094</File><File folder="Folder00000000052">File00000000095</File><File folder="Folder00000000052">File00000000096</File><File folder="Folder00000000053">File00000000097</File><File folder="Folder00000000053">File00000000098</File><File folder="Folder00000000053">File00000000099</File><File folder="Folder00000000054">File00000000100</File>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Nested FLWOR expressions </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $fileName in for $file in //Folder/File return $file/FileName return string( $fileName )</test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030 File00000000031 File00000000032 File00000000033 File00000000034 File00000000035 File00000000036 File00000000037 File00000000038 File00000000039 File00000000040 File00000000041 File00000000042 File00000000043 File00000000044 File00000000045 File00000000046 File00000000047 File00000000048 File00000000049 File00000000050 File00000000051 File00000000052 File00000000053 File00000000054 File00000000055 File00000000056 File00000000057 File00000000058 File00000000059 File00000000060 File00000000061 File00000000062 File00000000063 File00000000064 File00000000065 File00000000066 File00000000067 File00000000068 File00000000069 File00000000070 File00000000071 File00000000072 File00000000073 File00000000074 File00000000075 File00000000076 File00000000077 File00000000078 File00000000079 File00000000080 File00000000081 File00000000082 File00000000083 File00000000084 File00000000085 File00000000086 File00000000087 File00000000088 File00000000089 File00000000090 File00000000091 File00000000092 File00000000093 File00000000094 File00000000095 File00000000096 File00000000097 File00000000098 File00000000099 File00000000100")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030 File00000000031 File00000000032 File00000000033 File00000000034 File00000000035 File00000000036 File00000000037 File00000000038 File00000000039 File00000000040 File00000000041 File00000000042 File00000000043 File00000000044 File00000000045 File00000000046 File00000000047 File00000000048 File00000000049 File00000000050 File00000000051 File00000000052 File00000000053 File00000000054 File00000000055 File00000000056 File00000000057 File00000000058 File00000000059 File00000000060 File00000000061 File00000000062 File00000000063 File00000000064 File00000000065 File00000000066 File00000000067 File00000000068 File00000000069 File00000000070 File00000000071 File00000000072 File00000000073 File00000000074 File00000000075 File00000000076 File00000000077 File00000000078 File00000000079 File00000000080 File00000000081 File00000000082 File00000000083 File00000000084 File00000000085 File00000000086 File00000000087 File00000000088 File00000000089 File00000000090 File00000000091 File00000000092 File00000000093 File00000000094 File00000000095 File00000000096 File00000000097 File00000000098 File00000000099 File00000000100</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Multiple variables based off the same input context </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <modified by="Michael Kay" change="reduce the volume of the output" on="2011-07-12"/>
    <environment ref="fsx"/>
    <test>
        for $fileName in //File/FileName, 
            $folderName in //Folder[contains(description, &apos;fren&apos;)]/FolderName 
        return ($folderName, $fileName)</test>
    <result-string/>
    <result>
      <assert-xml file="ForClause/ForExpr-013.out"/>
    </result>
  </test-case>
  <test-case name="ForExpr014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Incorrect syntax for nested loop. Multiple return statements at the same level </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $fileName in //File/FileName for $folderName in //Folder/FolderName return $folderName return $fileName</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("File00000000000"),xs:string("File00000000001"),xs:string("File00000000002"),xs:string("File00000000003"),xs:string("File00000000004"),xs:string("File00000000005"),xs:string("File00000000006"),xs:string("File00000000007"),xs:string("File00000000008"),xs:string("File00000000009"),xs:string("File00000000010"),xs:string("File00000000011"),xs:string("File00000000012"),xs:string("File00000000013"),xs:string("File00000000014"),xs:string("File00000000015"),xs:string("File00000000016"),xs:string("File00000000017"),xs:string("File00000000018"),xs:string("File00000000019"),xs:string("File00000000020"),xs:string("File00000000021"),xs:string("File00000000022"),xs:string("File00000000023"),xs:string("File00000000024"),xs:string("File00000000025"),xs:string("File00000000026"),xs:string("File00000000027"),xs:string("File00000000028"),xs:string("File00000000029"),xs:string("File00000000030"),xs:string("File00000000031"),xs:string("File00000000032"),xs:string("File00000000033"),xs:string("File00000000034"),xs:string("File00000000035"),xs:string("File00000000036"),xs:string("File00000000037"),xs:string("File00000000038"),xs:string("File00000000039"),xs:string("File00000000040"),xs:string("File00000000041"),xs:string("File00000000042"),xs:string("File00000000043"),xs:string("File00000000044"),xs:string("File00000000045"),xs:string("File00000000046"),xs:string("File00000000047"),xs:string("File00000000062"),xs:string("File00000000048"),xs:string("File00000000055"),xs:string("File00000000049"),xs:string("File00000000052"),xs:string("File00000000050"),xs:string("File00000000051"),xs:string("File00000000053"),xs:string("File00000000054"),xs:string("File00000000056"),xs:string("File00000000059"),xs:string("File00000000057"),xs:string("File00000000058"),xs:string("File00000000060"),xs:string("File00000000061"),xs:string("File00000000063"),xs:string("File00000000070"),xs:string("File00000000064"),xs:string("File00000000067"),xs:string("File00000000065"),xs:string("File00000000066"),xs:string("File00000000068"),xs:string("File00000000069"),xs:string("File00000000071"),xs:string("File00000000074"),xs:string("File00000000072"),xs:string("File00000000073"),xs:string("File00000000075"),xs:string("File00000000076"),xs:string("File00000000077"),xs:string("File00000000078"),xs:string("File00000000079"),xs:string("File00000000080"),xs:string("File00000000081"),xs:string("File00000000082"),xs:string("File00000000083"),xs:string("File00000000084"),xs:string("File00000000085"),xs:string("File00000000086"),xs:string("File00000000087"),xs:string("File00000000088"),xs:string("File00000000089"),xs:string("File00000000090"),xs:string("File00000000091"),xs:string("File00000000092"),xs:string("File00000000093"),xs:string("File00000000094"),xs:string("File00000000095"),xs:string("File00000000096"),xs:string("File00000000097"),xs:string("File00000000098"),xs:string("File00000000099"),xs:string("File00000000100"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("File00000000000"),xs:string("File00000000001"),xs:string("File00000000002"),xs:string("File00000000003"),xs:string("File00000000004"),xs:string("File00000000005"),xs:string("File00000000006"),xs:string("File00000000007"),xs:string("File00000000008"),xs:string("File00000000009"),xs:string("File00000000010"),xs:string("File00000000011"),xs:string("File00000000012"),xs:string("File00000000013"),xs:string("File00000000014"),xs:string("File00000000015"),xs:string("File00000000016"),xs:string("File00000000017"),xs:string("File00000000018"),xs:string("File00000000019"),xs:string("File00000000020"),xs:string("File00000000021"),xs:string("File00000000022"),xs:string("File00000000023"),xs:string("File00000000024"),xs:string("File00000000025"),xs:string("File00000000026"),xs:string("File00000000027"),xs:string("File00000000028"),xs:string("File00000000029"),xs:string("File00000000030"),xs:string("File00000000031"),xs:string("File00000000032"),xs:string("File00000000033"),xs:string("File00000000034"),xs:string("File00000000035"),xs:string("File00000000036"),xs:string("File00000000037"),xs:string("File00000000038"),xs:string("File00000000039"),xs:string("File00000000040"),xs:string("File00000000041"),xs:string("File00000000042"),xs:string("File00000000043"),xs:string("File00000000044"),xs:string("File00000000045"),xs:string("File00000000046"),xs:string("File00000000047"),xs:string("File00000000062"),xs:string("File00000000048"),xs:string("File00000000055"),xs:string("File00000000049"),xs:string("File00000000052"),xs:string("File00000000050"),xs:string("File00000000051"),xs:string("File00000000053"),xs:string("File00000000054"),xs:string("File00000000056"),xs:string("File00000000059"),xs:string("File00000000057"),xs:string("File00000000058"),xs:string("File00000000060"),xs:string("File00000000061"),xs:string("File00000000063"),xs:string("File00000000070"),xs:string("File00000000064"),xs:string("File00000000067"),xs:string("File00000000065"),xs:string("File00000000066"),xs:string("File00000000068"),xs:string("File00000000069"),xs:string("File00000000071"),xs:string("File00000000074"),xs:string("File00000000072"),xs:string("File00000000073"),xs:string("File00000000075"),xs:string("File00000000076"),xs:string("File00000000077"),xs:string("File00000000078"),xs:string("File00000000079"),xs:string("File00000000080"),xs:string("File00000000081"),xs:string("File00000000082"),xs:string("File00000000083"),xs:string("File00000000084"),xs:string("File00000000085"),xs:string("File00000000086"),xs:string("File00000000087"),xs:string("File00000000088"),xs:string("File00000000089"),xs:string("File00000000090"),xs:string("File00000000091"),xs:string("File00000000092"),xs:string("File00000000093"),xs:string("File00000000094"),xs:string("File00000000095"),xs:string("File00000000096"),xs:string("File00000000097"),xs:string("File00000000098"),xs:string("File00000000099"),xs:string("File00000000100"))</response-string>
    <description> Return expression contains nested for expression </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $folder in //Folder return for $file in $folder/File return string( $file/FileName[1] )</test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030 File00000000031 File00000000032 File00000000033 File00000000034 File00000000035 File00000000036 File00000000037 File00000000038 File00000000039 File00000000040 File00000000041 File00000000042 File00000000043 File00000000044 File00000000045 File00000000046 File00000000047 File00000000048 File00000000049 File00000000050 File00000000051 File00000000052 File00000000053 File00000000054 File00000000055 File00000000056 File00000000057 File00000000058 File00000000059 File00000000060 File00000000061 File00000000062 File00000000063 File00000000064 File00000000065 File00000000066 File00000000067 File00000000068 File00000000069 File00000000070 File00000000071 File00000000072 File00000000073 File00000000074 File00000000075 File00000000076 File00000000077 File00000000078 File00000000079 File00000000080 File00000000081 File00000000082 File00000000083 File00000000084 File00000000085 File00000000086 File00000000087 File00000000088 File00000000089 File00000000090 File00000000091 File00000000092 File00000000093 File00000000094 File00000000095 File00000000096 File00000000097 File00000000098 File00000000099 File00000000100")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030 File00000000031 File00000000032 File00000000033 File00000000034 File00000000035 File00000000036 File00000000037 File00000000038 File00000000039 File00000000040 File00000000041 File00000000042 File00000000043 File00000000044 File00000000045 File00000000046 File00000000047 File00000000048 File00000000049 File00000000050 File00000000051 File00000000052 File00000000053 File00000000054 File00000000055 File00000000056 File00000000057 File00000000058 File00000000059 File00000000060 File00000000061 File00000000062 File00000000063 File00000000064 File00000000065 File00000000066 File00000000067 File00000000068 File00000000069 File00000000070 File00000000071 File00000000072 File00000000073 File00000000074 File00000000075 File00000000076 File00000000077 File00000000078 File00000000079 File00000000080 File00000000081 File00000000082 File00000000083 File00000000084 File00000000085 File00000000086 File00000000087 File00000000088 File00000000089 File00000000090 File00000000091 File00000000092 File00000000093 File00000000094 File00000000095 File00000000096 File00000000097 File00000000098 File00000000099 File00000000100</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Interate over nodes in document and constant sequence. Return value based on both </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $folder in //Folder, $index in (1, 2, 3) return $folder/File[$index]/FileName</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<FileName>File00000000000</FileName><FileName>File00000000001</FileName><FileName>File00000000002</FileName><FileName>File00000000031</FileName><FileName>File00000000032</FileName><FileName>File00000000033</FileName><FileName>File00000000034</FileName><FileName>File00000000035</FileName><FileName>File00000000036</FileName><FileName>File00000000037</FileName><FileName>File00000000038</FileName><FileName>File00000000039</FileName><FileName>File00000000040</FileName><FileName>File00000000041</FileName><FileName>File00000000042</FileName><FileName>File00000000043</FileName><FileName>File00000000044</FileName><FileName>File00000000045</FileName><FileName>File00000000046</FileName><FileName>File00000000047</FileName><FileName>File00000000048</FileName><FileName>File00000000049</FileName><FileName>File00000000050</FileName><FileName>File00000000051</FileName><FileName>File00000000052</FileName><FileName>File00000000053</FileName><FileName>File00000000054</FileName><FileName>File00000000055</FileName><FileName>File00000000056</FileName><FileName>File00000000057</FileName><FileName>File00000000058</FileName><FileName>File00000000059</FileName><FileName>File00000000060</FileName><FileName>File00000000061</FileName><FileName>File00000000062</FileName><FileName>File00000000063</FileName><FileName>File00000000064</FileName><FileName>File00000000065</FileName><FileName>File00000000066</FileName><FileName>File00000000067</FileName><FileName>File00000000068</FileName><FileName>File00000000069</FileName><FileName>File00000000070</FileName><FileName>File00000000071</FileName><FileName>File00000000072</FileName><FileName>File00000000073</FileName><FileName>File00000000074</FileName><FileName>File00000000075</FileName><FileName>File00000000076</FileName><FileName>File00000000077</FileName><FileName>File00000000078</FileName><FileName>File00000000079</FileName><FileName>File00000000082</FileName><FileName>File00000000083</FileName><FileName>File00000000084</FileName><FileName>File00000000087</FileName><FileName>File00000000088</FileName><FileName>File00000000089</FileName><FileName>File00000000090</FileName><FileName>File00000000091</FileName><FileName>File00000000095</FileName><FileName>File00000000096</FileName><FileName>File00000000097</FileName><FileName>File00000000098</FileName><FileName>File00000000099</FileName><FileName>File00000000100</FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Multiple return statements from single for expression </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $folder in //Folder return $folder return $folder</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Multiple in statements for single variable binding </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $folder in in .//Folder return $folder</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Multiple for statements for single variable binding </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for for $folder in //Folder return $folder</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Multiple variable bindings followed by a trailing , </description>
    <created by="Mike Rorke" on="2003-02-10"/>
    <environment ref="fsx"/>
    <test>for $folder in //Folder, $file in $folder/File, return $file/FileName</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr021"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("3"),xs:integer("1"),xs:integer("4"),xs:integer("2"),xs:integer("3"),xs:integer("2"),xs:integer("4"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("3"),xs:integer("1"),xs:integer("4"),xs:integer("2"),xs:integer("3"),xs:integer("2"),xs:integer("4"))</response-string>
    <description> Test order of iteration between two variables in the same &apos;for&apos; statement </description>
    <created by="Mike Rorke" on="2005-06-20"/>
    <environment ref="fsx"/>
    <test>for $i in (1, 2), $j in (3, 4) return ($i, $j)</test>
    <result-string>(xs:integer("1"),xs:integer("3"),xs:integer("1"),xs:integer("4"),xs:integer("2"),xs:integer("3"),xs:integer("2"),xs:integer("4"))</result-string>
    <result>
      <assert-string-value>1 3 1 4 2 3 2 4</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr022"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with positional variable </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file at $pos in (//Folder)[1]/File return (string($file/FileName[1]), $pos)</test>
    <result-string>xs:string("File00000000000 1 File00000000001 2 File00000000002 3 File00000000003 4 File00000000004 5 File00000000005 6 File00000000006 7 File00000000007 8 File00000000008 9 File00000000009 10 File00000000010 11 File00000000011 12 File00000000012 13 File00000000013 14 File00000000014 15 File00000000015 16 File00000000016 17 File00000000017 18 File00000000018 19 File00000000019 20 File00000000020 21 File00000000021 22 File00000000022 23 File00000000023 24 File00000000024 25 File00000000025 26 File00000000026 27 File00000000027 28 File00000000028 29 File00000000029 30 File00000000030 31")</result-string>
    <result>
      <assert-string-value>File00000000000 1 File00000000001 2 File00000000002 3 File00000000003 4 File00000000004 5 File00000000005 6 File00000000006 7 File00000000007 8 File00000000008 9 File00000000009 10 File00000000010 11 File00000000011 12 File00000000012 13 File00000000013 14 File00000000014 15 File00000000015 16 File00000000016 17 File00000000017 18 File00000000018 19 File00000000019 20 File00000000020 21 File00000000021 22 File00000000022 23 File00000000023 24 File00000000024 25 File00000000025 26 File00000000026 27 File00000000027 28 File00000000028 29 File00000000029 30 File00000000030 31</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr023"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use positional variable in binding for new variable </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file at $pos in (//Folder)[1]/File, $pos2 in $pos+1 return (string($file/FileName[1]), $pos, $pos2)</test>
    <result-string>xs:string("File00000000000 1 2 File00000000001 2 3 File00000000002 3 4 File00000000003 4 5 File00000000004 5 6 File00000000005 6 7 File00000000006 7 8 File00000000007 8 9 File00000000008 9 10 File00000000009 10 11 File00000000010 11 12 File00000000011 12 13 File00000000012 13 14 File00000000013 14 15 File00000000014 15 16 File00000000015 16 17 File00000000016 17 18 File00000000017 18 19 File00000000018 19 20 File00000000019 20 21 File00000000020 21 22 File00000000021 22 23 File00000000022 23 24 File00000000023 24 25 File00000000024 25 26 File00000000025 26 27 File00000000026 27 28 File00000000027 28 29 File00000000028 29 30 File00000000029 30 31 File00000000030 31 32")</result-string>
    <result>
      <assert-string-value>File00000000000 1 2 File00000000001 2 3 File00000000002 3 4 File00000000003 4 5 File00000000004 5 6 File00000000005 6 7 File00000000006 7 8 File00000000007 8 9 File00000000008 9 10 File00000000009 10 11 File00000000010 11 12 File00000000011 12 13 File00000000012 13 14 File00000000013 14 15 File00000000014 15 16 File00000000015 16 17 File00000000016 17 18 File00000000017 18 19 File00000000018 19 20 File00000000019 20 21 File00000000020 21 22 File00000000021 22 23 File00000000022 23 24 File00000000023 24 25 File00000000024 25 26 File00000000025 26 27 File00000000026 27 28 File00000000027 28 29 File00000000028 29 30 File00000000029 30 31 File00000000030 31 32</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr024"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Reuse existing variable name for positional variable </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file at $file in (//Folder)[1]/File return (string($file/FileName[1]), $file)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQST0089"))</result-string>
    <result>
      <error code="XQST0089"/>
    </result>
  </test-case>
  <test-case name="ForExpr025"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Redefine existing bound variable. Second binding overrides first </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <test>for $file in (//Folder)[1]/File, $file in (//Folder)[2]/File return $file/FileName</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName><FileName>File00000000031</FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr026"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Missing &apos;in&apos; </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <test>for $file (//Folder)[1]/File return $file/FileName</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr027"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Wrong order for positional variable </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file in (//Folder)[1]/File at $pos return (string($file/FileName[1]), $pos)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExpr028"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;one/&gt;,&lt;two/&gt;,&lt;three/&gt;)</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;one/&gt;,&lt;two/&gt;,&lt;three/&gt;)</response-string>
    <description> FLWOR expression iterating over constructed XML </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $num in ( <one/>, <two/>, <three/> ) return $num]]>
    </test>
    <result-string>(&lt;one/&gt;,&lt;two/&gt;,&lt;three/&gt;)</result-string>
    <result>
      <assert-xml>
        <![CDATA[<one/><two/><three/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExpr029"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</response-string>
    <description> Embedded FLOWR expression that binds same variable on boths expressions (two for clauses) </description>
    <created by="NIST" on="2006-01-24"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $var in (1,2) for $var in (2,2) return $var * $var</test>
    <result-string>(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</result-string>
    <result>
      <assert-string-value>4 4 4 4</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr030"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</response-string>
    <description> Embedded FLOWR expression that binds same variable on boths expressions (use commas) </description>
    <created by="NIST" on="2006-01-24"/>
    <test>for $var in (1,2), $var in (2,2) return $var * $var</test>
    <result-string>(xs:integer("4"),xs:integer("4"),xs:integer("4"),xs:integer("4"))</result-string>
    <result>
      <assert-string-value>4 4 4 4</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExpr031"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLOWR expression that binds same variable on both ends of "at" </description>
    <created by="NIST" on="2006-01-24"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $var at $var in (1, 2) return $var * $var</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQST0089"))</result-string>
    <result>
      <error code="XQST0089"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Syntactically invalid for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in 1, $bar in 2, $moo in 3, return 4</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Syntactically invalid for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for in 1 return 4</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Syntactically invalid for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for return 4</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Syntactically invalid for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in 1 satisfies 4</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `deep-equal(1 to 5, (for $i in (1,2,3,4,5) return $i))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>deep-equal(1 to 5, (for $i in (1,2,3,4,5) return $i))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `3 eq (for $foo in 1 return 3)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 eq (for $foo in 1 return 3)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 eq (for $foo in 1 return $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (for $foo in 1 return $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `2 eq (for $foo in 1 return $foo + 1)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>2 eq (for $foo in 1 return $foo + 1)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `3 eq (for $foo in 1 return for $foo in 3 return $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 eq (for $foo in 1 return for $foo in 3 return $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `deep-equal((for $var in (1, 2, 3) return $var), (1, 2, 3))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>deep-equal((for $var in (1, 2, 3) return $var), (1, 2, 3))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `deep-equal((2, 2), (for $foo in (1, 1) return 1 + $foo))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>deep-equal((2, 2), (for $foo in (1, 1) return 1 + $foo))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `4 eq (for $foo in 1, $bar in 2, $moo in 3 return 4)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>4 eq (for $foo in 1, $bar in 2, $moo in 3 return 4)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `3 eq (for $foo in 1, $foo in 3 return $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 eq (for $foo in 1, $foo in 3 return $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `8 eq (for $foo in 1, $foo in 3, $moo in 5 return $moo + $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>8 eq (for $foo in 1, $foo in 3, $moo in 5 return $moo + $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `6 eq (for $foo in 1, $foo in 3 return $foo + $foo)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>6 eq (for $foo in 1, $foo in 3 return $foo + $foo)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A for variable binding to the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(for $var in () return current-time())</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A for variable binding to the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(for $var in () return 1)</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A for variable binding to the empty sequence, combined with value comparison. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty((for $var in () return current-time()))</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> A for variable binding to the empty sequence, combined with value comparison. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty((for $var in () return 1) eq 1)</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A for variable binding to the empty sequence, combined with value comparison. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(for $var in subsequence((current-time(), 1), 4) return 1)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> An for-return expression which only is the binding variable. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>deep-equal(remove(for $var in (current-time(), 2, 3, 4) return $var, 1), (2, 3, 4))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(for $fn:name in (1, 1) return $fn:name) instance of xs:integer+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(for $fn:name in (1, 1) return $fn:name) instance of xs:integer+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(for $xs:name in (1, 1) return $xs:name) instance of xs:integer+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(for $xs:name in (1, 1) return $xs:name) instance of xs:integer+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$PREFIXNOTEXIST:NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0081"))</result-string>
    <result>
      <error code="XPST0081"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$xs:NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 + $NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 + $prefix:NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0081"))</result-string>
    <result>
      <error code="XPST0081"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 + $xs:NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$NOTEXIST + 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$PREFIXNOTEXIST:NOTEXIST + 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0081"))</result-string>
    <result>
      <error code="XPST0081"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>$xs:NOTEXIST + 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in 1 return $NOTEXIST</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in (1, 2, $foo) return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in (1, $foo, 3) return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in ($foo, 2, 3) return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in $foo return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in 1 return $bar + (for $bar in 2 return $bar)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("2"),xs:integer("2"),xs:integer("2"),xs:integer("2"),xs:integer("3"),xs:integer("3"),xs:integer("3"),xs:integer("3"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("2"),xs:integer("2"),xs:integer("2"),xs:integer("2"),xs:integer("3"),xs:integer("3"),xs:integer("3"),xs:integer("3"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in (1, 2, 3), $b in (1, 2, 3, $b) return $a, $b</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $a</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in (1, 2) return 1, $a</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $b</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),xs:integer("1"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description> Variable which is not in scope. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $c</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-46"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> Type check: $foo is of type xs:string, which cannot be added to xs:integer 1. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in "foo" return 1 + $foo</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-47"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")))</response-string>
    <description> A variable&apos;s for expression causes type error in a value comparison. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $foo in ("a string", "another one") return 1 + subsequence($foo, 1, 1)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-48"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Parser test: variable names in a for expression that only exist of one character are valid. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (for $a in 1 return $a)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-49"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> For-expression involving a simple return statement that in some implementations trigger optimization paths. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>deep-equal((for $fo in trace((1, 2, 3), "msg") return $fo), (1, 2, 3))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-50"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure scanners/parsers accept small QNames in for-expressions. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (for $a in 1 return $a)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-51"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure scanners/parsers accept small QNames in for-expressions(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (for $xs:a in 1 return $xs:a)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-52"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A binding in a for-expression shadows global variables. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare variable $i := false(); 
        declare variable $t := false(); 
        deep-equal( for $i in (true(), true()), $t in (true(), true()) 
                    return ($i, $t), (true(), true(), true(), true(), true(), true(), true(), true()))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-53"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure the correct variable is used in an for-expression whose return sequence is only a variable reference. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare variable $my := 3; (for $i in 1 return $my) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-54"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure the correct variable is used in an for-expression whose return sequence is only a variable reference(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare variable $i := 3; (for $i in 1 return $i) eq 1</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-55"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply fn:count() to a for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(for $i in (1, 2, current-time()) return ($i, $i)) eq 6</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ForExprWithout-56"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Apply fn:count() to a for-expression(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 6 or count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 4</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Keywords are case sensitive. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>FOR $i IN (1, 2, 3)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A for-expression doesn&apos;t create a focus. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:myFunc() { for $i in (1, 2, 3) return position() }; 
        local:myFunc()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> A for-expression doesn&apos;t create a focus(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:myFunc() { for $i in (1, 2, 3) return position() }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A for-expression with a positional variable doesn&apos;t create a focus. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:myFunc() { for $i at $p in (1, 2, 3) return position() }; local:myFunc()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A for-expression with a positional variable doesn&apos;t create a focus(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:myFunc() { for $i at $p in (1, 2, 3) return position() }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> A query that performs up-transformation of dates. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[for $ti in <ti><rangeDate><initDate>17880505</initDate><terminatingDate>19550505</terminatingDate></rangeDate></ti> return <result> { fn:min(if ($ti/singleDate) then let $tmp:=$ti/singleDate/compute return xs:date(fn:concat(fn:substring($tmp, 1, 4), "-", fn:substring($tmp, 5, 2), "-", fn:substring($tmp, 7, 2))) else let $tmp:=$ti/rangeDate/initDate return xs:date(fn:concat(fn:substring($tmp, 1, 4), "-", fn:substring($tmp, 5, 2), "-", fn:substring($tmp, 7, 2)))) } </result>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<result>1788-05-05</result>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Ensure use of the undefined focus gets flagged. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>for $d in person return $d</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wrap a path expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[(for $d in <people> <person id="person0"> <name>First</name> </person> <person> <name>Second</name> </person> </people>/person return if (some $id in 1 satisfies typeswitch ($d/@id) case $n as node() return $d/@id = "person0" default $d return ()) then $d/name else ())]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<name>First</name>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure positional variables and bindings handles nesting. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $a at $pos1 in (1, 2, 3) return for $b at $pos2 in (4, 5, 6) return for $c at $pos3 in (7, 8, 9) return ($a, $pos1, $b, $pos2, $c, $pos2)</test>
    <result-string>xs:string("1 1 4 1 7 1 1 1 4 1 8 1 1 1 4 1 9 1 1 1 5 2 7 2 1 1 5 2 8 2 1 1 5 2 9 2 1 1 6 3 7 3 1 1 6 3 8 3 1 1 6 3 9 3 2 2 4 1 7 1 2 2 4 1 8 1 2 2 4 1 9 1 2 2 5 2 7 2 2 2 5 2 8 2 2 2 5 2 9 2 2 2 6 3 7 3 2 2 6 3 8 3 2 2 6 3 9 3 3 3 4 1 7 1 3 3 4 1 8 1 3 3 4 1 9 1 3 3 5 2 7 2 3 3 5 2 8 2 3 3 5 2 9 2 3 3 6 3 7 3 3 3 6 3 8 3 3 3 6 3 9 3")</result-string>
    <result>
      <assert-string-value>1 1 4 1 7 1 1 1 4 1 8 1 1 1 4 1 9 1 1 1 5 2 7 2 1 1 5 2 8 2 1 1 5 2 9 2 1 1 6 3 7 3 1 1 6 3 8 3 1 1 6 3 9 3 2 2 4 1 7 1 2 2 4 1 8 1 2 2 4 1 9 1 2 2 5 2 7 2 2 2 5 2 8 2 2 2 5 2 9 2 2 2 6 3 7 3 2 2 6 3 8 3 2 2 6 3 9 3 3 3 4 1 7 1 3 3 4 1 8 1 3 3 4 1 9 1 3 3 5 2 7 2 3 3 5 2 8 2 3 3 5 2 9 2 3 3 6 3 7 3 3 3 6 3 8 3 3 3 6 3 9 3</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Make use of many syntactical combinations. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $a in (3, 2, 1) 
        for $b in (6, 5, 4) 
        let $c := $a + $b 
        let $d := $a - $b 
        let $e := () stable order by $a ascending, $b descending, $d empty greatest, $e empty least, $c descending empty greatest, $d ascending empty greatest, $e descending empty least, $b ascending empty least 
        return $a</test>
    <result-string>xs:string("1 1 1 2 2 2 3 3 3")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-string-value>1 1 1 2 2 2 3 3 3</assert-string-value>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The return expression does not depend on the for iteration. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $a in (3, 2, 1, 1) stable order by $a return 5</test>
    <result-string>xs:string("5 5 5 5")</result-string>
    <result>
      <assert-string-value>5 5 5 5</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The order by expression does not depend on the for iteration. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $a in (3, 2, 1, 1) stable order by 1 return $a</test>
    <result-string>xs:string("3 2 1 1")</result-string>
    <result>
      <assert-string-value>3 2 1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e/&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e/&gt;</response-string>
    <description> Use the focus from within a for-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/>/(for $i in self::node() return $i)]]>
    </test>
    <result-string>&lt;e/&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<e/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e/&gt;</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e/&gt;</response-string>
    <description> Use the focus from within a for tail-expression. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/>/(for $i in 1, $b in self::node() return $b)]]>
    </test>
    <result-string>&lt;e/&gt;</result-string>
    <result>
      <assert-xml>
        <![CDATA[<e/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;node&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/element return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;document&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/document return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;document&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/document-node return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;attribute&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/attribute return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;comment&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/comment return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;processing-instruction&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/processing-instruction return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;processing-instruction&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/processing-instruction return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;text&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/text return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;typeswitch&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/typeswitch return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;if&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/if return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;for&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/for return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;let&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/let return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;declare&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/declare return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;some&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/some return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;child&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/child return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;ordered&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/ordered return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;unordered&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/unordered return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;schema-attribute&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/schema-attribute return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;schema-attribute&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/schema-element return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;item&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/item return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;following-sibling&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/following-sibling return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;validate&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/validate return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;instance&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/instance return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;castable&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/castable return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a name test named &apos;import&apos; inside a for loop, inside a user function. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:func($arg as element()* ) as element()* { for $n in $arg/import return $n }; 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use a name test named &apos;node&apos; inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <test>for $n in node return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use a name test named &apos;document&apos; inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <test>for $n in document return 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use a computed attribute constructor with name return, inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $n in attribute return {()} return 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Use a computed element constructor with name return, inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $n in element return {()} return 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use a computed processing-instruction constructor with name return, inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $n in processing-instruction return {()} return 1</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ForExprWithout-45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use name test &apos;attribute&apos; constructor with name return, inside a for loop. </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <test>for $n in attribute return 1</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="ForExprType001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (element type) </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file as element(File,xs:untyped) in (//Folder)[1]/File return $file/FileName</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<FileName>File00000000000</FileName><FileName>File00000000001</FileName><FileName>File00000000002</FileName><FileName>File00000000003</FileName><FileName>File00000000004</FileName><FileName>File00000000005</FileName><FileName>File00000000006</FileName><FileName>File00000000007</FileName><FileName>File00000000008</FileName><FileName>File00000000009</FileName><FileName>File00000000010</FileName><FileName>File00000000011</FileName><FileName>File00000000012</FileName><FileName>File00000000013</FileName><FileName>File00000000014</FileName><FileName>File00000000015</FileName><FileName>File00000000016</FileName><FileName>File00000000017</FileName><FileName>File00000000018</FileName><FileName>File00000000019</FileName><FileName>File00000000020</FileName><FileName>File00000000021</FileName><FileName>File00000000022</FileName><FileName>File00000000023</FileName><FileName>File00000000024</FileName><FileName>File00000000025</FileName><FileName>File00000000026</FileName><FileName>File00000000027</FileName><FileName>File00000000028</FileName><FileName>File00000000029</FileName><FileName>File00000000030</FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (attribute type) </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $fileName as attribute(name,xs:untypedAtomic) in (//Folder)[1]/File/@name return data($fileName)</test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (PI type) </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $PI as processing-instruction() in //processing-instruction() return $PI</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?FileSystem scale='0'?><?FileSystem maxDepth='64'?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (comment type) </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $comment as comment() in //comment() return $comment</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<!-- This is an official fsx file -->]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (simple type) </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $int as xs:int in (xs:int(1), xs:int(2)) return $int</test>
    <result-string>xs:string("1 2")</result-string>
    <result>
      <assert-string-value>1 2</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wrong type in type declaration </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $int as xs:string in (xs:int(1), xs:int(2)) return $int</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wrong order for type declaration </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file in (//Folder)[1]/File as element(Folder,xs:untypedAny) return $file/FileName</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExprType008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wrong order for positional and typing parts of FLWOR expression </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file at $pos as element(Folder,xs:untyped) in (//Folder)[1]/File return (string($file/FileName[1]), $pos)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExprType009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR with type expression matching a user defined type </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="orderData"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace xqt="http://www.w3.org/XQueryTestOrderBy"; 
        for $num as element(xqt:NegativeNumbers) in /xqt:DataValues/xqt:NegativeNumbers return $num</test>
    <result-string/>
    <result-string/>
    <result>
      <any-of>
        <assert-xml>
          <![CDATA[<NegativeNumbers xmlns="http://www.w3.org/XQueryTestOrderBy"><orderData>-100000000000000000</orderData><orderData>-10000000000000000</orderData><orderData>-1000000000000000</orderData><orderData>-100000000000000</orderData><orderData>-10000000000000</orderData><orderData>-1000000000000</orderData><orderData>-100000000000</orderData><orderData>-10000000000</orderData><orderData>-1000000000</orderData><orderData>-100000000</orderData><orderData>-10000000</orderData><orderData>-1000000</orderData><orderData>-100000</orderData><orderData>-10000</orderData><orderData>-1000</orderData><orderData>-100</orderData><orderData>-10</orderData><orderData>-1</orderData><orderData>0</orderData></NegativeNumbers>]]>
        </assert-xml>
        <assert-xml>
          <![CDATA[<NegativeNumbers xmlns="http://www.w3.org/XQueryTestOrderBy"><orderData>-100000000000000000</orderData><orderData>-10000000000000000</orderData><orderData>-1000000000000000</orderData><orderData>-100000000000000</orderData><orderData>-10000000000000</orderData><orderData>-1000000000000</orderData><orderData>-100000000000</orderData><orderData>-10000000000</orderData><orderData>-1000000000</orderData><orderData>-100000000</orderData><orderData>-10000000</orderData><orderData>-1000000</orderData><orderData>-100000</orderData><orderData>-10000</orderData><orderData>-1000</orderData><orderData>-100</orderData><orderData>-10</orderData><orderData>-1</orderData><orderData>-0</orderData></NegativeNumbers>]]>
        </assert-xml>
      </any-of>
    </result>
  </test-case>
  <test-case name="ForExprType011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR with type expression referencing an unknown type </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="orderData"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace xqt="http://www.w3.org/XQueryTestOrderBy"; 
        for $num as xs:undefinedType in data( /xqt:DataValues/xqt:NegativeNumbers/xqt:orderData ) return $num</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="ForExprType012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Missing type declaration on type expression </description>
    <created by="Mike Rorke" on="2005-06-27"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file as in (//Folder)[1]/File return $file</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExprType013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Type declaration containing multiple &apos;as&apos; keywords </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="orderData"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace xqt="http://www.w3.org/XQueryTestOrderBy"; 
        for $num as xs:decimal as xs:decimal in data( /xqt:DataValues/xqt:NegativeNumbers/xqt:orderData ) return $num</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="ForExprType014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Type expression value is void. This will never match anything bound to a variable by a FLWOR statement </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="orderData"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace xqt="http://www.w3.org/XQueryTestOrderBy"; 
        for $num as empty-sequence() in data( /xqt:DataValues/xqt:NegativeNumbers/xqt:orderData ) return $num</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Type declaration is a super type </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $num as xs:decimal in (xs:integer(1), xs:integer(2), xs:integer(3)) return $num</test>
    <result-string>xs:string("1 2 3")</result-string>
    <result>
      <assert-string-value>1 2 3</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Type declaration is a super type of the union type bound to the variable </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $num as xs:decimal in (xs:integer(1), xs:decimal(2), xs:integer(3)) return $num</test>
    <result-string>xs:string("1 2 3")</result-string>
    <result>
      <assert-string-value>1 2 3</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Bound sequence is a union type containing a single instance that does not match the type declaration </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $num as xs:double in (xs:int("1"), xs:integer("2"), xs:string("3")) return $num</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Match a &apos;node&apos; type </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $file as node() in (//Folder)[1]/File return $file/FileName</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<FileName>File00000000000</FileName><FileName>File00000000001</FileName><FileName>File00000000002</FileName><FileName>File00000000003</FileName><FileName>File00000000004</FileName><FileName>File00000000005</FileName><FileName>File00000000006</FileName><FileName>File00000000007</FileName><FileName>File00000000008</FileName><FileName>File00000000009</FileName><FileName>File00000000010</FileName><FileName>File00000000011</FileName><FileName>File00000000012</FileName><FileName>File00000000013</FileName><FileName>File00000000014</FileName><FileName>File00000000015</FileName><FileName>File00000000016</FileName><FileName>File00000000017</FileName><FileName>File00000000018</FileName><FileName>File00000000019</FileName><FileName>File00000000020</FileName><FileName>File00000000021</FileName><FileName>File00000000022</FileName><FileName>File00000000023</FileName><FileName>File00000000024</FileName><FileName>File00000000025</FileName><FileName>File00000000026</FileName><FileName>File00000000027</FileName><FileName>File00000000028</FileName><FileName>File00000000029</FileName><FileName>File00000000030</FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Match a text node type </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $fileName as text() in (//Folder)[1]/File/FileName/text() return string( $fileName )</test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Match a &apos;item&apos; type </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $fileName as item() in data( (//Folder)[1]/File/FileName ) return $fileName</test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002 File00000000003 File00000000004 File00000000005 File00000000006 File00000000007 File00000000008 File00000000009 File00000000010 File00000000011 File00000000012 File00000000013 File00000000014 File00000000015 File00000000016 File00000000017 File00000000018 File00000000019 File00000000020 File00000000021 File00000000022 File00000000023 File00000000024 File00000000025 File00000000026 File00000000027 File00000000028 File00000000029 File00000000030</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType021"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Match a &apos;document&apos; type </description>
    <created by="Mike Rorke" on="2005-06-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $doc as document-node() in (/) return count( $doc )</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="ForExprType022"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (attribute type). Simple attribute wildcard </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare default element namespace "http://www.example.com/typedecl"; 
        for $test as attribute(*) in ( /root/InterleaveType2/@integer, /root/InterleaveType2/@decimal ) 
        return data( $test )
      </test>
    <result-string>xs:string("10 20")</result-string>
    <result>
      <assert-string-value>10 20</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType023"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (attribute type). Simple attribute name test (no type) </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare default element namespace "http://www.example.com/typedecl"; 
        for $test as attribute(integer) in ( /root/InterleaveType2/@integer ) return data( $test )
      </test>
    <result-string>xs:string("10")</result-string>
    <result>
      <assert-string-value>10</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType024"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (attribute type). anySimpleType attribute </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare default element namespace "http://www.example.com/typedecl"; 
        for $test as attribute(att, xs:anySimpleType) in /root/anyAtomicType/@att return data( $test )
      </test>
    <result-string>xs:string("10")</result-string>
    <result>
      <assert-string-value>10</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType028"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value subtype promotion: Numeric based types - integer </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:integer in ( xs:byte("1"), xs:long("10000"), xs:negativeInteger("-10"), 
                        xs:short("100"), xs:positiveInteger("100"), xs:nonNegativeInteger("100") ) 
        return $test
      </test>
    <result-string>xs:string("1 10000 -10 100 100 100")</result-string>
    <result>
      <assert-string-value>1 10000 -10 100 100 100</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType029"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value subtype promotion: Numeric based types - decimal </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:decimal in ( xs:integer("100"), xs:short("1"), xs:int("10000"), 
                xs:nonPositiveInteger("-10"), xs:unsignedShort("100"), xs:positiveInteger("100"), xs:nonNegativeInteger("100") ) 
        return $test
      </test>
    <result-string>xs:string("100 1 10000 -10 100 100 100")</result-string>
    <result>
      <assert-string-value>100 1 10000 -10 100 100 100</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType030"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value subtype promotion: String based types - normalizedString </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:normalizedString in ( xs:language("en-US"), xs:NCName("foobar"), 
            xs:NMTOKEN("token1"), xs:ENTITY("entity1") ) 
        return $test
      </test>
    <result-string>xs:string("en-US foobar token1 entity1")</result-string>
    <result>
      <assert-string-value>en-US foobar token1 entity1</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType031"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value subtype promotion: Time based types - anyAtomicType </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:anyAtomicType in ( xs:duration("P0Y1347M0D"), xs:dateTime("1999-05-31T13:20:00-05:00"), 
                    xs:time("13:00:00-05:00"), xs:date("1999-05-10Z"), xs:gYearMonth("2002-03"), xs:gYear("1999"), 
                    xs:gMonthDay("--05-10"), xs:gDay("---10"), xs:gMonth("--05") ) 
        return $test
      </test>
    <result-string>xs:string("P112Y3M 1999-05-31T13:20:00-05:00 13:00:00-05:00 1999-05-10Z 2002-03 1999 --05-10 ---10 --05")</result-string>
    <result>
      <assert-string-value>P112Y3M 1999-05-31T13:20:00-05:00 13:00:00-05:00 1999-05-10Z 2002-03 1999 --05-10 ---10 --05</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType032"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value based subtype promotion: 2nd level derived types </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:anyAtomicType in ( xs:boolean("true"), xs:base64Binary("abcd"), xs:hexBinary("1234"),
                     xs:float("5.7"), xs:double("7.5"), xs:anyURI("http://foo") ) 
        return $test
      </test>
    <result-string>xs:string("true abcd 1234 5.7 7.5 http://foo")</result-string>
    <result>
      <assert-string-value>true abcd 1234 5.7 7.5 http://foo</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType033"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value based subtype promotion: Types from all levels </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $test as xs:anyAtomicType in ( xs:unsignedByte("10"), xs:short("20"), xs:positiveInteger("30"), 
                xs:nonPositiveInteger("-40"), xs:decimal("5.5"), xs:ENTITY("entity1"), xs:NCName("foobar"), 
                xs:language("en-US"), xs:string("foobar"), xs:hexBinary("ffff"), xs:gYear("1999") ) 
        return $test
      </test>
    <result-string>xs:string("10 20 30 -40 5.5 entity1 foobar en-US foobar FFFF 1999")</result-string>
    <result>
      <assert-string-value>10 20 30 -40 5.5 entity1 foobar en-US foobar FFFF 1999</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType034"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value based subtype promotion: numeric literal values - double </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $test as xs:decimal in ( 1, 0.3 ) return $test</test>
    <result-string>xs:string("1 0.3")</result-string>
    <result>
      <assert-string-value>1 0.3</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType035"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Value based subtype promotion: string and numeric literal values - anyAtomicType </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $test as xs:anyAtomicType in ( 1, "string", 1e2, 0.3 ) return $test</test>
    <result-string>xs:string("1 string 100 0.3")</result-string>
    <result>
      <assert-string-value>1 string 100 0.3</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType036"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration (element type). Simple element wildcard </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare default element namespace "http://www.example.com/typedecl"; 
        for $test as element(*) in /root/InterleaveType/* return $test
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<integer xmlns="http://www.example.com/typedecl">10</integer><decimal xmlns="http://www.example.com/typedecl">20</decimal>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType045"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Unknown Type </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $test as xs:unknownType in ( 1, 2, 3) return $test</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="ForExprType046"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt to promote xs:decimal | xs:double | xs:integer - no common subtype </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $test as xs:double in ( 1, 1e2, 0.3 ) return $test</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType047"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Test matching no atomic simple types </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="SpecialTypes"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $test as xs:NMTOKENS in ( xs:NMTOKEN("ab"), xs:NMTOKEN("cd") ) return $test</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="ForExprType054"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matching item() values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as item() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>xs:string("File00000000000 File00000000001 File00000000002")</result-string>
    <result>
      <assert-string-value>File00000000000 File00000000001 File00000000002</assert-string-value>
    </result>
  </test-case>
  <test-case name="ForExprType055"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matching node() values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as node() in (//fs:Folder)[1]/fs:File return $test/fs:FileName
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000000</fs:FileName><fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000001</fs:FileName><fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000002</fs:FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType056"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matching a document node </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as document-node() in (/) return ($test//fs:Folder)[1]/fs:FolderName
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<fs:FolderName xmlns:fs="http://www.example.com/filesystem">Folder00000000000</fs:FolderName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType057"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matcing text nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as text() in (//fs:Folder)[1]/fs:File/fs:FileName/text() return $test
      </test>
    <result-string/>
    <result>
      <assert-xml>File00000000000File00000000001File00000000002</assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType058"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matcing XML comment nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as comment() in (//fs:Folder)[1]/comment() return $test
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<!-- This is a comment for File00000000000 --><!-- This is a comment for File00000000001 --><!-- This is a comment for File00000000002 -->]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType059"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matcing PI nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction() in (//fs:Folder)[1]//processing-instruction() return $test
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?filesystem compressionUtil='foozip.exe'?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType060"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matcing named PI nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare namespace fs="http://www.example.com/filesystem"; for $test as processing-instruction() in (//fs:Folder)[1]//processing-instruction() return $test</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?filesystem compressionUtil='foozip.exe'?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType061"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Type declaration matcing PI nodes - no matching PI found </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction("unknown") in (//fs:Folder)[1]//processing-instruction() return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType062"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of item() on a set of nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as item() in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000000</fs:FileName><fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000001</fs:FileName><fs:FileName xmlns:fs="http://www.example.com/filesystem">File00000000002</fs:FileName>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="ForExprType063"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of node() on a set of items </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as node() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType064"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of text() on a set of element nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as text() in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType065"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of text() on a set of values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as text() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType066"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of comment() on a set of element nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as comment() in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType067"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of comment() on a set of values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as comment() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType068"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of processing-instruction() on a set of element nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction() in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType069"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of processing-instruction() on a set of values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType070"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of processing-instruction() with name specifier, on a set of element nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction("foo") in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType071"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of processing-instruction() with name specifier, on a set of values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as processing-instruction("foo") in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType072"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of document-node() on a set of element nodes </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as document-node() in (//fs:Folder)[1]/fs:File/fs:FileName return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="ForExprType073"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> FLWOR expressions with type declaration. Attempt type declaration of document-node() on a set of values </description>
    <created by="Mike Rorke" on="2005-09-13"/>
    <environment ref="fsx_NS2"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace fs="http://www.example.com/filesystem"; 
        for $test as document-node() in data( (//fs:Folder)[1]/fs:File/fs:FileName ) return $test
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K2-ForExprWith-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> For declarations does not cause type promotions to apply. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>for $i as xs:string in xs:untypedAtomic("input") return $i</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
</test-set>