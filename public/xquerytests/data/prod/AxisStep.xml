<test-set name="prod-AxisStep" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the expr-AxisStep() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-expr-AxisStep" type="spec"/>
  <environment name="TopMany">
    <source file="AxisStep/TopMany.xml" role=".">
      <description>Like TreeCompass, but with comments and PIs off the root. PI targets vary.
            All text nodes must have non-whitespace characters.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="Tree1Child">
    <source file="AxisStep/Tree1Child.xml" role=".">
      <description>A "compass" tree that has just one child, of an abnormal name, off the center node.
            One attribute each on west and center.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="Tree1Text">
    <source file="AxisStep/Tree1Text.xml" role=".">
      <description>A "compass" tree that has just a text node and no child element off the center node.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeCompass">
    <source file="AxisStep/TreeCompass.xml" role=".">
      <description>A tree intended to allow many kinds of path expressions.
         Need multiple attributes on center, west, and south, plus @mark scattered around.
         Mix of text and element children in many places, but east should have only a text node.
         All text nodes must have non-whitespace characters.
         Top element is far-north.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeEmpty">
    <source file="AxisStep/TreeEmpty.xml" role=".">
      <description>A "compass" tree that has just one "south" element at the top, bearing one "mark" attribute.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeRepeat">
    <source file="AxisStep/TreeRepeat.xml" role=".">
      <description>A "compass" tree that has center elements off the real center node.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeStack">
    <source file="AxisStep/TreeStack.xml" role=".">
      <description>A "compass" tree that has several "south" elements, some stacked within each other.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeTrunc">
    <source file="AxisStep/TreeTrunc.xml" role=".">
      <description>A "compass" tree that has no content at all in center or west, no attributes anywhere.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="TreeNS">
    <source file="AxisStep/TreeNS.xml" role=".">
      <description>A "compass" tree that has some namespaces.</description>
      <created by="Michael Kay" on="2013-10-22"/>
    </source>
  </environment>
  <environment name="CPPGlobals">
    <source file="AxisStep/CPPGlobals.xml" role=".">
      <description>The declarations of a C++ file described in XML.</description>
      <created by="Frans Englich" on="2007-06-27"/>
    </source>
  </environment>
  <environment name="nw_Customers">
    <source file="AxisStep/nw_Customers.xml" role=".">
      <description>Customer name/address file with some non-ASCII characters..</description>
      <created by="Kuen Siew" on="2003-03-25"/>
    </source>
  </environment>
  <environment name="XMarkAuction">
    <source file="../app/XMark/XMarkAuction.xml" role=".">
      <description>The XMark auction data</description>
      <created by="Anonymous" on="2000-01-01"/>
    </source>
  </environment>
  <environment name="xq311B">
    <source file="AxisStep/xq311B.xml" role=".">
      <description>Data that fits later examples in XQuery 3.11.</description>
      <created by="David Marston" on="2003-03-25"/>
    </source>
  </environment>
  <test-case name="Axes001-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/child::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes001-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/child::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes001-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Path &apos;child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/child::*)</test>
    <result-string>xs:integer("6")</result-string>
    <result>
      <assert-eq>6</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes002-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;child::&apos; with element name from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/child::south-east)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes002-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;child::&apos; with element name from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/child::south-east)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes002-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;child::&apos; with element name from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/child::south-east)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes002-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Path &apos;child::&apos; with element name from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/child::south-east)</test>
    <result-string>xs:integer("2")</result-string>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes003-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/child::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes003-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes003-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes003-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("19")</response-string>
    <description> Path &apos;child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/child::node())</test>
    <result-string>xs:integer("19")</result-string>
    <result>
      <assert-eq>19</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes004-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in &apos;*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes004-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes004-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Test implied child axis in &apos;*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/*)</test>
    <result-string>xs:integer("6")</result-string>
    <result>
      <assert-eq>6</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes005-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/south-east)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes005-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/south-east)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes005-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/south-east)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes005-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Test implied child axis with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/south-east)</test>
    <result-string>xs:integer("2")</result-string>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes006-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in &apos;node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes006-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes006-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes006-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("19")</response-string>
    <description> Test implied child axis in &apos;node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/node())</test>
    <result-string>xs:integer("19")</result-string>
    <result>
      <assert-eq>19</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes007-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;attribute::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west/attribute::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes007-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;attribute::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west/attribute::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes007-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;attribute::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west/attribute::*)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes008-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;attribute::&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west/attribute::west-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes008-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;attribute::&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west/attribute::west-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes008-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;attribute::&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west/attribute::west-attr-2)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes009-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;attribute::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west/attribute::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes009-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;attribute::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west/attribute::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes009-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;attribute::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west/attribute::node())</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes010-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;@*&apos; (abbreviated syntax) from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west/@*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes010-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;@*&apos; (abbreviated syntax) from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west/@*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes010-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;@*&apos; (abbreviated syntax) from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west/@*)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes011-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;@&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west/@west-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes011-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;@&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west/@west-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes011-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;@&apos; with name of attribute, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west/@west-attr-2)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes012-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/&apos; alone.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count( / )</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes013-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;parent::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/parent::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes014-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;parent::*&apos; from document element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/far-north/parent::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes015-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;parent::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/parent::near-north)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes016-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;parent::&apos; with specified element name that is not found, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/parent::nowhere)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes017-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;parent::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/parent::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes018-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;parent::node()&apos; from document element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/far-north/parent::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes019-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test abbreviated &apos;..&apos; syntax from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/..)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes020-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;self::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/self::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes021-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;self::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/self::center)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes023-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;self::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes027-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;self::node()&apos; axis from an attribute.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/@center-attr-3/self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes030-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;self::node()&apos; from a text node.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/text()/self::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes030-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;self::node()&apos; from a text node.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/text()/self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes031-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes031-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/descendant::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes031-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/descendant::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes031-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("5")</response-string>
    <description> Path &apos;descendant::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant::*)</test>
    <result-string>xs:integer("5")</result-string>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes032-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes032-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/descendant::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes032-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes032-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Path &apos;descendant::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//center/descendant::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes033-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes033-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/descendant::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes033-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/descendant::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes033-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("23")</response-string>
    <description> Path &apos;descendant::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant::node())</test>
    <result-string>xs:integer("21")</result-string>
    <result>
      <assert-eq>21</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes034-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant-or-self::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant-or-self::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes034-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Path &apos;descendant-or-self::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant-or-self::*)</test>
    <result-string>xs:integer("6")</result-string>
    <result>
      <assert-eq>6</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes035-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant-or-self::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes035-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center/descendant-or-self::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes035-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant-or-self::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes035-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with specified element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//center/descendant-or-self::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes036-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with name of self specified.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant-or-self::center)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes036-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Path &apos;descendant-or-self::&apos; with name of self specified.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center/descendant-or-self::center)</test>
    <result-string>xs:integer("9")</result-string>
    <result>
      <assert-eq>9</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes037-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant-or-self::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/descendant-or-self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes037-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("24")</response-string>
    <description> Path &apos;descendant-or-self::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/descendant-or-self::node())</test>
    <result-string>xs:integer("22")</result-string>
    <result>
      <assert-eq>22</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes041-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Path &apos;descendant-or-self::node()&apos; from an attribute.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center/@center-attr-3/descendant-or-self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes043-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;descendant-or-self::node()&apos; from a text node.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center/text()/descendant-or-self::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes043-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;descendant-or-self::node()&apos; from a text node.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center/text()/descendant-or-self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes044-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/child::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/child::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes044-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/child::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/child::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes045-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;/child::&apos; with element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/child::far-north)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes045-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;/child::&apos; with element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/child::far-north)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes046-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Test &apos;/child::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes046-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("14")</response-string>
    <description> Test &apos;/child::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/child::node())</test>
    <result-string>xs:integer("7")</result-string>
    <result>
      <assert-eq>7</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes047-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;/*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes047-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;/*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes048-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis with element name after /.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/far-north)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes048-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis with element name after /.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/far-north)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes049-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Test implied child axis in &apos;/node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes049-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("14")</response-string>
    <description> Test implied child axis in &apos;/node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/node())</test>
    <result-string>xs:integer("7")</result-string>
    <result>
      <assert-eq>7</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes055-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/self::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/self::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes056-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/descendant::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/descendant::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes056-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Test &apos;/descendant::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant::*)</test>
    <result-string>xs:integer("15")</result-string>
    <result>
      <assert-eq>15</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes056-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("16")</response-string>
    <description> Test &apos;/descendant::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/descendant::*)</test>
    <result-string>xs:integer("16")</result-string>
    <result>
      <assert-eq>16</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes057-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;/descendant::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(/descendant::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes057-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;/descendant::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/descendant::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes057-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;/descendant::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes057-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Absolute path &apos;/descendant::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(/descendant::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes058-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/descendant::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/descendant::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes058-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("62")</response-string>
    <description> Test &apos;/descendant::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant::node())</test>
    <result-string>xs:integer("56")</result-string>
    <result>
      <assert-eq>56</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes058-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("71")</response-string>
    <description> Test &apos;/descendant::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/descendant::node())</test>
    <result-string>xs:integer("58")</result-string>
    <result>
      <assert-eq>58</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes059-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;/descendant-or-self::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/descendant-or-self::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes059-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Test &apos;/descendant-or-self::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant-or-self::*)</test>
    <result-string>xs:integer("15")</result-string>
    <result>
      <assert-eq>15</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes060-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;/descendant-or-self::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(/descendant-or-self::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes060-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;/descendant-or-self::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(/descendant-or-self::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes060-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;/descendant-or-self::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant-or-self::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes060-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Absolute path &apos;/descendant-or-self::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(/descendant-or-self::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes061-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("63")</response-string>
    <description> Test &apos;/descendant-or-self::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(/descendant-or-self::node())</test>
    <result-string>xs:integer("57")</result-string>
    <result>
      <assert-eq>57</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes061-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("72")</response-string>
    <description> Test &apos;/descendant-or-self::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(/descendant-or-self::node())</test>
    <result-string>xs:integer("59")</result-string>
    <result>
      <assert-eq>59</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes062-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;//child::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//child::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes062-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Test &apos;//child::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//child::*)</test>
    <result-string>xs:integer("15")</result-string>
    <result>
      <assert-eq>15</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes063-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;//child::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//child::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes063-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;//child::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//child::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes063-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;//child::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//child::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes063-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Absolute path &apos;//child::&apos; with specified element name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//child::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes064-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;//child::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes064-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("62")</response-string>
    <description> Test &apos;//child::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//child::node())</test>
    <result-string>xs:integer("56")</result-string>
    <result>
      <assert-eq>56</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes064-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("71")</response-string>
    <description> Test &apos;//child::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(//child::node())</test>
    <result-string>xs:integer("58")</result-string>
    <result>
      <assert-eq>58</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes065-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;//*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes065-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Test implied child axis in &apos;//*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//*)</test>
    <result-string>xs:integer("15")</result-string>
    <result>
      <assert-eq>15</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes066-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path with element name after // implies child axis.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes066-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path with element name after // implies child axis.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes066-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path with element name after // implies child axis.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes066-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Absolute path with element name after // implies child axis.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes067-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes067-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("62")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//node())</test>
    <result-string>xs:integer("56")</result-string>
    <result>
      <assert-eq>56</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes067-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("71")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(//node())</test>
    <result-string>xs:integer("58")</result-string>
    <result>
      <assert-eq>58</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes068-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test &apos;//attribute::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//attribute::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes068-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;//attribute::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//attribute::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes068-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("14")</response-string>
    <description> Test &apos;//attribute::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//attribute::*)</test>
    <result-string>xs:integer("14")</result-string>
    <result>
      <assert-eq>14</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes069-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;//attribute::&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//attribute::mark)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes069-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;//attribute::&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//attribute::mark)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes069-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Absolute path &apos;//attribute::&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//attribute::mark)</test>
    <result-string>xs:integer("6")</result-string>
    <result>
      <assert-eq>6</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes070-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;//@*&apos; has abbreviated syntax.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//@*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes070-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;//@*&apos; has abbreviated syntax.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//@*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes070-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("14")</response-string>
    <description> Absolute path &apos;//@*&apos; has abbreviated syntax.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//@*)</test>
    <result-string>xs:integer("14")</result-string>
    <result>
      <assert-eq>14</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes071-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Absolute path &apos;//@&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//@mark)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes071-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Absolute path &apos;//@&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//@mark)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes071-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Absolute path &apos;//@&apos; with specified name.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//@mark)</test>
    <result-string>xs:integer("6")</result-string>
    <result>
      <assert-eq>6</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes072-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test &apos;//self::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeEmpty"/>
    <test>fn:count(//self::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes072-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("15")</response-string>
    <description> Test &apos;//self::*&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//self::*)</test>
    <result-string>xs:integer("15")</result-string>
    <result>
      <assert-eq>15</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes073-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("63")</response-string>
    <description> Test &apos;//self::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//self::node())</test>
    <result-string>xs:integer("57")</result-string>
    <result>
      <assert-eq>57</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes073-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("72")</response-string>
    <description> Test &apos;//self::node()&apos; absolute path.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TopMany"/>
    <test>fn:count(//self::node())</test>
    <result-string>xs:integer("59")</result-string>
    <result>
      <assert-eq>59</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes074-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//child::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes074-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center//child::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes074-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//child::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes074-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("12")</response-string>
    <description> Path &apos;//child::*&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//child::*)</test>
    <result-string>xs:integer("12")</result-string>
    <result>
      <assert-eq>12</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes075-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//child::&apos; with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//child::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes075-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//child::&apos; with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//child::south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes075-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//child::&apos; with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center//child::south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes075-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Path &apos;//child::&apos; with element name, from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//center//child::south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes076-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//child::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes076-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes076-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center//child::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes076-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("37")</response-string>
    <description> Path &apos;//child::node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//child::node())</test>
    <result-string>xs:integer("37")</result-string>
    <result>
      <assert-eq>37</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes077-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in &apos;//*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes077-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;//*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes077-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("12")</response-string>
    <description> Test implied child axis in &apos;//*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//*)</test>
    <result-string>xs:integer("12")</result-string>
    <result>
      <assert-eq>12</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes078-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in element//element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes078-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in element//element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//south)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes078-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in element//element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center//south)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes078-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("8")</response-string>
    <description> Test implied child axis in element//element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeStack"/>
    <test>fn:count(//center//south)</test>
    <result-string>xs:integer("8")</result-string>
    <result>
      <assert-eq>8</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes079-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes079-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes079-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <test>fn:count(//center//node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes079-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("37")</response-string>
    <description> Test implied child axis in &apos;//node()&apos; from an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//node())</test>
    <result-string>xs:integer("37")</result-string>
    <result>
      <assert-eq>37</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes080-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//attribute::*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west//attribute::*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes080-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//attribute::*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west//attribute::*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes080-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;//attribute::*&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west//attribute::*)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes081-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//attribute::&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//attribute::center-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes081-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//attribute::&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//attribute::center-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes081-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//attribute::&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center//attribute::center-attr-2)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes081-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Path &apos;//attribute::&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//attribute::center-attr-2)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes082-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//attribute::node()&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west//attribute::node())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes082-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//attribute::node()&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west//attribute::node())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes082-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;//attribute::node()&apos; after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west//attribute::node())</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes083-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//@*&apos; (abbreviated syntax) after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//west//@*)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes083-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//@*&apos; (abbreviated syntax) after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//west//@*)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes083-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("4")</response-string>
    <description> Path &apos;//@*&apos; (abbreviated syntax) after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//west//@*)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes084-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//@&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeTrunc"/>
    <test>fn:count(//center//@center-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes084-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Path &apos;//@&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="Tree1Child"/>
    <test>fn:count(//center//@center-attr-2)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes084-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Path &apos;//@&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeCompass"/>
    <test>fn:count(//center//@center-attr-2)</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes084-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("6")</response-string>
    <description> Path &apos;//@&apos; with name of attribute, after an element.</description>
    <created by="David Marston" on="2003-02-25"/>
    <environment ref="TreeRepeat"/>
    <test>fn:count(//center//@center-attr-2)</test>
    <result-string>xs:integer("4")</result-string>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes085"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;root&gt; &lt;Customers CustomerID="ALFKI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Alfreds Futterkiste&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Maria Anders&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;030-0074321&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;030-0076545&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Obere Str. 57&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Berlin&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;12209&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="ANATR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Ana Trujillo Emparedados y helados&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Ana Trujillo&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 555-4729&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(5) 555-3745&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Avda. de la Constituci&amp;#243;n 2222&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#233;xico D.F.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05021&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Mexico&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="ANTON"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Antonio Moreno Taquer&amp;#237;a&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Antonio Moreno&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 555-3932&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Mataderos  2312&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#233;xico D.F.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05023&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Mexico&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="AROUT"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Around the Horn&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Thomas Hardy&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-7788&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(171) 555-6750&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;120 Hanover Sq.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;WA1 1DP&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BERGS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Berglunds snabbk&amp;#246;p&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Christina Berglund&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Order Administrator&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0921-12 34 65&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0921-12 34 67&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Berguvsv&amp;#228;gen  8&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lule&amp;#229;&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;S-958 22&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Sweden&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BLAUS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Blauer See Delikatessen&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Hanna Moos&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0621-08460&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0621-08924&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Forsterstr. 57&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Mannheim&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;68306&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BLONP"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Blondesddsl p&amp;#232;re et fils&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Fr&amp;#233;d&amp;#233;rique Citeaux&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;88.60.15.31&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;88.60.15.32&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;24, place Kl&amp;#233;ber&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Strasbourg&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;67000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BOLID"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;B&amp;#243;lido Comidas preparadas&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Mart&amp;#237;n Sommer&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(91) 555 22 82&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(91) 555 91 99&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;C/ Araquil, 67&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Madrid&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;28023&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Spain&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BONAP"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Bon app&amp;apos;&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Laurence Lebihan&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;91.24.45.40&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;91.24.45.41&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;12, rue des Bouchers&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Marseille&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;13008&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BOTTM"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Bottom-Dollar Markets&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Elizabeth Lincoln&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(604) 555-4729&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(604) 555-3745&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;23 Tsawassen Blvd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Tsawassen&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;BC&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;T2F 8M4&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Canada&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="BSBEV"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;B&amp;apos;s Beverages&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Victoria Ashworth&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-1212&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Fauntleroy Circus&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;EC2 5NT&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="CACTU"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Cactus Comidas para llevar&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Patricio Simpson&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 135-5555&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 135-4892&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Cerrito 333&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Buenos Aires&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1010&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Argentina&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="CENTC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Centro comercial Moctezuma&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Francisco Chang&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 555-3392&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(5) 555-7293&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Sierras de Granada 9993&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#233;xico D.F.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05022&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Mexico&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="CHOPS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Chop-suey Chinese&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Yang Wang&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0452-076545&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Hauptstr. 29&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Bern&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;3012&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Switzerland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="COMMI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Com&amp;#233;rcio Mineiro&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Pedro Afonso&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(11) 555-7647&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Av. dos Lus&amp;#237;adas, 23&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Sao Paulo&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05432-043&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="CONSH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Consolidated Holdings&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Elizabeth Brown&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-2282&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(171) 555-9199&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Berkeley Gardens 12  Brewery&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;WX1 6LT&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="DRACD"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Drachenblut Delikatessen&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Sven Ottlieb&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Order Administrator&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0241-039123&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0241-059428&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Walserweg 21&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Aachen&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;52066&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="DUMON"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Du monde entier&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Janine Labrune&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;40.67.88.88&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;40.67.89.89&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;67, rue des Cinquante Otages&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Nantes&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;44000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="EASTC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Eastern Connection&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Ann Devon&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-0297&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(171) 555-3373&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;35 King George&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;WX3 6FW&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="ERNSH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Ernst Handel&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Roland Mendel&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;7675-3425&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;7675-3426&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Kirchgasse 6&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Graz&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;8010&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Austria&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FAMIA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Familia Arquibaldo&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Aria Cruz&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(11) 555-9857&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rua Or&amp;#243;s, 92&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Sao Paulo&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05442-030&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FISSA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;FISSA Fabrica Inter. Salchichas S.A.&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Diego Roel&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(91) 555 94 44&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(91) 555 55 93&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;C/ Moralzarzal, 86&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Madrid&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;28034&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Spain&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FOLIG"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Folies gourmandes&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Martine Ranc&amp;#233;&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Assistant Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;20.16.10.16&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;20.16.10.17&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;184, chauss&amp;#233;e de Tournai&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lille&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;59000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FOLKO"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Folk och f&amp;#228; HB&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Maria Larsson&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0695-34 67 21&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;&amp;#197;kergatan 24&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Br&amp;#228;cke&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;S-844 67&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Sweden&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FRANK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Frankenversand&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Peter Franken&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;089-0877310&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;089-0877451&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Berliner Platz 43&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#252;nchen&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;80805&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FRANR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;France restauration&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Carine Schmitt&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;40.32.21.21&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;40.32.21.20&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;54, rue Royale&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Nantes&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;44000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FRANS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Franchi S.p.A.&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Paolo Accorti&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;011-4988260&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;011-4988261&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Via Monte Bianco 34&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Torino&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;10100&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Italy&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="FURIB"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Furia Bacalhau e Frutos do Mar&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Lino Rodriguez&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 354-2534&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 354-2535&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Jardim das rosas n. 32&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lisboa&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1675&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Portugal&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="GALED"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Galer&amp;#237;a del gastr&amp;#243;nomo&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Eduardo Saavedra&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(93) 203 4560&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(93) 203 4561&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rambla de Catalu&amp;#241;a, 23&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Barcelona&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;08022&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Spain&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="GODOS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Godos Cocina T&amp;#237;pica&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jos&amp;#233; Pedro Freyre&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(95) 555 82 82&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;C/ Romero, 33&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Sevilla&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;41101&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Spain&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="GOURL"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Gourmet Lanchonetes&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Andr&amp;#233; Fonseca&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(11) 555-9482&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Av. Brasil, 442&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Campinas&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;04876-786&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="GREAL"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Great Lakes Food Market&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Howard Snyder&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(503) 555-7555&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;2732 Baker Blvd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Eugene&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;OR&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;97403&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="GROSR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;GROSELLA-Restaurante&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Manuel Pereira&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(2) 283-2951&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(2) 283-3397&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;5&amp;#170; Ave. Los Palos Grandes&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Caracas&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;DF&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1081&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Venezuela&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="HANAR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Hanari Carnes&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Mario Pontes&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(21) 555-0091&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(21) 555-8765&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rua do Pa&amp;#231;o, 67&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Rio de Janeiro&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;RJ&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05454-876&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="HILAA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;HILARION-Abastos&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Carlos Hern&amp;#225;ndez&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 555-1340&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(5) 555-1948&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Carrera 22 con Ave. Carlos Soublette #8-35&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;San Crist&amp;#243;bal&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;T&amp;#225;chira&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;5022&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Venezuela&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="HUNGC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Hungry Coyote Import Store&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Yoshi Latimer&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(503) 555-6874&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(503) 555-2376&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;City Center Plaza 516 Main St.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Elgin&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;OR&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;97827&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="HUNGO"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Hungry Owl All-Night Grocers&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Patricia McKenna&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;2967 542&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;2967 3333&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;8 Johnstown Road&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Cork&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;Co. Cork&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Ireland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="ISLAT"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Island Trading&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Helen Bennett&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(198) 555-8888&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Garden House Crowther Way&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Cowes&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;Isle of Wight&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;PO31 7PJ&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="KOENE"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;K&amp;#246;niglich Essen&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Philip Cramer&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0555-09876&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Maubelstr. 90&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Brandenburg&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;14776&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LACOR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;La corne d&amp;apos;abondance&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Daniel Tonini&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;30.59.84.10&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;30.59.85.11&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;67, avenue de l&amp;apos;Europe&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Versailles&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;78000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LAMAI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;La maison d&amp;apos;Asie&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Annette Roulet&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;61.77.61.10&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;61.77.61.11&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;1 rue Alsace-Lorraine&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Toulouse&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;31000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LAUGB"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Laughing Bacchus Wine Cellars&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Yoshi Tannamuri&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(604) 555-3392&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(604) 555-7293&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;1900 Oak St.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Vancouver&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;BC&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;V3F 2K1&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Canada&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LAZYK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Lazy K Kountry Store&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;John Steel&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(509) 555-7969&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(509) 555-6221&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;12 Orchestra Terrace&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Walla Walla&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;WA&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;99362&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LEHMS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Lehmanns Marktstand&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Renate Messner&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;069-0245984&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;069-0245874&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Magazinweg 7&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Frankfurt a.M.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;60528&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LETSS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Let&amp;apos;s Stop N Shop&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jaime Yorres&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(415) 555-5938&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;87 Polk St. Suite 5&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;San Francisco&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;CA&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;94117&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LILAS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;LILA-Supermercado&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Carlos Gonz&amp;#225;lez&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(9) 331-6954&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(9) 331-7256&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Carrera 52 con Ave. Bol&amp;#237;var #65-98 Llano Largo&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Barquisimeto&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;Lara&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;3508&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Venezuela&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LINOD"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;LINO-Delicateses&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Felipe Izquierdo&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(8) 34-56-12&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(8) 34-93-93&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Ave. 5 de Mayo Porlamar&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;I. de Margarita&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;Nueva Esparta&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;4980&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Venezuela&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="LONEP"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Lonesome Pine Restaurant&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Fran Wilson&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(503) 555-9573&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(503) 555-9646&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;89 Chiaroscuro Rd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Portland&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;OR&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;97219&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="MAGAA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Magazzini Alimentari Riuniti&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Giovanni Rovelli&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;035-640230&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;035-640231&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Via Ludovico il Moro 22&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Bergamo&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;24100&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Italy&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="MAISD"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Maison Dewey&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Catherine Dewey&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(02) 201 24 67&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(02) 201 24 68&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rue Joseph-Bens 532&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Bruxelles&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;B-1180&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Belgium&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="MEREP"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;M&amp;#232;re Paillarde&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jean Fresni&amp;#232;re&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(514) 555-8054&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(514) 555-8055&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;43 rue St. Laurent&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Montr&amp;#233;al&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;Qu&amp;#233;bec&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;H1J 1C3&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Canada&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="MORGK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Morgenstern Gesundkost&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Alexander Feuer&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0342-023176&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Heerstr. 22&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Leipzig&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;04179&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="NORTS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;North/South&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Simon Crowther&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-7733&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(171) 555-2530&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;South House 300 Queensbridge&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;SW7 1RZ&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="OCEAN"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Oc&amp;#233;ano Atl&amp;#225;ntico Ltda.&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Yvonne Moncada&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 135-5333&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 135-5535&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Ing. Gustavo Moncada 8585 Piso 20-A&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Buenos Aires&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1010&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Argentina&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="OLDWO"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Old World Delicatessen&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Rene Phillips&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(907) 555-7584&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(907) 555-2880&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;2743 Bering St.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Anchorage&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;AK&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;99508&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="OTTIK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Ottilies K&amp;#228;seladen&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Henriette Pfalzheim&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0221-0644327&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0221-0765721&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Mehrheimerstr. 369&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;K&amp;#246;ln&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;50739&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="PARIS"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Paris sp&amp;#233;cialit&amp;#233;s&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Marie Bertrand&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 42.34.22.66&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 42.34.22.77&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;265, boulevard Charonne&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Paris&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;75012&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="PERIC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Pericles Comidas cl&amp;#225;sicas&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Guillermo Fern&amp;#225;ndez&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 552-3745&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(5) 545-3745&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Calle Dr. Jorge Cash 321&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#233;xico D.F.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05033&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Mexico&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="PICCO"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Piccolo und mehr&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Georg Pipps&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;6562-9722&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;6562-9723&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Geislweg 14&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Salzburg&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;5020&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Austria&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="PRINI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Princesa Isabel Vinhos&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Isabel de Castro&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 356-5634&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Estrada da sa&amp;#250;de n. 58&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lisboa&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1756&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Portugal&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="QUEDE"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Que Del&amp;#237;cia&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Bernardo Batista&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(21) 555-4252&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(21) 555-4545&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rua da Panificadora, 12&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Rio de Janeiro&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;RJ&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;02389-673&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="QUEEN"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Queen Cozinha&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;L&amp;#250;cia Carvalho&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(11) 555-1189&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Alameda dos Can&amp;#224;rios, 891&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Sao Paulo&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05487-020&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="QUICK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;QUICK-Stop&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Horst Kloss&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0372-035188&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Taucherstra&amp;#223;e 10&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Cunewalde&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;01307&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="RANCH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Rancho grande&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Sergio Guti&amp;#233;rrez&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 123-5555&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 123-5556&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Av. del Libertador 900&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Buenos Aires&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1010&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Argentina&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="RATTC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Rattlesnake Canyon Grocery&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Paula Wilson&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Assistant Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(505) 555-5939&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(505) 555-3620&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;2817 Milton Dr.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Albuquerque&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;NM&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;87110&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="REGGC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Reggiani Caseifici&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Maurizio Moroni&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0522-556721&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0522-556722&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Strada Provinciale 124&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Reggio Emilia&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;42100&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Italy&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="RICAR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Ricardo Adocicados&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Janete Limeira&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Assistant Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(21) 555-3412&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Av. Copacabana, 267&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Rio de Janeiro&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;RJ&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;02389-890&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="RICSU"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Richter Supermarkt&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Michael Holz&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0897-034214&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Grenzacherweg 237&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Gen&amp;#232;ve&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1203&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Switzerland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="ROMEY"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Romero y tomillo&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Alejandra Camino&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(91) 745 6200&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(91) 745 6210&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Gran V&amp;#237;a, 1&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Madrid&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;28001&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Spain&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SANTG"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Sant&amp;#233; Gourmet&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jonas Bergulfsen&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;07-98 92 35&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;07-98 92 47&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Erling Skakkes gate 78&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Stavern&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;4110&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Norway&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SAVEA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Save-a-lot Markets&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jose Pavarotti&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(208) 555-8097&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;187 Suffolk Ln.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Boise&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;ID&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;83720&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SEVES"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Seven Seas Imports&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Hari Kumar&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(171) 555-1717&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(171) 555-5646&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;90 Wadhurst Rd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;London&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;OX15 4NB&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;UK&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SIMOB"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Simons bistro&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Jytte Petersen&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;31 12 34 56&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;31 13 35 57&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Vinb&amp;#230;ltet 34&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Kobenhavn&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;1734&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Denmark&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SPECD"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Sp&amp;#233;cialit&amp;#233;s du monde&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Dominique Perrier&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(1) 47.55.60.10&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(1) 47.55.60.20&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;25, rue Lauriston&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Paris&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;75016&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SPLIR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Split Rail Beer &amp;amp; Ale&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Art Braunschweiger&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(307) 555-4680&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(307) 555-6525&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;P.O. Box 555&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lander&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;WY&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;82520&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="SUPRD"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Supr&amp;#234;mes d&amp;#233;lices&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Pascale Cartrain&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(071) 23 67 22 20&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(071) 23 67 22 21&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Boulevard Tirou, 255&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Charleroi&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;B-6000&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Belgium&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="THEBI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;The Big Cheese&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Liz Nixon&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(503) 555-3612&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;89 Jefferson Way Suite 2&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Portland&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;OR&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;97201&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="THECR"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;The Cracker Box&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Liu Wong&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(406) 555-5834&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(406) 555-8083&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;55 Grizzly Peak Rd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Butte&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;MT&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;59801&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="TOMSP"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Toms Spezialit&amp;#228;ten&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Karin Josephs&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Marketing Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0251-031259&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0251-035695&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Luisenstr. 48&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#252;nster&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;44087&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="TORTU"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Tortuga Restaurante&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Miguel Angel Paolino&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(5) 555-2933&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Avda. Azteca 123&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;M&amp;#233;xico D.F.&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05033&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Mexico&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="TRADH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Tradi&amp;#231;&amp;#227;o Hipermercados&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Anabela Domingues&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(11) 555-2167&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(11) 555-2168&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Av. In&amp;#234;s de Castro, 414&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Sao Paulo&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;05634-030&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="TRAIH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Trail&amp;apos;s Head Gourmet Provisioners&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Helvetius Nagy&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Associate&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(206) 555-8257&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(206) 555-2174&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;722 DaVinci Blvd.&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Kirkland&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;WA&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;98034&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="VAFFE"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Vaffeljernet&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Palle Ibsen&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;86 21 32 43&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;86 22 33 44&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Smagsloget 45&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;&amp;#197;rhus&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;8200&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Denmark&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="VICTE"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Victuailles en stock&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Mary Saveley&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Agent&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;78.32.54.86&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;78.32.54.87&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;2, rue du Commerce&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Lyon&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;69004&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="VINET"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Vins et alcools Chevalier&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Paul Henriot&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;26.47.15.10&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;26.47.15.11&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;59 rue de l&amp;apos;Abbaye&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Reims&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;51100&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;France&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WANDK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Die Wandernde Kuh&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Rita M&amp;#252;ller&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Representative&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;0711-020361&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;0711-035428&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Adenauerallee 900&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Stuttgart&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;70563&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Germany&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WARTH"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Wartian Herkku&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Pirkko Koskitalo&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Accounting Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;981-443655&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;981-443655&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Torikatu 38&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Oulu&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;90110&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Finland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WELLI"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Wellington Importadora&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Paula Parente&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Sales Manager&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(14) 555-8122&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Rua do Mercado, 12&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Resende&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;SP&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;08737-363&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Brazil&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WHITC"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;White Clover Markets&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Karl Jablonski&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(206) 555-4112&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(206) 555-4115&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;305 - 14th Ave. S. Suite 3B&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Seattle&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Region&gt;WA&lt;/Region&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;98128&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;USA&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WILMK"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Wilman Kala&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Matti Karttunen&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner/Marketing Assistant&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;90-224 8858&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;90-224 8858&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;Keskuskatu 45&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Helsinki&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;21240&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Finland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;Customers CustomerID="WOLZA"&gt;&amp;#10;&amp;#9;&amp;#9;&lt;CompanyName&gt;Wolski  Zajazd&lt;/CompanyName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactName&gt;Zbyszek Piestrzeniewicz&lt;/ContactName&gt;&amp;#10;&amp;#9;&amp;#9;&lt;ContactTitle&gt;Owner&lt;/ContactTitle&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Phone&gt;(26) 642-7012&lt;/Phone&gt;&amp;#10;&amp;#9;&amp;#9;&lt;Fax&gt;(26) 642-7012&lt;/Fax&gt;&amp;#10;&amp;#9;&amp;#9;&lt;FullAddress&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Address&gt;ul. Filtrowa 68&lt;/Address&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;City&gt;Warszawa&lt;/City&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;PostalCode&gt;01-012&lt;/PostalCode&gt;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&lt;Country&gt;Poland&lt;/Country&gt;&amp;#10;&amp;#9;&amp;#9;&lt;/FullAddress&gt;&amp;#10;&amp;#9;&lt;/Customers&gt;&lt;/root&gt;</response-string>
    <description> Use of // to get all elements of a given name</description>
    <created by="Asad Jawahar" on="2003-02-25"/>
    <environment ref="nw_Customers"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<root> {//Customers} </root>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<root><Customers CustomerID="ALFKI">
		<CompanyName>Alfreds Futterkiste</CompanyName>
		<ContactName>Maria Anders</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>030-0074321</Phone>
		<Fax>030-0076545</Fax>
		<FullAddress>
			<Address>Obere Str. 57</Address>
			<City>Berlin</City>
			<PostalCode>12209</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="ANATR">
		<CompanyName>Ana Trujillo Emparedados y helados</CompanyName>
		<ContactName>Ana Trujillo</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(5) 555-4729</Phone>
		<Fax>(5) 555-3745</Fax>
		<FullAddress>
			<Address>Avda. de la Constituci&#243;n 2222</Address>
			<City>M&#233;xico D.F.</City>
			<PostalCode>05021</PostalCode>
			<Country>Mexico</Country>
		</FullAddress>
	</Customers><Customers CustomerID="ANTON">
		<CompanyName>Antonio Moreno Taquer&#237;a</CompanyName>
		<ContactName>Antonio Moreno</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(5) 555-3932</Phone>
		<FullAddress>
			<Address>Mataderos  2312</Address>
			<City>M&#233;xico D.F.</City>
			<PostalCode>05023</PostalCode>
			<Country>Mexico</Country>
		</FullAddress>
	</Customers><Customers CustomerID="AROUT">
		<CompanyName>Around the Horn</CompanyName>
		<ContactName>Thomas Hardy</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(171) 555-7788</Phone>
		<Fax>(171) 555-6750</Fax>
		<FullAddress>
			<Address>120 Hanover Sq.</Address>
			<City>London</City>
			<PostalCode>WA1 1DP</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BERGS">
		<CompanyName>Berglunds snabbk&#246;p</CompanyName>
		<ContactName>Christina Berglund</ContactName>
		<ContactTitle>Order Administrator</ContactTitle>
		<Phone>0921-12 34 65</Phone>
		<Fax>0921-12 34 67</Fax>
		<FullAddress>
			<Address>Berguvsv&#228;gen  8</Address>
			<City>Lule&#229;</City>
			<PostalCode>S-958 22</PostalCode>
			<Country>Sweden</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BLAUS">
		<CompanyName>Blauer See Delikatessen</CompanyName>
		<ContactName>Hanna Moos</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>0621-08460</Phone>
		<Fax>0621-08924</Fax>
		<FullAddress>
			<Address>Forsterstr. 57</Address>
			<City>Mannheim</City>
			<PostalCode>68306</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BLONP">
		<CompanyName>Blondesddsl p&#232;re et fils</CompanyName>
		<ContactName>Fr&#233;d&#233;rique Citeaux</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>88.60.15.31</Phone>
		<Fax>88.60.15.32</Fax>
		<FullAddress>
			<Address>24, place Kl&#233;ber</Address>
			<City>Strasbourg</City>
			<PostalCode>67000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BOLID">
		<CompanyName>B&#243;lido Comidas preparadas</CompanyName>
		<ContactName>Mart&#237;n Sommer</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(91) 555 22 82</Phone>
		<Fax>(91) 555 91 99</Fax>
		<FullAddress>
			<Address>C/ Araquil, 67</Address>
			<City>Madrid</City>
			<PostalCode>28023</PostalCode>
			<Country>Spain</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BONAP">
		<CompanyName>Bon app'</CompanyName>
		<ContactName>Laurence Lebihan</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>91.24.45.40</Phone>
		<Fax>91.24.45.41</Fax>
		<FullAddress>
			<Address>12, rue des Bouchers</Address>
			<City>Marseille</City>
			<PostalCode>13008</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BOTTM">
		<CompanyName>Bottom-Dollar Markets</CompanyName>
		<ContactName>Elizabeth Lincoln</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(604) 555-4729</Phone>
		<Fax>(604) 555-3745</Fax>
		<FullAddress>
			<Address>23 Tsawassen Blvd.</Address>
			<City>Tsawassen</City>
			<Region>BC</Region>
			<PostalCode>T2F 8M4</PostalCode>
			<Country>Canada</Country>
		</FullAddress>
	</Customers><Customers CustomerID="BSBEV">
		<CompanyName>B's Beverages</CompanyName>
		<ContactName>Victoria Ashworth</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(171) 555-1212</Phone>
		<FullAddress>
			<Address>Fauntleroy Circus</Address>
			<City>London</City>
			<PostalCode>EC2 5NT</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="CACTU">
		<CompanyName>Cactus Comidas para llevar</CompanyName>
		<ContactName>Patricio Simpson</ContactName>
		<ContactTitle>Sales Agent</ContactTitle>
		<Phone>(1) 135-5555</Phone>
		<Fax>(1) 135-4892</Fax>
		<FullAddress>
			<Address>Cerrito 333</Address>
			<City>Buenos Aires</City>
			<PostalCode>1010</PostalCode>
			<Country>Argentina</Country>
		</FullAddress>
	</Customers><Customers CustomerID="CENTC">
		<CompanyName>Centro comercial Moctezuma</CompanyName>
		<ContactName>Francisco Chang</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(5) 555-3392</Phone>
		<Fax>(5) 555-7293</Fax>
		<FullAddress>
			<Address>Sierras de Granada 9993</Address>
			<City>M&#233;xico D.F.</City>
			<PostalCode>05022</PostalCode>
			<Country>Mexico</Country>
		</FullAddress>
	</Customers><Customers CustomerID="CHOPS">
		<CompanyName>Chop-suey Chinese</CompanyName>
		<ContactName>Yang Wang</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>0452-076545</Phone>
		<FullAddress>
			<Address>Hauptstr. 29</Address>
			<City>Bern</City>
			<PostalCode>3012</PostalCode>
			<Country>Switzerland</Country>
		</FullAddress>
	</Customers><Customers CustomerID="COMMI">
		<CompanyName>Com&#233;rcio Mineiro</CompanyName>
		<ContactName>Pedro Afonso</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>(11) 555-7647</Phone>
		<FullAddress>
			<Address>Av. dos Lus&#237;adas, 23</Address>
			<City>Sao Paulo</City>
			<Region>SP</Region>
			<PostalCode>05432-043</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="CONSH">
		<CompanyName>Consolidated Holdings</CompanyName>
		<ContactName>Elizabeth Brown</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(171) 555-2282</Phone>
		<Fax>(171) 555-9199</Fax>
		<FullAddress>
			<Address>Berkeley Gardens 12  Brewery</Address>
			<City>London</City>
			<PostalCode>WX1 6LT</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="DRACD">
		<CompanyName>Drachenblut Delikatessen</CompanyName>
		<ContactName>Sven Ottlieb</ContactName>
		<ContactTitle>Order Administrator</ContactTitle>
		<Phone>0241-039123</Phone>
		<Fax>0241-059428</Fax>
		<FullAddress>
			<Address>Walserweg 21</Address>
			<City>Aachen</City>
			<PostalCode>52066</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="DUMON">
		<CompanyName>Du monde entier</CompanyName>
		<ContactName>Janine Labrune</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>40.67.88.88</Phone>
		<Fax>40.67.89.89</Fax>
		<FullAddress>
			<Address>67, rue des Cinquante Otages</Address>
			<City>Nantes</City>
			<PostalCode>44000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="EASTC">
		<CompanyName>Eastern Connection</CompanyName>
		<ContactName>Ann Devon</ContactName>
		<ContactTitle>Sales Agent</ContactTitle>
		<Phone>(171) 555-0297</Phone>
		<Fax>(171) 555-3373</Fax>
		<FullAddress>
			<Address>35 King George</Address>
			<City>London</City>
			<PostalCode>WX3 6FW</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="ERNSH">
		<CompanyName>Ernst Handel</CompanyName>
		<ContactName>Roland Mendel</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>7675-3425</Phone>
		<Fax>7675-3426</Fax>
		<FullAddress>
			<Address>Kirchgasse 6</Address>
			<City>Graz</City>
			<PostalCode>8010</PostalCode>
			<Country>Austria</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FAMIA">
		<CompanyName>Familia Arquibaldo</CompanyName>
		<ContactName>Aria Cruz</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>(11) 555-9857</Phone>
		<FullAddress>
			<Address>Rua Or&#243;s, 92</Address>
			<City>Sao Paulo</City>
			<Region>SP</Region>
			<PostalCode>05442-030</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FISSA">
		<CompanyName>FISSA Fabrica Inter. Salchichas S.A.</CompanyName>
		<ContactName>Diego Roel</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(91) 555 94 44</Phone>
		<Fax>(91) 555 55 93</Fax>
		<FullAddress>
			<Address>C/ Moralzarzal, 86</Address>
			<City>Madrid</City>
			<PostalCode>28034</PostalCode>
			<Country>Spain</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FOLIG">
		<CompanyName>Folies gourmandes</CompanyName>
		<ContactName>Martine Ranc&#233;</ContactName>
		<ContactTitle>Assistant Sales Agent</ContactTitle>
		<Phone>20.16.10.16</Phone>
		<Fax>20.16.10.17</Fax>
		<FullAddress>
			<Address>184, chauss&#233;e de Tournai</Address>
			<City>Lille</City>
			<PostalCode>59000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FOLKO">
		<CompanyName>Folk och f&#228; HB</CompanyName>
		<ContactName>Maria Larsson</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>0695-34 67 21</Phone>
		<FullAddress>
			<Address>&#197;kergatan 24</Address>
			<City>Br&#228;cke</City>
			<PostalCode>S-844 67</PostalCode>
			<Country>Sweden</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FRANK">
		<CompanyName>Frankenversand</CompanyName>
		<ContactName>Peter Franken</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>089-0877310</Phone>
		<Fax>089-0877451</Fax>
		<FullAddress>
			<Address>Berliner Platz 43</Address>
			<City>M&#252;nchen</City>
			<PostalCode>80805</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FRANR">
		<CompanyName>France restauration</CompanyName>
		<ContactName>Carine Schmitt</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>40.32.21.21</Phone>
		<Fax>40.32.21.20</Fax>
		<FullAddress>
			<Address>54, rue Royale</Address>
			<City>Nantes</City>
			<PostalCode>44000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FRANS">
		<CompanyName>Franchi S.p.A.</CompanyName>
		<ContactName>Paolo Accorti</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>011-4988260</Phone>
		<Fax>011-4988261</Fax>
		<FullAddress>
			<Address>Via Monte Bianco 34</Address>
			<City>Torino</City>
			<PostalCode>10100</PostalCode>
			<Country>Italy</Country>
		</FullAddress>
	</Customers><Customers CustomerID="FURIB">
		<CompanyName>Furia Bacalhau e Frutos do Mar</CompanyName>
		<ContactName>Lino Rodriguez</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(1) 354-2534</Phone>
		<Fax>(1) 354-2535</Fax>
		<FullAddress>
			<Address>Jardim das rosas n. 32</Address>
			<City>Lisboa</City>
			<PostalCode>1675</PostalCode>
			<Country>Portugal</Country>
		</FullAddress>
	</Customers><Customers CustomerID="GALED">
		<CompanyName>Galer&#237;a del gastr&#243;nomo</CompanyName>
		<ContactName>Eduardo Saavedra</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(93) 203 4560</Phone>
		<Fax>(93) 203 4561</Fax>
		<FullAddress>
			<Address>Rambla de Catalu&#241;a, 23</Address>
			<City>Barcelona</City>
			<PostalCode>08022</PostalCode>
			<Country>Spain</Country>
		</FullAddress>
	</Customers><Customers CustomerID="GODOS">
		<CompanyName>Godos Cocina T&#237;pica</CompanyName>
		<ContactName>Jos&#233; Pedro Freyre</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(95) 555 82 82</Phone>
		<FullAddress>
			<Address>C/ Romero, 33</Address>
			<City>Sevilla</City>
			<PostalCode>41101</PostalCode>
			<Country>Spain</Country>
		</FullAddress>
	</Customers><Customers CustomerID="GOURL">
		<CompanyName>Gourmet Lanchonetes</CompanyName>
		<ContactName>Andr&#233; Fonseca</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>(11) 555-9482</Phone>
		<FullAddress>
			<Address>Av. Brasil, 442</Address>
			<City>Campinas</City>
			<Region>SP</Region>
			<PostalCode>04876-786</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="GREAL">
		<CompanyName>Great Lakes Food Market</CompanyName>
		<ContactName>Howard Snyder</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(503) 555-7555</Phone>
		<FullAddress>
			<Address>2732 Baker Blvd.</Address>
			<City>Eugene</City>
			<Region>OR</Region>
			<PostalCode>97403</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="GROSR">
		<CompanyName>GROSELLA-Restaurante</CompanyName>
		<ContactName>Manuel Pereira</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(2) 283-2951</Phone>
		<Fax>(2) 283-3397</Fax>
		<FullAddress>
			<Address>5&#170; Ave. Los Palos Grandes</Address>
			<City>Caracas</City>
			<Region>DF</Region>
			<PostalCode>1081</PostalCode>
			<Country>Venezuela</Country>
		</FullAddress>
	</Customers><Customers CustomerID="HANAR">
		<CompanyName>Hanari Carnes</CompanyName>
		<ContactName>Mario Pontes</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(21) 555-0091</Phone>
		<Fax>(21) 555-8765</Fax>
		<FullAddress>
			<Address>Rua do Pa&#231;o, 67</Address>
			<City>Rio de Janeiro</City>
			<Region>RJ</Region>
			<PostalCode>05454-876</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="HILAA">
		<CompanyName>HILARION-Abastos</CompanyName>
		<ContactName>Carlos Hern&#225;ndez</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(5) 555-1340</Phone>
		<Fax>(5) 555-1948</Fax>
		<FullAddress>
			<Address>Carrera 22 con Ave. Carlos Soublette #8-35</Address>
			<City>San Crist&#243;bal</City>
			<Region>T&#225;chira</Region>
			<PostalCode>5022</PostalCode>
			<Country>Venezuela</Country>
		</FullAddress>
	</Customers><Customers CustomerID="HUNGC">
		<CompanyName>Hungry Coyote Import Store</CompanyName>
		<ContactName>Yoshi Latimer</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(503) 555-6874</Phone>
		<Fax>(503) 555-2376</Fax>
		<FullAddress>
			<Address>City Center Plaza 516 Main St.</Address>
			<City>Elgin</City>
			<Region>OR</Region>
			<PostalCode>97827</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="HUNGO">
		<CompanyName>Hungry Owl All-Night Grocers</CompanyName>
		<ContactName>Patricia McKenna</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>2967 542</Phone>
		<Fax>2967 3333</Fax>
		<FullAddress>
			<Address>8 Johnstown Road</Address>
			<City>Cork</City>
			<Region>Co. Cork</Region>
			<Country>Ireland</Country>
		</FullAddress>
	</Customers><Customers CustomerID="ISLAT">
		<CompanyName>Island Trading</CompanyName>
		<ContactName>Helen Bennett</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(198) 555-8888</Phone>
		<FullAddress>
			<Address>Garden House Crowther Way</Address>
			<City>Cowes</City>
			<Region>Isle of Wight</Region>
			<PostalCode>PO31 7PJ</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="KOENE">
		<CompanyName>K&#246;niglich Essen</CompanyName>
		<ContactName>Philip Cramer</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>0555-09876</Phone>
		<FullAddress>
			<Address>Maubelstr. 90</Address>
			<City>Brandenburg</City>
			<PostalCode>14776</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LACOR">
		<CompanyName>La corne d'abondance</CompanyName>
		<ContactName>Daniel Tonini</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>30.59.84.10</Phone>
		<Fax>30.59.85.11</Fax>
		<FullAddress>
			<Address>67, avenue de l'Europe</Address>
			<City>Versailles</City>
			<PostalCode>78000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LAMAI">
		<CompanyName>La maison d'Asie</CompanyName>
		<ContactName>Annette Roulet</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>61.77.61.10</Phone>
		<Fax>61.77.61.11</Fax>
		<FullAddress>
			<Address>1 rue Alsace-Lorraine</Address>
			<City>Toulouse</City>
			<PostalCode>31000</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LAUGB">
		<CompanyName>Laughing Bacchus Wine Cellars</CompanyName>
		<ContactName>Yoshi Tannamuri</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>(604) 555-3392</Phone>
		<Fax>(604) 555-7293</Fax>
		<FullAddress>
			<Address>1900 Oak St.</Address>
			<City>Vancouver</City>
			<Region>BC</Region>
			<PostalCode>V3F 2K1</PostalCode>
			<Country>Canada</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LAZYK">
		<CompanyName>Lazy K Kountry Store</CompanyName>
		<ContactName>John Steel</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(509) 555-7969</Phone>
		<Fax>(509) 555-6221</Fax>
		<FullAddress>
			<Address>12 Orchestra Terrace</Address>
			<City>Walla Walla</City>
			<Region>WA</Region>
			<PostalCode>99362</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LEHMS">
		<CompanyName>Lehmanns Marktstand</CompanyName>
		<ContactName>Renate Messner</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>069-0245984</Phone>
		<Fax>069-0245874</Fax>
		<FullAddress>
			<Address>Magazinweg 7</Address>
			<City>Frankfurt a.M.</City>
			<PostalCode>60528</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LETSS">
		<CompanyName>Let's Stop N Shop</CompanyName>
		<ContactName>Jaime Yorres</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(415) 555-5938</Phone>
		<FullAddress>
			<Address>87 Polk St. Suite 5</Address>
			<City>San Francisco</City>
			<Region>CA</Region>
			<PostalCode>94117</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LILAS">
		<CompanyName>LILA-Supermercado</CompanyName>
		<ContactName>Carlos Gonz&#225;lez</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(9) 331-6954</Phone>
		<Fax>(9) 331-7256</Fax>
		<FullAddress>
			<Address>Carrera 52 con Ave. Bol&#237;var #65-98 Llano Largo</Address>
			<City>Barquisimeto</City>
			<Region>Lara</Region>
			<PostalCode>3508</PostalCode>
			<Country>Venezuela</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LINOD">
		<CompanyName>LINO-Delicateses</CompanyName>
		<ContactName>Felipe Izquierdo</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(8) 34-56-12</Phone>
		<Fax>(8) 34-93-93</Fax>
		<FullAddress>
			<Address>Ave. 5 de Mayo Porlamar</Address>
			<City>I. de Margarita</City>
			<Region>Nueva Esparta</Region>
			<PostalCode>4980</PostalCode>
			<Country>Venezuela</Country>
		</FullAddress>
	</Customers><Customers CustomerID="LONEP">
		<CompanyName>Lonesome Pine Restaurant</CompanyName>
		<ContactName>Fran Wilson</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(503) 555-9573</Phone>
		<Fax>(503) 555-9646</Fax>
		<FullAddress>
			<Address>89 Chiaroscuro Rd.</Address>
			<City>Portland</City>
			<Region>OR</Region>
			<PostalCode>97219</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="MAGAA">
		<CompanyName>Magazzini Alimentari Riuniti</CompanyName>
		<ContactName>Giovanni Rovelli</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>035-640230</Phone>
		<Fax>035-640231</Fax>
		<FullAddress>
			<Address>Via Ludovico il Moro 22</Address>
			<City>Bergamo</City>
			<PostalCode>24100</PostalCode>
			<Country>Italy</Country>
		</FullAddress>
	</Customers><Customers CustomerID="MAISD">
		<CompanyName>Maison Dewey</CompanyName>
		<ContactName>Catherine Dewey</ContactName>
		<ContactTitle>Sales Agent</ContactTitle>
		<Phone>(02) 201 24 67</Phone>
		<Fax>(02) 201 24 68</Fax>
		<FullAddress>
			<Address>Rue Joseph-Bens 532</Address>
			<City>Bruxelles</City>
			<PostalCode>B-1180</PostalCode>
			<Country>Belgium</Country>
		</FullAddress>
	</Customers><Customers CustomerID="MEREP">
		<CompanyName>M&#232;re Paillarde</CompanyName>
		<ContactName>Jean Fresni&#232;re</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>(514) 555-8054</Phone>
		<Fax>(514) 555-8055</Fax>
		<FullAddress>
			<Address>43 rue St. Laurent</Address>
			<City>Montr&#233;al</City>
			<Region>Qu&#233;bec</Region>
			<PostalCode>H1J 1C3</PostalCode>
			<Country>Canada</Country>
		</FullAddress>
	</Customers><Customers CustomerID="MORGK">
		<CompanyName>Morgenstern Gesundkost</CompanyName>
		<ContactName>Alexander Feuer</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>0342-023176</Phone>
		<FullAddress>
			<Address>Heerstr. 22</Address>
			<City>Leipzig</City>
			<PostalCode>04179</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="NORTS">
		<CompanyName>North/South</CompanyName>
		<ContactName>Simon Crowther</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>(171) 555-7733</Phone>
		<Fax>(171) 555-2530</Fax>
		<FullAddress>
			<Address>South House 300 Queensbridge</Address>
			<City>London</City>
			<PostalCode>SW7 1RZ</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="OCEAN">
		<CompanyName>Oc&#233;ano Atl&#225;ntico Ltda.</CompanyName>
		<ContactName>Yvonne Moncada</ContactName>
		<ContactTitle>Sales Agent</ContactTitle>
		<Phone>(1) 135-5333</Phone>
		<Fax>(1) 135-5535</Fax>
		<FullAddress>
			<Address>Ing. Gustavo Moncada 8585 Piso 20-A</Address>
			<City>Buenos Aires</City>
			<PostalCode>1010</PostalCode>
			<Country>Argentina</Country>
		</FullAddress>
	</Customers><Customers CustomerID="OLDWO">
		<CompanyName>Old World Delicatessen</CompanyName>
		<ContactName>Rene Phillips</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(907) 555-7584</Phone>
		<Fax>(907) 555-2880</Fax>
		<FullAddress>
			<Address>2743 Bering St.</Address>
			<City>Anchorage</City>
			<Region>AK</Region>
			<PostalCode>99508</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="OTTIK">
		<CompanyName>Ottilies K&#228;seladen</CompanyName>
		<ContactName>Henriette Pfalzheim</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>0221-0644327</Phone>
		<Fax>0221-0765721</Fax>
		<FullAddress>
			<Address>Mehrheimerstr. 369</Address>
			<City>K&#246;ln</City>
			<PostalCode>50739</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="PARIS">
		<CompanyName>Paris sp&#233;cialit&#233;s</CompanyName>
		<ContactName>Marie Bertrand</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(1) 42.34.22.66</Phone>
		<Fax>(1) 42.34.22.77</Fax>
		<FullAddress>
			<Address>265, boulevard Charonne</Address>
			<City>Paris</City>
			<PostalCode>75012</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="PERIC">
		<CompanyName>Pericles Comidas cl&#225;sicas</CompanyName>
		<ContactName>Guillermo Fern&#225;ndez</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(5) 552-3745</Phone>
		<Fax>(5) 545-3745</Fax>
		<FullAddress>
			<Address>Calle Dr. Jorge Cash 321</Address>
			<City>M&#233;xico D.F.</City>
			<PostalCode>05033</PostalCode>
			<Country>Mexico</Country>
		</FullAddress>
	</Customers><Customers CustomerID="PICCO">
		<CompanyName>Piccolo und mehr</CompanyName>
		<ContactName>Georg Pipps</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>6562-9722</Phone>
		<Fax>6562-9723</Fax>
		<FullAddress>
			<Address>Geislweg 14</Address>
			<City>Salzburg</City>
			<PostalCode>5020</PostalCode>
			<Country>Austria</Country>
		</FullAddress>
	</Customers><Customers CustomerID="PRINI">
		<CompanyName>Princesa Isabel Vinhos</CompanyName>
		<ContactName>Isabel de Castro</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(1) 356-5634</Phone>
		<FullAddress>
			<Address>Estrada da sa&#250;de n. 58</Address>
			<City>Lisboa</City>
			<PostalCode>1756</PostalCode>
			<Country>Portugal</Country>
		</FullAddress>
	</Customers><Customers CustomerID="QUEDE">
		<CompanyName>Que Del&#237;cia</CompanyName>
		<ContactName>Bernardo Batista</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(21) 555-4252</Phone>
		<Fax>(21) 555-4545</Fax>
		<FullAddress>
			<Address>Rua da Panificadora, 12</Address>
			<City>Rio de Janeiro</City>
			<Region>RJ</Region>
			<PostalCode>02389-673</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="QUEEN">
		<CompanyName>Queen Cozinha</CompanyName>
		<ContactName>L&#250;cia Carvalho</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>(11) 555-1189</Phone>
		<FullAddress>
			<Address>Alameda dos Can&#224;rios, 891</Address>
			<City>Sao Paulo</City>
			<Region>SP</Region>
			<PostalCode>05487-020</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="QUICK">
		<CompanyName>QUICK-Stop</CompanyName>
		<ContactName>Horst Kloss</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>0372-035188</Phone>
		<FullAddress>
			<Address>Taucherstra&#223;e 10</Address>
			<City>Cunewalde</City>
			<PostalCode>01307</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="RANCH">
		<CompanyName>Rancho grande</CompanyName>
		<ContactName>Sergio Guti&#233;rrez</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(1) 123-5555</Phone>
		<Fax>(1) 123-5556</Fax>
		<FullAddress>
			<Address>Av. del Libertador 900</Address>
			<City>Buenos Aires</City>
			<PostalCode>1010</PostalCode>
			<Country>Argentina</Country>
		</FullAddress>
	</Customers><Customers CustomerID="RATTC">
		<CompanyName>Rattlesnake Canyon Grocery</CompanyName>
		<ContactName>Paula Wilson</ContactName>
		<ContactTitle>Assistant Sales Representative</ContactTitle>
		<Phone>(505) 555-5939</Phone>
		<Fax>(505) 555-3620</Fax>
		<FullAddress>
			<Address>2817 Milton Dr.</Address>
			<City>Albuquerque</City>
			<Region>NM</Region>
			<PostalCode>87110</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="REGGC">
		<CompanyName>Reggiani Caseifici</CompanyName>
		<ContactName>Maurizio Moroni</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>0522-556721</Phone>
		<Fax>0522-556722</Fax>
		<FullAddress>
			<Address>Strada Provinciale 124</Address>
			<City>Reggio Emilia</City>
			<PostalCode>42100</PostalCode>
			<Country>Italy</Country>
		</FullAddress>
	</Customers><Customers CustomerID="RICAR">
		<CompanyName>Ricardo Adocicados</CompanyName>
		<ContactName>Janete Limeira</ContactName>
		<ContactTitle>Assistant Sales Agent</ContactTitle>
		<Phone>(21) 555-3412</Phone>
		<FullAddress>
			<Address>Av. Copacabana, 267</Address>
			<City>Rio de Janeiro</City>
			<Region>RJ</Region>
			<PostalCode>02389-890</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="RICSU">
		<CompanyName>Richter Supermarkt</CompanyName>
		<ContactName>Michael Holz</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>0897-034214</Phone>
		<FullAddress>
			<Address>Grenzacherweg 237</Address>
			<City>Gen&#232;ve</City>
			<PostalCode>1203</PostalCode>
			<Country>Switzerland</Country>
		</FullAddress>
	</Customers><Customers CustomerID="ROMEY">
		<CompanyName>Romero y tomillo</CompanyName>
		<ContactName>Alejandra Camino</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(91) 745 6200</Phone>
		<Fax>(91) 745 6210</Fax>
		<FullAddress>
			<Address>Gran V&#237;a, 1</Address>
			<City>Madrid</City>
			<PostalCode>28001</PostalCode>
			<Country>Spain</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SANTG">
		<CompanyName>Sant&#233; Gourmet</CompanyName>
		<ContactName>Jonas Bergulfsen</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>07-98 92 35</Phone>
		<Fax>07-98 92 47</Fax>
		<FullAddress>
			<Address>Erling Skakkes gate 78</Address>
			<City>Stavern</City>
			<PostalCode>4110</PostalCode>
			<Country>Norway</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SAVEA">
		<CompanyName>Save-a-lot Markets</CompanyName>
		<ContactName>Jose Pavarotti</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(208) 555-8097</Phone>
		<FullAddress>
			<Address>187 Suffolk Ln.</Address>
			<City>Boise</City>
			<Region>ID</Region>
			<PostalCode>83720</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SEVES">
		<CompanyName>Seven Seas Imports</CompanyName>
		<ContactName>Hari Kumar</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(171) 555-1717</Phone>
		<Fax>(171) 555-5646</Fax>
		<FullAddress>
			<Address>90 Wadhurst Rd.</Address>
			<City>London</City>
			<PostalCode>OX15 4NB</PostalCode>
			<Country>UK</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SIMOB">
		<CompanyName>Simons bistro</CompanyName>
		<ContactName>Jytte Petersen</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>31 12 34 56</Phone>
		<Fax>31 13 35 57</Fax>
		<FullAddress>
			<Address>Vinb&#230;ltet 34</Address>
			<City>Kobenhavn</City>
			<PostalCode>1734</PostalCode>
			<Country>Denmark</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SPECD">
		<CompanyName>Sp&#233;cialit&#233;s du monde</CompanyName>
		<ContactName>Dominique Perrier</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(1) 47.55.60.10</Phone>
		<Fax>(1) 47.55.60.20</Fax>
		<FullAddress>
			<Address>25, rue Lauriston</Address>
			<City>Paris</City>
			<PostalCode>75016</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SPLIR">
		<CompanyName>Split Rail Beer &amp; Ale</CompanyName>
		<ContactName>Art Braunschweiger</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(307) 555-4680</Phone>
		<Fax>(307) 555-6525</Fax>
		<FullAddress>
			<Address>P.O. Box 555</Address>
			<City>Lander</City>
			<Region>WY</Region>
			<PostalCode>82520</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="SUPRD">
		<CompanyName>Supr&#234;mes d&#233;lices</CompanyName>
		<ContactName>Pascale Cartrain</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>(071) 23 67 22 20</Phone>
		<Fax>(071) 23 67 22 21</Fax>
		<FullAddress>
			<Address>Boulevard Tirou, 255</Address>
			<City>Charleroi</City>
			<PostalCode>B-6000</PostalCode>
			<Country>Belgium</Country>
		</FullAddress>
	</Customers><Customers CustomerID="THEBI">
		<CompanyName>The Big Cheese</CompanyName>
		<ContactName>Liz Nixon</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>(503) 555-3612</Phone>
		<FullAddress>
			<Address>89 Jefferson Way Suite 2</Address>
			<City>Portland</City>
			<Region>OR</Region>
			<PostalCode>97201</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="THECR">
		<CompanyName>The Cracker Box</CompanyName>
		<ContactName>Liu Wong</ContactName>
		<ContactTitle>Marketing Assistant</ContactTitle>
		<Phone>(406) 555-5834</Phone>
		<Fax>(406) 555-8083</Fax>
		<FullAddress>
			<Address>55 Grizzly Peak Rd.</Address>
			<City>Butte</City>
			<Region>MT</Region>
			<PostalCode>59801</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="TOMSP">
		<CompanyName>Toms Spezialit&#228;ten</CompanyName>
		<ContactName>Karin Josephs</ContactName>
		<ContactTitle>Marketing Manager</ContactTitle>
		<Phone>0251-031259</Phone>
		<Fax>0251-035695</Fax>
		<FullAddress>
			<Address>Luisenstr. 48</Address>
			<City>M&#252;nster</City>
			<PostalCode>44087</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="TORTU">
		<CompanyName>Tortuga Restaurante</CompanyName>
		<ContactName>Miguel Angel Paolino</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(5) 555-2933</Phone>
		<FullAddress>
			<Address>Avda. Azteca 123</Address>
			<City>M&#233;xico D.F.</City>
			<PostalCode>05033</PostalCode>
			<Country>Mexico</Country>
		</FullAddress>
	</Customers><Customers CustomerID="TRADH">
		<CompanyName>Tradi&#231;&#227;o Hipermercados</CompanyName>
		<ContactName>Anabela Domingues</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>(11) 555-2167</Phone>
		<Fax>(11) 555-2168</Fax>
		<FullAddress>
			<Address>Av. In&#234;s de Castro, 414</Address>
			<City>Sao Paulo</City>
			<Region>SP</Region>
			<PostalCode>05634-030</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="TRAIH">
		<CompanyName>Trail's Head Gourmet Provisioners</CompanyName>
		<ContactName>Helvetius Nagy</ContactName>
		<ContactTitle>Sales Associate</ContactTitle>
		<Phone>(206) 555-8257</Phone>
		<Fax>(206) 555-2174</Fax>
		<FullAddress>
			<Address>722 DaVinci Blvd.</Address>
			<City>Kirkland</City>
			<Region>WA</Region>
			<PostalCode>98034</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="VAFFE">
		<CompanyName>Vaffeljernet</CompanyName>
		<ContactName>Palle Ibsen</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>86 21 32 43</Phone>
		<Fax>86 22 33 44</Fax>
		<FullAddress>
			<Address>Smagsloget 45</Address>
			<City>&#197;rhus</City>
			<PostalCode>8200</PostalCode>
			<Country>Denmark</Country>
		</FullAddress>
	</Customers><Customers CustomerID="VICTE">
		<CompanyName>Victuailles en stock</CompanyName>
		<ContactName>Mary Saveley</ContactName>
		<ContactTitle>Sales Agent</ContactTitle>
		<Phone>78.32.54.86</Phone>
		<Fax>78.32.54.87</Fax>
		<FullAddress>
			<Address>2, rue du Commerce</Address>
			<City>Lyon</City>
			<PostalCode>69004</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="VINET">
		<CompanyName>Vins et alcools Chevalier</CompanyName>
		<ContactName>Paul Henriot</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>26.47.15.10</Phone>
		<Fax>26.47.15.11</Fax>
		<FullAddress>
			<Address>59 rue de l'Abbaye</Address>
			<City>Reims</City>
			<PostalCode>51100</PostalCode>
			<Country>France</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WANDK">
		<CompanyName>Die Wandernde Kuh</CompanyName>
		<ContactName>Rita M&#252;ller</ContactName>
		<ContactTitle>Sales Representative</ContactTitle>
		<Phone>0711-020361</Phone>
		<Fax>0711-035428</Fax>
		<FullAddress>
			<Address>Adenauerallee 900</Address>
			<City>Stuttgart</City>
			<PostalCode>70563</PostalCode>
			<Country>Germany</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WARTH">
		<CompanyName>Wartian Herkku</CompanyName>
		<ContactName>Pirkko Koskitalo</ContactName>
		<ContactTitle>Accounting Manager</ContactTitle>
		<Phone>981-443655</Phone>
		<Fax>981-443655</Fax>
		<FullAddress>
			<Address>Torikatu 38</Address>
			<City>Oulu</City>
			<PostalCode>90110</PostalCode>
			<Country>Finland</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WELLI">
		<CompanyName>Wellington Importadora</CompanyName>
		<ContactName>Paula Parente</ContactName>
		<ContactTitle>Sales Manager</ContactTitle>
		<Phone>(14) 555-8122</Phone>
		<FullAddress>
			<Address>Rua do Mercado, 12</Address>
			<City>Resende</City>
			<Region>SP</Region>
			<PostalCode>08737-363</PostalCode>
			<Country>Brazil</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WHITC">
		<CompanyName>White Clover Markets</CompanyName>
		<ContactName>Karl Jablonski</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(206) 555-4112</Phone>
		<Fax>(206) 555-4115</Fax>
		<FullAddress>
			<Address>305 - 14th Ave. S. Suite 3B</Address>
			<City>Seattle</City>
			<Region>WA</Region>
			<PostalCode>98128</PostalCode>
			<Country>USA</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WILMK">
		<CompanyName>Wilman Kala</CompanyName>
		<ContactName>Matti Karttunen</ContactName>
		<ContactTitle>Owner/Marketing Assistant</ContactTitle>
		<Phone>90-224 8858</Phone>
		<Fax>90-224 8858</Fax>
		<FullAddress>
			<Address>Keskuskatu 45</Address>
			<City>Helsinki</City>
			<PostalCode>21240</PostalCode>
			<Country>Finland</Country>
		</FullAddress>
	</Customers><Customers CustomerID="WOLZA">
		<CompanyName>Wolski  Zajazd</CompanyName>
		<ContactName>Zbyszek Piestrzeniewicz</ContactName>
		<ContactTitle>Owner</ContactTitle>
		<Phone>(26) 642-7012</Phone>
		<Fax>(26) 642-7012</Fax>
		<FullAddress>
			<Address>ul. Filtrowa 68</Address>
			<City>Warszawa</City>
			<PostalCode>01-012</PostalCode>
			<Country>Poland</Country>
		</FullAddress>
	</Customers></root>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Axes086"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;root&gt; &lt;west mark="w0"/&gt;&lt;center mark="c0"&gt;Text in center&lt;/center&gt;&lt;east mark="e0"&gt;Text in east&lt;/east&gt;&lt;/root&gt;</response-string>
    <description> Parent of attribute node</description>
    <created by="Asad Jawahar" on="2003-02-25"/>
    <environment ref="Tree1Text"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<root> {//@*/..} </root>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<root><west mark="w0" /><center mark="c0">Text in center</center><east mark="e0">Text in east</east></root>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Axes087"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;root&gt; &lt;retail&gt;62.50 USD&lt;/retail&gt;&lt;wholesale&gt;55.00 USD&lt;/wholesale&gt;&lt;internal&gt;31.25 USD&lt;/internal&gt;&lt;/root&gt;</response-string>
    <description> Parent of text nodes</description>
    <created by="Asad Jawahar" on="2003-02-25"/>
    <environment ref="xq311B"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<root> {/doc/part/*/text()/..} </root>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<root><retail>62.50 USD</retail><wholesale>55.00 USD</wholesale><internal>31.25 USD</internal></root>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Axes088"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Empty step, should result in parse error</description>
    <created by="Asad Jawahar" on="2003-02-25"/>
    <test>/*/</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="Axes089"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>XQuery program to perform a knight&apos;s tour of the chessboard.Author: Michael H. KayThis version modified to use XQuery 1.0, with sequences and functions.This query does not use a source document.There is an optional parameter, start, which can be set to any square on thechessboard, e.g. a3 or h5. XQuery does not allow parameters to be given adefault value, so the parameter is mandatory.There is a second optional parameter, end, which indicates that the processing should stopafter a given number of steps. This can be used to animate the display of the tour. Thisworks especially well when the query is compiled into a Java servlet.The output is an HTML display of the completed tour.Internally, the following data representations are used:* A square on the chessboard: represented as a number in the range 0 to 63* A state of the chessboard: a sequence of 64 integers, each containing a move number.A square that has not been visited yet is represented by a zero.* A set of possible moves: represented as a sequence of integers,* each integer representing the number of the destination squarestart-column is an integer in the range 0-7start-row is an integer in the range 0-7, with zero at the topThis function controls the processing. It does not access the source document.Validate the input parameterSet up the empty boardPlace the knight on the board at the chosen starting positionEvaluate the knight&apos;s tourproduce the HTML outputrange 0 to 63This function places a knight on the board at a given square. The returned value isthe supplied board, modified to indicate that the knight reached a given square at a givenmoverange 0 to 63This function takes the board in a given state, decides on the next move to make,and then calls itself recursively to make further moves, until the knight has completedhis tour of the board. It returns the board in its final state.determine the possible moves that the knight can maketry these moves in turn until one is found that worksrange 0 to 63This function tries a set of possible moves that the knight can makefrom a given position. It determines the best move as the one to the square withfewest exits. If this is unsuccessful then it can backtrack andtry another move; however this turns out rarely to be necessary.The function makes the selected move, and then calls make-moves() to makesubsequent moves, returning the final state of the board.if there is no possible move, we return the special value () as the final stateof the board, to indicate to the caller that we got stuckrange 0 to 63this function, given the state of the board and a set of possible moves,determines which of the moves is the best one. It then makes this move,and proceeds recursively to make further moves, eventually returning thefinal state of the board.if at least one move is possible, find the best onefind the list of possible moves excluding the best oneupdate the board to make the move chosen as the best onenow make further moves using a recursive call, until the board is completecount($next-board[.=0])!=0if the final board has the special value &apos;()&apos;, we got stuck, and have to choosethe next best of the possible moves. This is done by a recursive call. I thoughtthat the knight never did get stuck, but it does: if the starting square is f1,the wrong choice is made at move 58, and needs to be reversed.This function finds from among the possible moves, the one with fewest exits.It calls itself recursively.split the list of possible moves into the first move and the rest of the movestry making the first movesee how many moves would be possible the next timedetermine whether this trial move has fewer exits than those considered up till nowdetermine which is the best move (the one with fewest exits) so farif there are other possible moves, consider them too, using a recursive call.Otherwise return the best move found.This function, given the knight&apos;s position on the board, returns the set of squareshe can move to. The squares will be ones that have not been visited beforeOutput the board in HTML format</description>
    <created by="Michael Kay" on="2007-10-02"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[xquery version "1.0"; declare namespace saxon="http://example.com/VendorNamespace"; declare namespace tour="http://example.com/Knight'sTour"; (: XQuery program to perform a knight's tour of the chessboard. Author: Michael H. Kay Date: 26 June 2003 This version modified to use XQuery 1.0, with sequences and functions. This query does not use a source document. There is an optional parameter, start, which can be set to any square on the chessboard, e.g. a3 or h5. XQuery does not allow parameters to be given a default value, so the parameter is mandatory. There is a second optional parameter, end, which indicates that the processing should stop after a given number of steps. This can be used to animate the display of the tour. This works especially well when the query is compiled into a Java servlet. The output is an HTML display of the completed tour. Internally, the following data representations are used: * A square on the chessboard: represented as a number in the range 0 to 63 * A state of the chessboard: a sequence of 64 integers, each containing a move number. A square that has not been visited yet is represented by a zero. * A set of possible moves: represented as a sequence of integers, * each integer representing the number of the destination square :) declare option saxon:default "'a1'"; declare variable $start as xs:string := 'a1'; declare option saxon:default "'64'"; declare variable $end as xs:string := '64'; declare variable $endd as xs:integer := xs:integer($end); declare variable $start-column as xs:integer := xs:integer(translate(substring($start, 1, 1), 'abcdefgh', '01234567')); declare variable $start-row as xs:integer := 8 - xs:integer(substring($start, 2, 1)); declare function tour:main () as element() { if (not(string-length($start)=2) or not(translate(substring($start,1,1), 'abcdefgh', 'aaaaaaaa')='a') or not(translate(substring($start,2,1), '12345678', '11111111')='1')) then error((), "Invalid start parameter: try say 'a1' or 'g6'") else if (not($endd = 1 to 64)) then error((), "Invalid end parameter: must be in range 1 to 64") else let $empty-board as xs:integer* := for $i in (1 to 64) return 0 let $initial-board as xs:integer* := tour:place-knight(1, $empty-board, $start-row * 8 + $start-column) let $final-board as xs:integer* := tour:make-moves(2, $initial-board, $start-row * 8 + $start-column) return tour:print-board($final-board) }; declare function tour:place-knight ( $move as xs:integer, $board as xs:integer*, $square as xs:integer ) as xs:integer* { (: This function places a knight on the board at a given square. The returned value is the supplied board, modified to indicate that the knight reached a given square at a given move :) for $i in 1 to 64 return if ($i = $square + 1) then $move else $board[$i] }; declare function tour:make-moves ( $move as xs:integer, $board as xs:integer*, $square as xs:integer ) as xs:integer* { (: This function takes the board in a given state, decides on the next move to make, and then calls itself recursively to make further moves, until the knight has completed his tour of the board. It returns the board in its final state. :) let $possible-move-list as xs:integer* := tour:list-possible-moves($board, $square) return tour:try-possible-moves($move, $board, $square, $possible-move-list) }; declare function tour:try-possible-moves ( $move as xs:integer, $board as xs:integer*, $square as xs:integer, $possible-moves as xs:integer* ) as xs:integer* { (: This function tries a set of possible moves that the knight can make from a given position. It determines the best move as the one to the square with fewest exits. If this is unsuccessful then it can backtrack and try another move; however this turns out rarely to be necessary. The function makes the selected move, and then calls make-moves() to make subsequent moves, returning the final state of the board. :) if (count($possible-moves)!=0) then tour:make-best-move($move, $board, $square, one-or-more($possible-moves)) else () (: if there is no possible move, we return the special value () as the final state of the board, to indicate to the caller that we got stuck :) }; declare function tour:make-best-move ( $move as xs:integer, $board as xs:integer*, $square as xs:integer, $possible-moves as xs:integer+ ) as xs:integer* { (: this function, given the state of the board and a set of possible moves, determines which of the moves is the best one. It then makes this move, and proceeds recursively to make further moves, eventually returning the final state of the board. :) let $best-move as xs:integer := tour:find-best-move($board, $possible-moves, 9, 999) let $other-possible-moves as xs:integer* := $possible-moves[. != $best-move] let $next-board as xs:integer* := tour:place-knight($move, $board, $best-move) let $final-board as xs:integer* := if ($move < $endd) then tour:make-moves($move+1, $next-board, $best-move) else $next-board (: if the final board has the special value '()', we got stuck, and have to choose the next best of the possible moves. This is done by a recursive call. I thought that the knight never did get stuck, but it does: if the starting square is f1, the wrong choice is made at move 58, and needs to be reversed. :) return if (empty($final-board)) then tour:try-possible-moves($move, $board, $square, $other-possible-moves) else $final-board }; declare function tour:find-best-move ( $board as xs:integer*, $possible-moves as xs:integer+, $fewest-exits as xs:integer, $best-so-far as xs:integer ) as xs:integer { (: This function finds from among the possible moves, the one with fewest exits. It calls itself recursively. :) let $trial-move as xs:integer := $possible-moves[1] let $other-possible-moves as xs:integer* := $possible-moves[position() > 1] let $trial-board as xs:integer* := tour:place-knight(99, $board, $trial-move) let $trial-move-exit-list as xs:integer* := tour:list-possible-moves($trial-board, $trial-move) let $number-of-exits as xs:integer := count($trial-move-exit-list) let $minimum-exits as xs:integer := min(($number-of-exits, $fewest-exits)) let $new-best-so-far as xs:integer := if ($number-of-exits < $fewest-exits) then $trial-move else $best-so-far (: if there are other possible moves, consider them too, using a recursive call. Otherwise return the best move found. :) return if (count($other-possible-moves)!=0) then tour:find-best-move($board, one-or-more($other-possible-moves), $minimum-exits, $new-best-so-far) else $new-best-so-far }; declare function tour:list-possible-moves ( $board as xs:integer*, $square as xs:integer ) as xs:integer* { (: This function, given the knight's position on the board, returns the set of squares he can move to. The squares will be ones that have not been visited before :) let $row as xs:integer := $square idiv 8 let $column as xs:integer := $square mod 8 return (if ($row > 1 and $column > 0 and $board[($square - 17) + 1]=0) then $square - 17 else (), if ($row > 1 and $column < 7 and $board[($square - 15) + 1]=0) then $square - 15 else (), if ($row > 0 and $column > 1 and $board[($square - 10) + 1]=0) then $square - 10 else (), if ($row > 0 and $column < 6 and $board[($square - 6) + 1]=0) then $square - 6 else (), if ($row < 6 and $column > 0 and $board[($square + 15) + 1]=0) then $square + 15 else (), if ($row < 6 and $column < 7 and $board[($square + 17) + 1]=0) then $square + 17 else (), if ($row < 7 and $column > 1 and $board[($square + 6) + 1]=0) then $square + 6 else (), if ($row < 7 and $column < 6 and $board[($square + 10) + 1]=0) then $square + 10 else () ) }; declare function tour:print-board ( $board as xs:integer* ) as element() { <html> <head> <title>Knight's tour</title> </head> <body> <div align="center"> <h1>Knight's tour starting at {$start}</h1> <table border="1" cellpadding="4"> {for $row in 0 to 7 return <tr> {for $column in 0 to 7 let $color := if ((($row + $column) mod 2)=1) then 'xffff44' else 'white' return <td align="center" bgcolor="{$color}" width="22">{ let $n := $board[$row * 8 + $column + 1] return if ($endd != 64 and $n = $endd) then <b>{$n}</b> else if ($n = 0) then "&#xa0;" else $n }</td> } </tr> } </table> <p>{ if ($endd != 64) then <a href="Tour?start={$start}&amp;end={$endd+1}">Step</a> else () }</p> </div> </body> </html> }; tour:main()]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<html><head><title>Knight's tour</title></head><body><div align="center"><h1>Knight's tour starting at a1</h1><table border="1" cellpadding="4"><tr><td width="22" align="center" bgcolor="white">36</td><td width="22" align="center" bgcolor="xffff44">19</td><td width="22" align="center" bgcolor="white">22</td><td width="22" align="center" bgcolor="xffff44">5</td><td width="22" align="center" bgcolor="white">38</td><td width="22" align="center" bgcolor="xffff44">9</td><td width="22" align="center" bgcolor="white">24</td><td width="22" align="center" bgcolor="xffff44">7</td></tr><tr><td width="22" align="center" bgcolor="xffff44">21</td><td width="22" align="center" bgcolor="white">4</td><td width="22" align="center" bgcolor="xffff44">37</td><td width="22" align="center" bgcolor="white">42</td><td width="22" align="center" bgcolor="xffff44">23</td><td width="22" align="center" bgcolor="white">6</td><td width="22" align="center" bgcolor="xffff44">39</td><td width="22" align="center" bgcolor="white">10</td></tr><tr><td width="22" align="center" bgcolor="white">18</td><td width="22" align="center" bgcolor="xffff44">35</td><td width="22" align="center" bgcolor="white">20</td><td width="22" align="center" bgcolor="xffff44">49</td><td width="22" align="center" bgcolor="white">44</td><td width="22" align="center" bgcolor="xffff44">41</td><td width="22" align="center" bgcolor="white">8</td><td width="22" align="center" bgcolor="xffff44">25</td></tr><tr><td width="22" align="center" bgcolor="xffff44">3</td><td width="22" align="center" bgcolor="white">50</td><td width="22" align="center" bgcolor="xffff44">43</td><td width="22" align="center" bgcolor="white">46</td><td width="22" align="center" bgcolor="xffff44">55</td><td width="22" align="center" bgcolor="white">62</td><td width="22" align="center" bgcolor="xffff44">11</td><td width="22" align="center" bgcolor="white">40</td></tr><tr><td width="22" align="center" bgcolor="white">34</td><td width="22" align="center" bgcolor="xffff44">17</td><td width="22" align="center" bgcolor="white">54</td><td width="22" align="center" bgcolor="xffff44">59</td><td width="22" align="center" bgcolor="white">48</td><td width="22" align="center" bgcolor="xffff44">45</td><td width="22" align="center" bgcolor="white">26</td><td width="22" align="center" bgcolor="xffff44">63</td></tr><tr><td width="22" align="center" bgcolor="xffff44">51</td><td width="22" align="center" bgcolor="white">2</td><td width="22" align="center" bgcolor="xffff44">47</td><td width="22" align="center" bgcolor="white">56</td><td width="22" align="center" bgcolor="xffff44">61</td><td width="22" align="center" bgcolor="white">58</td><td width="22" align="center" bgcolor="xffff44">29</td><td width="22" align="center" bgcolor="white">12</td></tr><tr><td width="22" align="center" bgcolor="white">16</td><td width="22" align="center" bgcolor="xffff44">33</td><td width="22" align="center" bgcolor="white">60</td><td width="22" align="center" bgcolor="xffff44">53</td><td width="22" align="center" bgcolor="white">14</td><td width="22" align="center" bgcolor="xffff44">31</td><td width="22" align="center" bgcolor="white">64</td><td width="22" align="center" bgcolor="xffff44">27</td></tr><tr><td width="22" align="center" bgcolor="xffff44">1</td><td width="22" align="center" bgcolor="white">52</td><td width="22" align="center" bgcolor="xffff44">15</td><td width="22" align="center" bgcolor="white">32</td><td width="22" align="center" bgcolor="xffff44">57</td><td width="22" align="center" bgcolor="white">28</td><td width="22" align="center" bgcolor="xffff44">13</td><td width="22" align="center" bgcolor="white">30</td></tr></table><p/></div></body></html>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Axes090"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $element as element(foo) := <foo/> return count($element/self::bar)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes091"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with local name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $element as element(foo) := <foo/> return count($element/self::*:bar)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes092"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with namespace test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare namespace ns1 = "http://www.example.org/ns1"; declare namespace ns2 = "http://www.example.org/ns2"; let $element as element(ns1:foo) := <ns1:foo/> return count($element/self::ns2:*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes093"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>let $attribute as attribute(foo) := attribute foo { } return count($attribute/self::bar)</test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes094"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with local name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>let $attribute as attribute(foo) := attribute foo { } 
            return count($attribute/self::*:bar)
      </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes095"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with namespace test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace ns1 = "http://www.example.org/ns1"; 
        declare namespace ns2 = "http://www.example.org/ns2"; 
        let $attribute as attribute(ns1:foo) := attribute ns1:foo { } 
        return count($attribute/self::ns2:*)
      </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes096"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $element as element(*) := <foo/> return count($element/self::bar)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes097"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with local name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $element as element(*) := <foo/> return count($element/self::*:bar)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes098"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one element node with namespace test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns1 = "http://www.example.org/ns1"; 
        declare namespace ns2 = "http://www.example.org/ns2"; 
        let $element as element(*) := <ns1:foo/> 
        return count($element/self::ns2:*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes099"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>let $attribute as attribute(*) := attribute foo { } return count($attribute/self::bar)</test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes100"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with local name test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>let $attribute as attribute(*) := attribute foo { } return count($attribute/self::*:bar)</test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes101"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Self axis on exactly one attribute node with namespace test that does not match.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare namespace ns1 = "http://www.example.org/ns1"; 
        declare namespace ns2 = "http://www.example.org/ns2"; 
        let $attribute as attribute(*) := attribute ns1:foo { } 
        return count($attribute/self::ns2:*)</test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes102"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Assert that the static type of a wild name test on an element with a type annotation is computed correctly.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns1 = "http://www.example.org/ns1"; 
        declare namespace ns2 = "http://www.example.org/ns2"; 
        declare construction strip; 
        let $element as element(*, xs:untyped) := <e>test</e> 
        let $element as element(*, xs:untyped) := $element/self::* 
        return count($element)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes103"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wild name test on a comment node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $comment as comment() := <!--comment--> return count($comment/self::*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes104"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Name test on a comment node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $comment as comment() := <!--comment--> return count($comment/self::foo)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes105"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Local name test on a comment node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $comment as comment() := <!--comment--> return count($comment/self::*:foo)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes106"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Namespace test on a comment node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns1 = "http://www.example.org/ns1"; 
        let $comment as comment() := <!--comment--> 
        return count($comment/self::ns1:*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes107"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Wild name test on a processing instruction node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        let $processing-instruction as processing-instruction() := <?processing instruction?> 
        return count($processing-instruction/self::*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes108"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Name test on a processing instruction node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        let $processing-instruction as processing-instruction() := <?processing instruction?> 
        return count($processing-instruction/self::processing)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes109"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Local name test on a processing instruction node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        let $processing-instruction as processing-instruction() := <?processing instruction?> 
        return count($processing-instruction/self::*:processing)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes110"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> namespacs test on a processing instruction node.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns1 = "http://www.example.org/ns1"; 
        let $processing-instruction as processing-instruction() := <?processing instruction?> 
        return count($processing-instruction/self::ns1:*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes111"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Assert that the static type of a wild name test on an attribute with a type annotation is computed correctly.</description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns1 = "http://www.example.org/ns1"; 
        declare namespace ns2 = "http://www.example.org/ns2"; declare construction strip; 
        let $element as element(*, xs:untyped) := <e a="value" /> 
        let $attribute as attribute(*, xs:untypedAtomic)* := $element/attribute::* 
        return count($attribute)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes112"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> The namespace axis is not recognized in XQuery.</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <modified by="Tim Mills" change="Changed spec dependency" on="2013-01-28"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XQ30+"/>
    <test>/*/namespace-node()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
      <!-- unclear, see bug 20736 -->
    </result>
  </test-case>
  <test-case name="Axes113"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Use kind-test namespace-node() in an axis step</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XP30+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace-node()</test>
    <result-string/>
    <result>
      <all-of>
        <assert-count>1</assert-count>
        <assert-string-value>http://www.w3.org/XML/1998/namespace</assert-string-value>
      </all-of>
    </result>
  </test-case>
  <test-case name="Axes114"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Use kind-test namespace-node() in an axis step</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XP30+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::namespace-node()</test>
    <result-string/>
    <result>
      <all-of>
        <assert-count>1</assert-count>
        <assert-string-value>http://www.w3.org/XML/1998/namespace</assert-string-value>
      </all-of>
    </result>
  </test-case>
  <test-case name="Axes115"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use kind-test namespace-node() in an axis step for the attribute axis. Note: applies to both XPath and XQuery.</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <modified by="Michael Kay" change="requires 3.0" on="2013-03-11"/>
    <modified by="Michael Kay" change="allow static typing error (bug 21620)" on="2013-05-01"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/*/attribute::namespace-node()</test>
    <result-string>()</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-empty/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Axes116"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Use kind-test namespace-node() with the self axis</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XP30+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::*[self::namespace-node()]</test>
    <result-string/>
    <result>
      <assert-count>1</assert-count>
    </result>
  </test-case>
  <test-case name="Axes117"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use kind-test namespace-node() with the self axis</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <dependency type="spec" value="XQ30+"/>
    <test>namespace {"xsl"}{"http://www.w3.org/1999/XSL/Transform"} / self::namespace-node()</test>
    <result-string/>
    <result>
      <all-of>
        <assert-count>1</assert-count>
        <assert-type>namespace-node()</assert-type>
        <assert-string-value>http://www.w3.org/1999/XSL/Transform</assert-string-value>
        <assert>name($result) = "xsl"</assert>
      </all-of>
    </result>
  </test-case>
  <test-case name="Axes118"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Multiple namespace nodes</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::*</test>
    <result-string/>
    <result>
      <assert-count>6</assert-count>
      <!-- the five declared namespaces, plus the XML namespace -->
    </result>
  </test-case>
  <test-case name="Axes119"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Parent of a namespace node</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::*/..</test>
    <result-string/>
    <result>
      <all-of>
        <assert-count>1</assert-count>
        <assert>local-name($result) = &apos;AuctionWatchList&apos;</assert>
      </all-of>
    </result>
  </test-case>
  <test-case name="Axes120"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Name of a namespace node</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::*/name()</test>
    <result-string/>
    <result>
      <assert-permutation>(&apos;xml&apos;, &apos;ma&apos;, &apos;xlink&apos;, &apos;yabadoo&apos;, &apos;anyzone&apos;, &apos;eachbay&apos;)</assert-permutation>
    </result>
  </test-case>
  <test-case name="Axes121"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> String value of a namespace node</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>string(/*/namespace::xlink)</test>
    <result-string>xs:string("&apos;http://www.w3.org/1999/xlink&apos;")</result-string>
    <result>
      <assert-eq>&apos;http://www.w3.org/1999/xlink&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="Axes122"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Identity of a namespace node</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::xlink is /*/*[1]/namespace::xlink</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="Axes123"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Identity of a namespace node</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="auction"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::xlink is /*/namespace::*[. = &apos;http://www.w3.org/1999/xlink&apos;]</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="Axes124"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Namespace node for default namespace</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeNS"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/namespace::*[not(name())]</test>
    <result-string/>
    <result>
      <all-of>
        <assert-count>1</assert-count>
        <assert-eq>&apos;http://example.com/default-ns&apos;</assert-eq>
      </all-of>
    </result>
  </test-case>
  <test-case name="Axes125"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Namespace node for default namespace</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeNS"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/*/namespace::*[not(name())]</test>
    <result-string/>
    <result>
      <assert-count>1</assert-count>
    </result>
  </test-case>
  <test-case name="Axes126"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Namespace node for default namespace</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <environment ref="TreeNS"/>
    <dependency type="spec" value="XP20+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/*/*/*/namespace::*[not(name())]</test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="Axes127"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> The namespace axis is not recognized in XQuery.  The namespace-node() kind test is new in XQuery 3.0.</description>
    <created by="Michael Kay" on="2013-01-22"/>
    <modified by="Tim Mills" change="Split from Axes112" on="2013-01-28"/>
    <environment ref="TreeTrunc"/>
    <dependency type="spec" value="XQ10"/>
    <test>/*/namespace-node()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="axis-err-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of a step axis, which operates on a non node context item.</description>
    <created by="Carmelo Montanez" on="2005-12-07"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $var := <anElement>Some content</anElement> return $var/20[child::text()]]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <error code="XPTY0020"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A complex set of root path expressions.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $var := document{<e><f>f's value</f></e>}; $var/(/)/(/)//f]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<f>f's value</f>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A complex set of root path expressions for where the context item is not a document node.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $var := <e><f>f's value</f></e>; $var/(/)/(/)//f]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0050"))</result-string>
    <result>
      <error code="XPDY0050"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Path expression where the last step in an xs:integer.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $v := <a><b/><b/><b/></a>; deep-equal($v//45, (45, 45, 45, 45))]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Path expression where the last step in an xs:integer(#2).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $v := <a><b/><b/><b/></a>; $v//45]]>
    </test>
    <result-string>xs:string("45 45 45 45")</result-string>
    <result>
      <assert-string-value>45 45 45 45</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Whitespace: comment can&apos;t appear between the ncname and the colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*:(:hey:)ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A comment can&apos;t appear between the ncname and the colon.a comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*(:hey:):ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Whitespace can&apos;t appear between the wildcard and the colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>* :ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A comment can&apos;t appear between the wildcard and the colon.a comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*(:hey:):ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Whitespace can&apos;t appear between the ncname and the colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>ncname :*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A comment can&apos;t appear between the ncname and the colon.a comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>name(:hey:):*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Whitespace can&apos;t appear between the wildcard and the colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>* :ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Whitespace can&apos;t appear between the wildcard and the colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>ncname: *</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A comment can&apos;t appear between the wildcard and the colon.a comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*(:hey:):ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A comment can&apos;t appear between the wildcard and the colon.a comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>ncname:(:hey:)*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Whitespace can&apos;t appear between the wildcard, colon and ncname.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*(:hey:):(:hey:) ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Comments can&apos;t appear between wildcards and ncnames.a commenta comment</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*:(:hey:)ncname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> A nametest cannot with a colon.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>*:</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a computed text constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(text {"some text"}/..)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a computed processing instruction constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(processing-instruction theName {"some text"}/..)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a computed attribute constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(attribute theName {"some text"}/..)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a computed attribute constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(element theName {"some text"}/..)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a computed comment constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(comment {"some text"}/..)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the parent axis to a direct element constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<elem/>/..)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e&gt;some text&lt;/e&gt;</response-string>
    <description> Apply the parent axis to a direct element constructor&apos;s text-child.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e>some text</e>/text()/..]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e>some text</e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e&gt;&lt;b/&gt;&lt;/e&gt;</response-string>
    <description> Apply the parent axis to a direct element constructor&apos;s text-child.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e><b/></e>/b/..]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e><b/></e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e attr="c"/&gt;</response-string>
    <description> Apply the parent axis to a direct element constructor&apos;s attribute.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e attr="c"/>/@attr/..]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e attr="c"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e&gt;processing-instruction undefined {"data"}&lt;/e&gt;</response-string>
    <description> Apply the parent axis to a direct element constructor&apos;s processing-instruction-child.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e><?name data?></e>/processing-instruction()/..]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e><?name data?></e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;e&gt;&lt;!--data --&gt;&lt;/e&gt;</response-string>
    <description> Apply the parent axis to a direct element constructor&apos;s comment-child.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e><!--data --></e>/comment()/..]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e><!--data --></e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> No axis by name preceding-or-ancestor exists.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>preceding-or-ancestor::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Apply axis &apos;..&apos; to the return value of fn:root().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(fn:root(<e/>)/..)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply axis &apos;..&apos; to a directly constructed element.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>/..)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply axis &apos;..&apos; to the return value of fn:root().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := <e/>; empty(fn:root($myVar/(/)/..))]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0050"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
        <error code="XPDY0050"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply axis &apos;..&apos; to a &apos;/&apos; step.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := document { <e/>}; empty($myVar/(/)/..)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> &apos;//&apos; at the end of a path expression is a syntax error.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>nametest//</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <any-of>
        <error code="XPST0003"/>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> &apos;/&apos; at the end of a path expression is a syntax error.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>nametest/</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <any-of>
        <error code="XPST0003"/>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> &apos;/&apos; at the end of a path expression is a syntax error(#2).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := <e/>; $myVar/(/)/]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> &apos;self()&apos; is an invalid note test.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>parent::self()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> &apos;..&apos; inside a predicate where the context item is of wrong type.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>123[..]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <error code="XPTY0020"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> &apos;element()&apos; inside a predicate where the context item is of wrong type.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>1[element()]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <error code="XPTY0020"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> &apos;..&apos; inside a predicate where the context item is of wrong type(#2).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[(1, <e/>)[..]]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <error code="XPTY0020"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> &apos;..&apos; inside a predicate where the context item is of wrong type(#3).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[(<e/>, 1)[..]]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <error code="XPTY0020"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure a parent axis inside a predicate where the source is a direct element constructor, evaluate to the empty sequence.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>[parent::node()])]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Ensure &apos;5 * /&apos; is parsed properly.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>(1, 5 * /)[1]</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Ensure &apos;/&apos; is parsed properly.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>(1, /)[1]</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Ensure &apos;/&apos; is parsed properly(#2).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>(/, 1)[2]</test>
    <result-string>xs:integer("1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-46"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> &apos;//&apos; by itself is not a valid expression.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>//</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-47"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply &apos;/&apos; to a variable.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := <e/>; empty($myVar/descendant-or-self::text())]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-48"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply &apos;/&apos; to a variable, with an xs:integer at the end.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := <e/>; $myVar/(<a/>, <b/>, <?d ?>, <!-- e-->, attribute name {}, document {()})/3]]>
    </test>
    <result-string>xs:string("3 3 3 3 3 3")</result-string>
    <result>
      <assert-string-value>3 3 3 3 3 3</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-49"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply &apos;/&apos; to a variable, with fn:number() at the end. That is, an implicit dependency on the next-last step.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $myVar := <e/>; $myVar/(<a/>, <b/>, <?d ?>, <!-- e-->, attribute name {}, document {()})/number()]]>
    </test>
    <result-string>xs:string("NaN NaN NaN NaN NaN NaN")</result-string>
    <result>
      <assert-string-value>NaN NaN NaN NaN NaN NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-50"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("3")</response-string>
    <description> &apos;1/3&apos; is a type error.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>1/3</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-51"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("3")</response-string>
    <description> &apos;xs:string/3&apos; is a type error.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[string(<e/>)/3]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-52"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type error in a complex path expression. Some implementations may optimize away the error.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare variable $myVar := <e/>; 
        empty($myVar/preceding-sibling::comment()/a/b/c/1/@*)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0020"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
        <error code="XPTY0019"/>
        <error code="XPTY0020"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-53"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a string")</response-string>
    <description> Many atomic values with predicates in a path expression.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>(1, 2, 3)[1]/(1, 2)[last()]/"a string"</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-54"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> The namespace axis is not recognized in XQuery.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>namespace::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-55"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the attribute axis to the empty sequence.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>empty(()/@attr)</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-56"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the child axis to the empty sequence.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>empty(()/name)</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-57"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The context item invokes sorting and duplicate elimination.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $var := <a> <b/> <c/> <d/> </a>; ($var/*, $var/*)/.]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<b/><c/><d/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-58"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Content being duplicated with the comma operator..</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $var := <a> <b/> <c/> <d/> </a>; ($var/*, $var/*)]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<b/><c/><d/><b/><c/><d/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-59"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluate the child node from the last node in a tree.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $i := <root> <child/> <child/> <child> <child2> <child3> <leaf/> </child3> </child2> </child> </root>; 1, root($i)//leaf/child::node(), 1]]>
    </test>
    <result-string>xs:string("1 1")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-string-value>1 1</assert-string-value>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-60"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the child axis on a document whose last nodes are attributes.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<element attr="foo" attr2="foo"/>/*)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-61"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply the child axis on an element that has attributes only.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<element attr="foo" attr2="foo"/>/*)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-62"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;e&gt;&lt;b attr="fo"/&gt;&lt;b/&gt;&lt;/e&gt;,&lt;b attr="fo"/&gt;,&lt;b/&gt;)</response-string>
    <description> Apply descendant-or-self to a node set constructed with element constructors.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e> <b attr="fo"/> <b/> </e>/descendant-or-self::node()]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e><b attr="fo"/><b/></e><b attr="fo"/><b/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-63"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply the child axis to an element who has one attribute, combined with the sequence iterator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <b attr="fo"/>/child::node(), 1]]>
    </test>
    <result-string>xs:string("1 1")</result-string>
    <result>
      <assert-string-value>1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-64"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;b/&gt;,&lt;b a=""/&gt;)</response-string>
    <description> Invoke the child axis on two elements with one attribute.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e> <b/> <b a=""/> </e>/b]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<b/><b a=""/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-65"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;b a=""/&gt;,&lt;b/&gt;)</response-string>
    <description> Invoke the child axis on two elements with one attribute.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e> <b a=""/> <b/> </e>/b]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<b a=""/><b/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-66"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;!-- comment --&gt;processing-instruction undefined {""},xs:untypedAtomic("text"),&lt;b/&gt;,processing-instruction undefined {""},&lt;b/&gt;,processing-instruction undefined {""})</response-string>
    <description> Invoke the child axis on mixed content.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e> <!-- comment --> <?PA ?>text<b/> <?PB ?> <b/> <?PC ?> </e>/child::node()]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<!-- comment --><?PA ?>text<b/><?PB ?><b/><?PC ?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-67"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply the descendant axis on an element, as operand to the comma operator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <e/>/descendant::node(), 1]]>
    </test>
    <result-string>xs:string("1 1")</result-string>
    <result>
      <assert-string-value>1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-68"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),&lt;e/&gt;,xs:integer("1"))</response-string>
    <description> Apply the descendant-or-self axis on an element, as operand to the comma operator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <e/>/descendant-or-self::node(), 1]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[1<e/>1]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-69"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply the descendant axis on an element that has an attribute, as operand to the comma operator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <e attr=""/>/descendant::node(), 1]]>
    </test>
    <result-string>xs:string("1 1")</result-string>
    <result>
      <assert-string-value>1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-70"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),&lt;e attr=""/&gt;,xs:integer("1"))</response-string>
    <description> Apply the descendant-or-self axis on an element that has an attribute, as operand to the comma operator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <e attr=""/>/descendant-or-self::node(), 1]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[1<e attr=""/>1]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-71"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply function fn:empty() on the descendant axis applied on an element constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>/descendant::node())]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-72"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Apply function fn:empty() on the descendant-or-self axis applied on an element constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>/descendant-or-self::node())]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-Axes-73"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Apply function fn:empty() on the descendant axis applied on an element constructor that has an attribute.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e attr=""/>/descendant::node())]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-74"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Apply function fn:empty() on the descendant-or-self axis applied on an element constructor that has an attribute.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e attr=""/>/descendant-or-self::node())]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-Axes-75"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;a&gt;&lt;b c=""/&gt;&lt;d/&gt;&lt;/a&gt;</response-string>
    <description> Combine axis descendant-or-self, function last() and axis ancestor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b c=""/> <d/> </a>/descendant-or-self::node()[last()]/ancestor::*]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a><b c=""/><d/></a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-76"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;d/&gt;</response-string>
    <description> Combine axis descendant-or-self and function last().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b c=""/> <d/> </a>/descendant-or-self::node()[last()]]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<d/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-77"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> There is no axis by name &apos;preceeding&apos;.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>preceeding::node()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-78"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply fn:count() to a set of nodes involving the parent axis.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b c=""/> <d/> </a>//node()/../count(.)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-Axes-79"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Apply fn:count() to a set of nodes involving the descendant axis.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a> <b c=""/> <d/> </a>//node())]]>
    </test>
    <result-string>xs:integer("2")</result-string>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-Axes-80"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("3")</response-string>
    <description> Apply fn:count() to a set of nodes involving the descendant axis.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a> <b c=""/> <d/> </a>/descendant-or-self::node())]]>
    </test>
    <result-string>xs:integer("3")</result-string>
    <result>
      <assert-eq>3</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-Axes-81"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure that an element name test after an attribute test matches.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b id="person0"> <c/> </b> </a>/*[attribute::id eq "person0"]/c]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<c/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-82"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure that an element name test after an attribute with abbreviated syntax test matches.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b id="person0"> <c/> </b> </a>/*[@id eq "person0"]/c]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<c/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-83"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Simple parser test of the attribute() test appearing after the attribute axis.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>/attribute::attribute())]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-Axes-84"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Simple parser test of the schema-attribute() test appearing after the attribute axis.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/>/attribute::schema-attribute(foo)]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0008"))</result-string>
    <result>
      <error code="XPST0008"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-85"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> The attribute name isn&apos;t optional.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/>/attribute::schema-attribute()]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-86"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A significant set of path expressions with different combinations of source values, axes and node tests, 
        that always evaluate to the empty sequence, no matter what document structure that is being walked. 
        The list is not guaranteed to be exhaustive. Some implementations detect this and rewrite away such 
        combinations or warn the user about such constructs. Since static typing implementations may infer 
        these expressions to the empty sequence, they may raise XPST0005.attribute axis, and all other axes 
        that inference can assert might produce attributes.
      </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <environment ref="TopMany"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare variable $root as document-node() := . treat as document-node(); 
        <empty> { (: attribute axis, and all other axes that inference can assert might produce attributes. 
             These are placed first, so we don't raise XQTY0024. :) 
             $root/foo/child::attribute(foo), 
             $root//element()/self::attribute(), 
             $root//text()/self::attribute(), 
             $root/self::attribute(), 
             $root/foo/descendant::attribute(foo), 
             $root//processing-instruction()/self::attribute(), 
             $root/attribute(foo), $root/attribute(), 
             $root/attribute::attribute(), 
             $root//parent::attribute(), 
             $root//document-node()/self::attribute(), 
             $root/@*, $root/*/@*[self::*], 
             $root//comment()/descendant-or-self::attribute(), 
             $root//processing-instruction()/descendant-or-self::attribute(), 
             $root//text()/descendant-or-self::attribute(), 
             $root//document-node()/descendant-or-self::attribute(), 
             $root//parent::attribute(), 
             $root//ancestor::attribute(), 
             $root//ancestor-or-self::attribute(), 
             $root/self::attribute(), 
             $root//attribute()/child::node(), 
             $root//attribute::text(), 
             $root//attribute::comment(), 
             $root//attribute::processing-instruction(), 
             $root//attribute::document-node(), 
             $root//attribute::document-node(element(foo)),
             $root//attribute()/self::text(),
             $root//attribute()/self::processing-instruction(), 
             $root//attribute()/self::element(), 
             $root//attribute()/self::document-node(), 
             $root//attribute()/self::comment(), 
             $root//*/attribute()//node(), 
             $root//*/attribute()/descendant::node(), 
             $root//attribute::element(), 
             $root//comment()/child::node(), 
             $root//processing-instruction()/child::node(), 
             $root//text()/child::node(),
             $root//attribute()/descendant::node(), 
             $root//comment()/descendant::node(), 
             $root//text()/descendant::node(), 
             $root//processing-instruction()/descendant::node(), 
             $root//comment()/descendant-or-self::text(), 
             $root//comment()/descendant-or-self::processing-instruction(), 
             $root//comment()/descendant-or-self::element(), 
             $root//comment()/descendant-or-self::document-node(), 
             $root//processing-instruction()/descendant-or-self::text(), 
             $root//processing-instruction()/descendant-or-self::comment(), 
             $root//processing-instruction()/descendant-or-self::element(), 
             $root//processing-instruction()/descendant-or-self::document-node(), 
             $root//text()/descendant-or-self::processing-instruction(), 
             $root//text()/descendant-or-self::comment(), 
             $root//text()/descendant-or-self::element(), 
             $root//text()/descendant-or-self::document-node(), 
             $root//attribute()/descendant-or-self::processing-instruction(), 
             $root//attribute()/descendant-or-self::text(), 
             $root//attribute()/descendant-or-self::comment(), 
             $root//attribute()/descendant-or-self::element(), 
             $root//attribute()/descendant-or-self::document-node(), 
             $root/.., $root//parent::comment(), 
             $root//parent::processing-instruction(), 
             $root//parent::text(), 
             $root//ancestor::comment(), 
             $root//ancestor::processing-instruction(), 
             $root//ancestor::text(), 
             $root/self::comment(), 
             $root/self::processing-instruction(), 
             $root/self::text(), 
             $root/self::element(), 
             $root//element()/self::text(), 
             $root//element()/self::processing-instruction(), 
             $root//element()/self::document-node(), 
             $root//element()/self::comment(), 
             $root//processing-instruction()/self::text(), 
             $root//processing-instruction()/self::element(), 
             $root//processing-instruction()/self::document-node(), 
             $root//processing-instruction()/self::comment(), 
             $root//text()/self::processing-instruction(), 
             $root//text()/self::element(), 
             $root//text()/self::document-node(), 
             $root//text()/self::comment(), 
             $root//document-node()/self::processing-instruction(), 
             $root//document-node()/self::element(), 
             $root//document-node()/self::text(), 
             $root//document-node()/self::comment() } </empty>, 
             exists($root//*/attribute()/descendant-or-self::node())]]>
    </test>
    <result-string/>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-xml>
          <![CDATA[<empty/>true]]>
        </assert-xml>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-87"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;result&gt; &lt;b&gt;2&lt;/b&gt;&lt;a&gt;1&lt;/a&gt;&lt;/result&gt;</response-string>
    <description> Ensure node sorting is applied when the left operand is the result of the comma operator.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<result> { <e> <a>1</a> <b>2</b> </e>/(b, a)/. } </result>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<result><a>1</a><b>2</b></result>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-88"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure node sorting is applied when the left operand is the result of the comma operator, while using variable references.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare variable $i := <e> <a>1</a> <b>2</b> </e>; <result> { ($i/b, $i/a)/. } </result>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<result><a>1</a><b>2</b></result>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-89"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;r attr="foo"&gt; &lt;/r&gt;</response-string>
    <description> Ensure attribute tests match, and that attributes are properly copied when combined with a default element namespace declaration.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default element namespace "http://typedecl"; <r> { <e attr="foo"/>/@attr } </r>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<r xmlns="http://typedecl" attr="foo"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-90"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> An incorrectly ending QName.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>prefix:</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-91"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> An incorrectly ending QName, with space.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>prefix:</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-92"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test parsing of &apos;gt&apos;.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<e/>/(gt gt gt))]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-93"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Space is disallowed after the first angle bracket in a direct element constructor.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[< asd />]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-94"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use a single &apos;declare&apos; nametest.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>declare</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-95"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use an invalid function declaration.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>eclare function</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-96"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use an invalid function declaration(#2).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>declare function name</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-97"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Use an invalid function declaration(#3).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>declare function local:foo() external;</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <any-of>
        <error code="XPST0003"/>
        <error code="XPST0017"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-98"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Use a set of reserved keywords as nametests.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xquery, version, encoding, default, declare, function, option, collation, schema, import</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="K2-Axes-99"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Use an invalid function declaration(#3).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function foo() external; 1</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQST0045"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <any-of>
        <error code="XQST0045"/>
        <error code="XPST0017"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-100"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Do a peculiar combination between axis self and last().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[empty(<a> <b/> <c/> </a>[self::b][last()])]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-101"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;b/&gt;</response-string>
    <description> Do a peculiar combination between axis self and last().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<b/>[self::b][last()]]]>
    </test>
    <result-string/>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-xml>
          <![CDATA[<b/>]]>
        </assert-xml>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-Axes-102"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Execute a query in several different ways.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <environment ref="XMarkAuction"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $a in (/) return 
        for $b in $a/child::site return 
        for $c in $b/child::people return 
        for $d in $c/child::person return 
            if ((some $id in $d/attribute::id satisfies 
                    typeswitch ($id)
                     case $n as node() return $id = "person0"
                     default $d return ())) 
            then $d/child::name 
            else (), 
        for $b in /site/people/person where $b/@id="person0" return $b/name, 
        /site/people/person[@id eq "person0"]/name</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<name>Seongtaek Mattern</name><name>Seongtaek Mattern</name><name>Seongtaek Mattern</name>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-Axes-103"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("|"),xs:string(""),xs:string(""),xs:string(""),xs:string(""),xs:string(""),xs:string(""),xs:string(""),xs:string("_11c"),xs:string("_11c"),xs:string("_11"),xs:string("_11"),xs:string(""),xs:string("_17c"),xs:string("_17c"),xs:string("_17"),xs:string("_17"),xs:string(""),xs:string(""),xs:string("_11"),xs:string(""),xs:string(""),xs:string(""),xs:string("_17"),xs:string("_11c"),xs:string(""),xs:string("_17"),xs:string("_17"),xs:string("_23"),xs:string("|"))</response-string>
    <description> Combine a function call with paths that requires sorting.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <environment ref="CPPGlobals"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:isComplexType($typeID) { string($typeID) }; 
        "|", //*/local:isComplexType(@type), "|"</test>
    <result-string>xs:string("|       _17 _17  _11c _11c _11 _11  _17c _17c _17 _17   _11   _23  _17 _11c  |")</result-string>
    <result>
      <assert-string-value>|       _17 _17  _11c _11c _11 _11  _17c _17c _17 _17   _11   _23  _17 _11c  |</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-Axes-104"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;b&gt;&lt;a/&gt;&lt;/b&gt;</response-string>
    <description> Use the focus from within an element constructor.</description>
    <created by="Frans Englich" on="2008-02-11+01:00"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a/>/<b>{.}</b>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<b><a/></b>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="statictypingaxis-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the child axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/child::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="statictypingaxis-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the self axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/self::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="statictypingaxis-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the attribute axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/attribute::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="statictypingaxis-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the parent axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/parent::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="statictypingaxis-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the descendant axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/descendant::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="statictypingaxis-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of static typing feature for the descendant-or-self axes. Context item not a node </description>
    <created by="Carmelo Montanez" on="2005-12-15"/>
    <test>(10)/descendant-or-self::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="cbcl-selfAxis-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;a&gt; &lt;/a&gt;</response-string>
    <description> Tests self attribute test </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> { <a b="blah"/>/@*/self::attribute(b) } </a>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a b="blah"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="cbcl-childAxis-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Tests to child::attribute(b) </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <modified by="Michael Kay" change="allow static typing error as per bug 21620" on="2013-05-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a b="blah"/>/child::attribute(b))]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="cbcl-followingAxis-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Tests for following-sibling::* </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a><b/><b/></a>/b[1]/following-sibling::*)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-precedingAxis-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Tests for preceding-sibling::* </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a><b/><b/></a>/b[2]/preceding-sibling::*)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-precedingAxis-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Test for preceding-sibling::b </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a><b/><b/></a>/b[2]/preceding-sibling::b)]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-precedingAxis-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Test for preceding-sibling::b </description>
    <created by="Nick Jones" on="2008-06-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a><b/><b/></a>/b[1]/preceding-sibling::b)]]>
    </test>
    <result-string>xs:string("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-except-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Tests Equals method on NodeOperator tests </description>
    <created by="Nick Jones" on="2008-06-27"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      let $x := <a><b/><c/><d/></a> return count(($x/(node() except b) | $x/(node() except b)))
   ]]>
    </test>
    <result-string>xs:string("2")</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-wild-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Tests Equals function on wild localname tests </description>
    <created by="Nick Jones" on="2008-06-27"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace foo="test";
        let $x := <a><foo:b/><c/><d/></a> return count($x/foo:* | $x/foo:*)]]>
    </test>
    <result-string>xs:string("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-wild-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Tests the typing of a test foo:bar/foo:* </description>
    <created by="Nick Jones" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace foo="http://localhost/";
        <a><foo:b/><foo:c/></a>/foo:b/self::foo:*]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<foo:b xmlns:foo="http://localhost/"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="cbcl-path-nodes-and-atomics"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description> A test with both nodes and atomics appearing in a (not last) step </description>
    <created by="Oliver Hallam" on="2008-08-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare function local:f($x) { if ($x mod 2 = 1) then <a/> else "a" };
        let $y := for $x in (1 to 10) return <e>{$x}</e> return $y/local:f(.)/a]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
</test-set>