<test-set name="prod-AxisStep.following-sibling" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the following-sibling axis</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-AxisStep.following-sibling" type="spec"/>
  <link document="XQuery" idref="axes" section-number="3.2.1.1" type="spec"/>
  <test-case name="followingsibling-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of the following-sibling axis for which the context node is not a node. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <test>(200)/following-sibling::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="followingsibling-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluation of the following-sibling axis for which the given node does not exists. Uses fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:count(/works/employee[1]/following-sibling::noSuchNode)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="followingsibling-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "is" expression (return true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[12]/following-sibling::employee) is exactly-one(/works/employee[13])</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "is" expression (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works[1]/employee[12]/following-sibling::employee) is exactly-one(/works[1]/employee[12])</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node before" expression (return true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works[1]/employee[12]/overtime/day[1]/following-sibling::day) << exactly-one(/works[1]/employee[13])]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node before" expression and both operands are the same (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works[1]/employee[12]/following-sibling::employee) << exactly-one(/works[1]/employee[12]/following-sibling::employee)]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node before" expression both operands are differents (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works[1]/employee[12]/following-sibling::employee) << exactly-one(/works[1]/employee[12]/overtime[1])]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node after" expression (returns true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node after" expression with both operands the same (returns false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works[1]/employee[12]/following-sibling::employee) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "node after" expression with different operands (returns false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works[1]/employee[12]) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "union " operation. Both operands are the same. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1]/following-sibling::day)</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<day>Tuesday</day>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="followingsibling-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "union" operation. Both operands are different </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1])</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<day>Monday</day><day>Tuesday</day>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="followingsibling-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "intersect" operation. Both operands are the same. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day) intersect (/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<day>Tuesday</day>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="followingsibling-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "except" operation. Both operands are the same. Uses fn:count to avoid empty file </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:count((/works[1]/employee[12]/following-sibling::employee) except (/works[1]/employee[12]/following-sibling::employee))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="followingsibling-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the following-sibling axis that is part of an "except" operation. Both operands are different. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[1]/following-sibling::day)</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<day>Monday</day>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="followingsibling-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Evaluation of the following-sibling axis that is part of a boolean expression ("and" and fn:true(). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/following-sibling::employee) and fn:true()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Evaluation of the following-sibling axis that is part of a boolean expression ("and" and fn:false()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/following-sibling::employee) and fn:false()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="followingsibling-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Evaluation of the following-sibling axis that is part of a boolean expression ("or" and fn:true()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/following-sibling::employee) or fn:true()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Evaluation of the following-sibling axis that is part of a boolean expression ("or" and fn:false()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works[1]/employee[12]/following-sibling::employee) or fn:false()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the following-sibling axis that used as part of the deep-equal-function. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:deep-equal(/works[1]/employee[12]/following-sibling::employee,/works[1]/employee[12]/following-sibling::employee)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="followingsibling-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluation of the following axis used together with a newly constructed element. Uses fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $var := <anElement>Some Content</anElement> return fn:count($var/following::*)]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="unabbreviatedSyntax-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;employee name="Jane Doe 3" gender="female"&gt;&amp;#10;   &lt;empnum&gt;E1&lt;/empnum&gt;&amp;#10;   &lt;pnum&gt;P3&lt;/pnum&gt;&amp;#10;   &lt;hours&gt;80&lt;/hours&gt;&amp;#10;  &lt;/employee&gt;</response-string>
    <description> Evaluate "following-sibling::employee[fn:position() = 1]". Selects the next employee sibling of the context node. </description>
    <created by="Carmelo Montanez" on="2005-07-11"/>
    <environment ref="works-mod"/>
    <test>for $h in (/works/employee[2]) return $h/following-sibling::employee[fn:position() = 1]</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<employee name="Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80</hours>
  </employee>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;child/&gt;,&lt;child/&gt;)</response-string>
    <description> Apply following-sibling to a child whose siblings are the last in a document. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<root> <child/> <child/> <child/> </root>/child[1]/following-sibling::node()]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<child/><child/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;child/&gt;,&lt;child attr="foo" attr2="foo"/&gt;)</response-string>
    <description> Apply following-sibling to a child whose last nodes in document order are attributes. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<root> <child/> <child/> <child attr="foo" attr2="foo"/> </root>/child[1]/following-sibling::node()]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<child/><child attr="foo" attr2="foo"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> Apply fn:count() to the result of axis following-sibling. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<root> <child/> <child/> <child attr="foo" attr2="foo"/> </root>/child[1]/following-sibling::node())]]>
    </test>
    <result-string>xs:integer("2")</result-string>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluate fn:count() on a range of nodes, navigated with axis following. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare variable $i := <root> <child/> <child/> <child> <child2> <child3> <leaf/> </child3> </child2> </child> </root>; 
        root($i)//count(following-sibling::node())
      ]]>
    </test>
    <result-string>xs:string("0 2 1 0 0 0 0")</result-string>
    <result>
      <assert-string-value>0 2 1 0 0 0 0</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluate on a small tree. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare variable $i := <root> <child/> <child/> <child> <child2> <child3> <leaf/> </child3> </child2> </child> </root>; 
        root($i)//following-sibling::node()
      ]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<child/><child><child2><child3><leaf/></child3></child2></child>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type error with the following-sibling axis. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare variable $i := <root> <child/> <child/> <child> <child2> <child3> <leaf/> </child3> </child2> </child> </root>; 
        root($i)//(following-sibling::node(), "BOO")
      ]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0018"))</result-string>
    <result>
      <error code="XPTY0018"/>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Apply count to axis following-sibling. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<root> <child/> </root>/following-sibling::node())]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply count to axis following-sibling, combined with the comma operator. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <root> <child/> </root>/following-sibling::node(), 1]]>
    </test>
    <result-string>(xs:integer("1"),xs:integer("1"))</result-string>
    <result>
      <assert-string-value>1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("1"))</response-string>
    <description> Apply count to axis following-sibling to a single node, combined with the comma operator. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <root/>/following-sibling::node(), 1]]>
    </test>
    <result-string>(xs:integer("1"),xs:integer("1"))</result-string>
    <result>
      <assert-string-value>1 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-following-siblingAxis-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;result&gt; &lt;/result&gt;</response-string>
    <description> Use a positional predicate beyond the output. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<result> { <a><b/></a>/*/following::*[2] } </result>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<result/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="following-sibling-attr"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Apply the following-sibling axis to an attribute node. </description>
    <created by="Michael Dyck" on="2009-03-11"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<foo a='1' b='2' c='3'> <bar>4</bar> <bar>5</bar> <bar>6</bar> </foo>/@a/following-sibling::node()]]>
    </test>
    <result-string>xs:string("")</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
</test-set>