<test-set name="prod-InstanceofExpr" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the InstanceofExpr production</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-InstanceofExpr" type="spec"/>
  <link document="XQuery" idref="id-instance-of" section-number="3.12.1" type="spec"/>
  <environment name="ListUnionTypes">
    <schema file="ValidateExpr/listunion.xsd" uri="http://www.w3.org/XQueryTest/ListUnionTypes">
      <description>A schema defining a list of unions.</description>
      <created by="Anonymous" on="2006-06-07"/>
    </schema>
  </environment>
  <environment name="union-List-defined-Types">
    <schema file="SchemaImport/unionListDefined.xsd" uri="http://www.w3.org/XQueryTest/unionListDefined">
      <description>A Schema of union and list defined types</description>
      <created by="O&apos;Neil Delpratt" on="2011-10-27"/>
    </schema>
  </environment>
  <test-case name="instanceof1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:dateTime</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "dateTime instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:time</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "time instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:time("13:20:10.5Z") instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:date</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "date instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:date("2000-01-01+05:00") instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:boolean</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "boolean instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:boolean("true") instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof46"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof47"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof48"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof49"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof50"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:double</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof51"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof52"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof53"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof54"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof55"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "float instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof56"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof57"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof58"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof59"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof60"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof61"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:double</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof62"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof63"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof64"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof65"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof66"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "double instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>1267.43233E12 instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof67"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof68"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof69"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof70"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof71"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof72"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof73"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:anyURI</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof74"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof75"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof76"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof77"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "anyURI instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>xs:anyURI("http://www.example.com") instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof78"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof79"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof80"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof81"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof82"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof83"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof84"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof85"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:string</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof86"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:decimal</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof87"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof88"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "string instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>"A String Function" instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof89"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof90"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof91"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof92"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof93"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof94"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof95"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof96"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof97"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:decimal</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof98"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:integer</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof99"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "decimal instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967.543233 instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof100"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:dateTime". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:dateTime</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof101"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:time". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:time</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof102"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:date". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:date</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof103"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:boolean". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:boolean</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof104"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:float". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:float</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof105"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:double". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:double</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof106"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:anyURI". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:anyURI</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof107"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:string". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:string</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="instanceof108"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:decimal". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:decimal</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof109"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:integer". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="instanceof110"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>purpose: Evaluation of "instance of" expression for pattern "integer instance of xs:int". </description>
    <created by="Carmelo Montanez" on="2005-04-26"/>
    <test>12678967543233 instance of xs:int</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="type-derivation-with-unions" name="instanceof111"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>purpose: Test that a value is not testable as an instance of a list type. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <test>xs:NMTOKEN(&apos;abc&apos;) instance of xs:NMTOKENS</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="union-as-sequence-type type-derivation-with-unions" name="instanceof112"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>purpose: Test that a value is an instance of a simple union type. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <environment ref="ListUnionTypes"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      	declare namespace lu = &apos;http://www.w3.org/XQueryTest/ListUnionTypes&apos; ;
        import schema "http://www.w3.org/XQueryTest/ListUnionTypes";
      	23 instance of lu:unionType
      </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="union-as-sequence-type type-derivation-with-unions" name="instanceof113"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>purpose: Test that a value cannot be tested to be an instance of a union type derived by restriction. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <environment ref="ListUnionTypes"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      	declare namespace lu = &apos;http://www.w3.org/XQueryTest/ListUnionTypes&apos; ;
        import schema "http://www.w3.org/XQueryTest/ListUnionTypes";
      	-23 instance of lu:restrictedUnionType
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="union-as-sequence-type type-derivation-with-unions" name="instanceof114"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>purpose: Test that a value cannot be tested to be an instance of a list whose item type is a union. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <environment ref="ListUnionTypes"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      	declare namespace lu = &apos;http://www.w3.org/XQueryTest/ListUnionTypes&apos; ;
        import schema "http://www.w3.org/XQueryTest/ListUnionTypes";
      	-23 instance of lu:listType
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="union-as-sequence-type type-derivation-with-unions" name="instanceof115"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>purpose: Test that a value cannot be tested to be an instance of a union type with a list in its membership. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <environment ref="ListUnionTypes"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      	declare namespace lu = &apos;http://www.w3.org/XQueryTest/ListUnionTypes&apos; ;
        import schema "http://www.w3.org/XQueryTest/ListUnionTypes";
      	-23 instance of lu:unionOfListType
      </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="union-as-sequence-type type-derivation-with-unions" name="instanceof116"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>purpose: Test that a value can be tested to be an instance of a union type with a union in its membership. </description>
    <created by="Michael Kay" on="2011-10-31"/>
    <environment ref="ListUnionTypes"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      	declare namespace lu = &apos;http://www.w3.org/XQueryTest/ListUnionTypes&apos; ;
        import schema "http://www.w3.org/XQueryTest/ListUnionTypes";
      	current-date() instance of lu:unionOfUnionType
      	  and
      	23 instance of lu:unionOfUnionType
      </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="type-derivation-with-unions" name="instanceof117"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of a union type derived by restriction</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         xquery version "3.0";
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         s:gYearMonth('2012-10') instance of s:restrictedUnion
       ]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="type-derivation-with-unions" name="instanceof118"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of a union type not derived by restriction</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         xquery version "3.0";
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         s:unrestrictedInteger(3) instance of s:myUnionType1
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="type-derivation-with-unions" name="instanceof119"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of a union type not derived by restriction</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         xquery version "3.0";
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         s:restrictedString("IB40") instance of s:myUnionType2
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="type-derivation-with-unions" name="instanceof120"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of a union type with a list type in its membership</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         xquery version "3.0";
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         85 instance of s:unionOfListsAndAtomic
       ]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof121"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(*)
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof122"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(node()?) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof123"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(node()) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof124"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(element(A)?) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof125"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(element(A)) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof126"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(element(A)) as xs:anyAtomicType
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof127"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(element(A)) as xs:string+
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof128"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(element(A)) as xs:NCName
       ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof129"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(node()*) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof130"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#1 instance of function(item()) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof131"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         name#0 instance of function(item()) as xs:string
       ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof132"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         filter#2 instance of function(item()*, function(item()) as xs:boolean) as item()*
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof133"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         filter#2 instance of function(item()*, function(item()*) as xs:boolean) as item()*
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships" name="instanceof134"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>
      <![CDATA[
         filter#2 instance of function(function(*), item()*) as item()*
       ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof135"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:myUnionType1) as xs:boolean { true() };
         local:f#1 instance of function(s:myUnionType1) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof136"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:myUnionType1) as xs:boolean { true() };
         local:f#1 instance of function(s:unrestrictedDate) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof137"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:myUnionType1) as xs:boolean { true() };
         local:f#1 instance of function(s:unrestrictedInteger) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof138"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:myUnionType1) as xs:boolean { true() };
         local:f#1 instance of function(s:restrictedDate) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof139"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types. Note: there is a subtype relationship between union(A,B,C) and union(A,B).</description>
    <created by="Michael Kay" on="2012-10-08"/>
    <modified by="Tim Mills" change="Bug 19504" on="2012-12-20"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:approximateDate) as xs:boolean { true() };
         local:f#1 instance of function(s:dateOrDateTime) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof140"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types. See Bug 20632.</description>
    <created by="Tim Mills" on="2013-01-24"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as xs:integer) as xs:boolean { true() };
         local:f#1 instance of function(s:integer-union) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case covers="sequence-type-relationships type-derivation-with-unions" name="instanceof141"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description>Instance of with function types and union types. See Bug 20632.</description>
    <created by="Tim Mills" on="2013-01-24"/>
    <environment ref="union-List-defined-Types"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      <![CDATA[
         import schema namespace s="http://www.w3.org/XQueryTest/unionListDefined";
         declare function local:f($a as s:decimal-or-string) as xs:boolean { true() };
         local:f#1 instance of function(xs:integer) as xs:boolean
       ]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `1 instance of item()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of item()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> item() type with comment appearing inside the paranteses. comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of item()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 instance of xs:integer`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 instance of xs:decimal`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of xs:decimal</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 instance of xs:integer?`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of xs:integer?</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 instance of xs:integer+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of xs:integer+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1 instance of xs:integer*`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 instance of xs:integer*</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `false() instance of xs:boolean`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>false() instance of xs:boolean</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `false() instance of xs:anyAtomicType`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>false() instance of xs:anyAtomicType</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `"a string" instance of xs:string`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>"a string" instance of xs:string</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not("false" instance of xs:boolean)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not("false" instance of xs:boolean)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1.1 instance of xs:decimal`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1.1 instance of xs:decimal</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not(1.1 instance of xs:integer)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1.1 instance of xs:integer)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `xs:anyURI("http://www.example.com/") instance of xs:anyURI`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI("http://www.example.com/") instance of xs:anyURI</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not(xs:anyURI("http://www.example.com/") instance of xs:string)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:anyURI("http://www.example.com/") instance of xs:string)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not("a string" instance of xs:untypedAtomic)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not("a string" instance of xs:untypedAtomic)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(1, 2, 3, 4, 5) instance of xs:integer+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, 3, 4, 5) instance of xs:integer+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not((1, 2, 3, 4, 5) instance of xs:integer)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not((1, 2, 3, 4, 5) instance of xs:integer)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not((1, 2, 3, 4, 5) instance of xs:integer?)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not((1, 2, 3, 4, 5) instance of xs:integer?)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(1, 2, 3, 4, 5) instance of xs:integer*`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, 3, 4, 5) instance of xs:integer*</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `(1, 2, 3, 4, 5) instance of item()+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, 3, 4, 5) instance of item()+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not((1, 2, "a string", 4, 5) instance of xs:integer*)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not((1, 2, "a string", 4, 5) instance of xs:integer*)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not((1, 2, 1.1, 4, 5) instance of xs:integer*)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not((1, 2, 1.1, 4, 5) instance of xs:integer*)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not((1, 2, "a string", 4, 5) instance of xs:string*)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not((1, 2, "a string", 4, 5) instance of xs:string*)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `(1, 2, "a string", 4, 5) instance of xs:anyAtomicType*`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, "a string", 4, 5) instance of xs:anyAtomicType*</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(1, 2, count("one"), 4, 5) instance of xs:integer+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, count("one"), 4, 5) instance of xs:integer+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `not(1 instance of text())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of text())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `not(1 instance of node())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of node())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not(1 instance of element())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of element())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not(1 instance of processing-instruction())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of processing-instruction())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not(1 instance of comment())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of comment())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A comment appearing inside the paranteses of the sequence type text(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of text())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A comment appearing inside the paranteses of the sequence type node(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of node())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A comment appearing inside the paranteses of the sequence type element(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of element())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A comment appearing inside the paranteses of the sequence type processing-instruction(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of processing-instruction())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A comment appearing inside the paranteses of the sequence type comment(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of comment())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `not(1 instance of empty-sequence())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(1 instance of empty-sequence())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `not( (1, 2, 3) instance of empty-sequence())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not( (1, 2, 3) instance of empty-sequence())</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `() instance of empty-sequence()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>() instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Comment appearing inside the paranteses of empty-sequence(). comment </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>() instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `(((()))) instance of empty-sequence()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(((()))) instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `((), (), ()) instance of empty-sequence()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>((), (), ()) instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `((), "xs:string") instance of xs:string`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>((), "xs:string") instance of xs:string</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `("xs:string", (), "xs:string") instance of xs:string+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>("xs:string", (), "xs:string") instance of xs:string+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `(1.1, (), 1) instance of xs:decimal+`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1.1, (), 1) instance of xs:decimal+</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-46"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not("a string" instance of xs:NOTATION)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not("a string" instance of xs:NOTATION)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-47"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `not("a string" instance of xs:QName)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not("a string" instance of xs:QName)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-48"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `1.1 instance of xs:decimal and not(1.1 instance of xs:integer)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1.1 instance of xs:decimal and not(1.1 instance of xs:integer)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-49"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of prefixDoesNotExist:integer</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0081"))</result-string>
    <result>
      <error code="XPST0081"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-50"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of xs:doesNotExist</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-51"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of xs:qname</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-52"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of none</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-53"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of void</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result>
      <error code="XPST0051"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-54"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of none()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <any-of>
        <error code="XPST0051"/>
        <error code="XPST0003"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-55"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A type is referenced which doesn&apos;t exist. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>3 instance of void()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0051"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0003"))</result-string>
    <result>
      <any-of>
        <error code="XPST0051"/>
        <error code="XPST0003"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-56"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>error() instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-57"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>error() instance of xs:integer*</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-58"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>error() instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-59"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(error(), 1) instance of empty-sequence()</test>
    <result-string>xs:boolean("false")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-false/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-60"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, error()) instance of xs:integer</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <error code="FOER0000"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-61"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(error(), 1) instance of xs:integer</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <error code="FOER0000"/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-62"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, error()) instance of xs:integer*</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-63"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> The fn:error() function in combination with &apos;instance of&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(error(), 1) instance of xs:integer*</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-64"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `not(((10)div(3)) instance of xs:integer)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(((10)div(3)) instance of xs:integer)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-65"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `((10)idiv(3)) instance of xs:integer`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>((10)idiv(3)) instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqExprInstanceOf-66"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `((10)mod(3)) instance of xs:integer`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>((10)mod(3)) instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an element node against type element(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of element()]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an element node against type element(*). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of element(*)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an element node against type element(*). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of element(e)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an element node against type element(name). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of element(name)]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an element node against type attribute(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of attribute()]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an element node against type attribute(*). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of attribute(*)]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an element node against type attribute(e). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e/> instance of attribute(e)]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an attribute node against type element(name). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of attribute(e)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an attribute node against type attribute(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of attribute()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an attribute node against type attribute(*). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of attribute(*)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an attribute node against type element(e). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of element(e)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an attribute node against type element(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of element()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test an attribute node against type element(*). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of element(*)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Test an attribute node against type element(name). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>attribute e{"content"} instance of attribute(name)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:nonPositiveInteger in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonPositiveInteger(0) instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:negativeInteger in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:negativeInteger(-1) instance of xs:negativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:long in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long(0) instance of xs:long</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:int in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:int(0) instance of xs:int</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:short in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:short(0) instance of xs:short</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:byte in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:byte(0) instance of xs:byte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:nonNegativeInteger in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:nonNegativeInteger in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:unsignedLong in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedLong(0) instance of xs:unsignedLong</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:unsignedInt in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedInt(0) instance of xs:unsignedInt</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:unsignedShort in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedShort(0) instance of xs:unsignedShort</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:unsignedByte in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedByte(0) instance of xs:unsignedByte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check the return type of xs:positiveInteger in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger(1) instance of xs:positiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:normalizedString in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:normalizedString("NCName") instance of xs:normalizedString</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:token in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:token("NCName") instance of xs:token</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:language in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:language("NCName") instance of xs:language</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:NMTOKEN in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:NMTOKEN("NCName") instance of xs:NMTOKEN</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:Name in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:Name("NCName") instance of xs:Name</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-33"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:NCName in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:NCName("NCName") instance of xs:NCName</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-34"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:ID in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ID("NCName") instance of xs:ID</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-35"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:IDREF in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:IDREF("NCName") instance of xs:IDREF</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-36"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check the return type of xs:ENTITY in a simple way. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ENTITY("NCName") instance of xs:ENTITY</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-37"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:normalizedString has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:normalizedString("ncname") instance of xs:string</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-38"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:token has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:token("ncname") instance of xs:normalizedString</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-39"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:language has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:language("ncname") instance of xs:token</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-40"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:NMTOKEN has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:NMTOKEN("ncname") instance of xs:token</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-41"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:Name has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:Name("ncname") instance of xs:token</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-42"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:NCName has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:NCName("ncname") instance of xs:Name</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-43"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:ID has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ID("ncname") instance of xs:NCName</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-44"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:IDREF has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:IDREF("ncname") instance of xs:NCName</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-45"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:ENTITY has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ENTITY("ncname") instance of xs:NCName</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-46"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:nonPositiveInteger has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonPositiveInteger("0") instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-47"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:negativeInteger has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:negativeInteger("-1") instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-48"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:long has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long("0") instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-49"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:int has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:int("0") instance of xs:long</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-50"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:short has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:short("0") instance of xs:int</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-51"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:byte has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:byte("0") instance of xs:short</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-52"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:nonNegativeInteger has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger("0") instance of xs:integer</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-53"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:unsignedLong has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedLong("0") instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-54"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:unsignedInt has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedInt("0") instance of xs:unsignedLong</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-55"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:unsignedShort has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedShort("0") instance of xs:unsignedInt</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-56"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:unsignedByte has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedByte("0") instance of xs:unsignedShort</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-57"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Check that xs:positiveInteger has the correct parent type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger("1") instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-58"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:nonNegativeInteger is not a child of nonPositiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger("1") instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-59"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:nonNegativeInteger is not a child of negativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger("1") instance of xs:negativeInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-60"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:positiveInteger is not a child of negativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger("1") instance of xs:negativeInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-61"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:positiveInteger is not a child of nonPositiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger("1") instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-62"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:long is not a child of negativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long("1") instance of xs:negativeInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-63"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:long is not a child of nonPositiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long("1") instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-64"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:long is not a child of nonNegativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long("1") instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-65"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Check that xs:long is not a child of positiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long("1") instance of xs:positiveInteger</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-66"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:token is not a child of xs:NCName. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:token("ncname") instance of xs:NCName</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-67"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:ID is not a child of xs:NCName. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ID("ncname") instance of xs:IDREF</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-68"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:ENTITY is not a child of xs:NCName. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:ENTITY("ncname") instance of xs:IDREF</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-69"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:language is not a child of xs:NMTOKEN. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:language("ncname") instance of xs:NMTOKEN</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-70"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:Name is not a child of xs:language. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:Name("ncname") instance of xs:language</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-71"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xs:normalizedString is not a child of xs:token. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:normalizedString("ncname") instance of xs:token</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-72"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure a name test with the attribute axis gets the correct type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e a=""/>/attribute::a instance of attribute(a)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-73"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure a name test with the abbreviated attribute axis gets the correct type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e a=""/>/@a instance of attribute(a)]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-74"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:byte is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:byte(xs:double("1")) instance of xs:byte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-75"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:nonPositiveInteger is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonPositiveInteger(xs:double("0")) instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-76"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:negativeInteger is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:negativeInteger(xs:double("-4")) instance of xs:negativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-77"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:long is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long(xs:double("-4")) instance of xs:long</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-78"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:int is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:int(xs:double("-4")) instance of xs:int</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-79"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:short is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:short(xs:double("-4")) instance of xs:short</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-80"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:nonNegativeInteger is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger(xs:double("4")) instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-81"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedLong is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedLong(xs:double("4")) instance of xs:unsignedLong</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-82"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedInt is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedInt(xs:double("4")) instance of xs:unsignedInt</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-83"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedShort is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedShort(xs:double("4")) instance of xs:unsignedShort</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-84"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedByte is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedByte(xs:double("4")) instance of xs:unsignedByte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-85"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:positiveInteger is of the right type, when casting from xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger(xs:double("4")) instance of xs:positiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-86"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:byte is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:byte(xs:float("1")) instance of xs:byte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-87"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:nonPositiveInteger is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonPositiveInteger(xs:float("0")) instance of xs:nonPositiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-88"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:negativeInteger is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:negativeInteger(xs:float("-4")) instance of xs:negativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-89"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:long is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:long(xs:float("-4")) instance of xs:long</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-90"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:int is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:int(xs:float("-4")) instance of xs:int</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-91"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:short is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:short(xs:float("-4")) instance of xs:short</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-92"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:nonNegativeInteger is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:nonNegativeInteger(xs:float("4")) instance of xs:nonNegativeInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-93"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedLong is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedLong(xs:float("4")) instance of xs:unsignedLong</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-94"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedInt is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedInt(xs:float("4")) instance of xs:unsignedInt</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-95"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedShort is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedShort(xs:float("4")) instance of xs:unsignedShort</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-96"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:unsignedByte is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:unsignedByte(xs:float("4")) instance of xs:unsignedByte</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-97"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Ensure that a cast to xs:positiveInteger is of the right type, when casting from xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:positiveInteger(xs:float("4")) instance of xs:positiveInteger</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-98"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Instance of involving empty-sequence(). </description>
    <created by="Frans Englich" on="2008-11-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>node-name(text {""}) instance of empty-sequence()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-99"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("true"),xs:boolean("true"))</response-string>
    <description> Test using attribute(). </description>
    <created by="Frans Englich" on="2009-01-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<e attr=""/>/(@attr instance of attribute(), @* instance of attribute())]]>
    </test>
    <result-string>(xs:boolean("true"),xs:boolean("true"))</result-string>
    <result>
      <assert-string-value>true true</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-SeqExprInstanceOf-100"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("true"),xs:boolean("true"))</response-string>
    <description> Test using element(). </description>
    <created by="Frans Englich" on="2009-01-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a><b/></a>/(b instance of element(), * instance of element())]]>
    </test>
    <result-string>(xs:boolean("true"),xs:boolean("true"))</result-string>
    <result>
      <assert-string-value>true true</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-instance-of-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("true"),xs:boolean("false"))</response-string>
    <description> Test that the types of variables are correctly preserved on the stack. </description>
    <created by="Oliver Hallam" on="2008-11-25"/>
    <test>
        for $x in (xs:integer(1), xs:decimal(1)) return (((($x + 1) * 2) - 1) instance of xs:integer)
      </test>
    <result-string>(xs:boolean("true"),xs:boolean("false"))</result-string>
    <result>
      <assert-string-value>true false</assert-string-value>
    </result>
  </test-case>
</test-set>