<?xml version="1.0" encoding="us-ascii"?>
<test-set
 xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
 name="prod-RequireProhibitFeature"
 covers="require-and-prohibit-feature">
   <description>Tests for the require-feature and prohibit-feature options.</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-RequireProhibitFeature"/>
   <link type="spec" document="XQuery" section-number="4.20"
         idref="id-require-prohibit-feature"/>

  <environment name="dummy-schema">
    <schema uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xsd">
      <description>An empty schema</description>
      <created by="Ghislain Fourny" on="2012-10-15"/>
    </schema>
  </environment>

  <environment name="data-doc">
    <source role="." file="RequireProhibitFeature/data.xml">
      <description>Simple xml document</description>
      <created by="O'Neil Delpratt, Saxonica" on="2012-10-23"/>
    </source>
  </environment>
  
  <test-case name="require-schema-aware-1-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-1-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-2-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Removed dummy schema environment." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test><![CDATA[
      declare option require-feature "typed-data-schemas";
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-2-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Removed dummy schema environment." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test><![CDATA[
      declare option require-feature "typed-data-schemas";
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <any-of>
        <assert-true />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-3-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-3-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <error code="XQST0009"/>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-4-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="declaration of require-feature option missing" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2012-03-19" change="Removed option." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Removed dummy schema environment." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test><![CDATA[
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-4-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="declaration of require-feature option missing" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2012-03-19" change="Removed option." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Removed dummy schema environment." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test><![CDATA[
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <error code="XQST0075"/>
    </result>
  </test-case>
  
  <test-case name="require-static-typing-1-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-05" change="See Bug 19606." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="true"/>
    <test>
      declare option require-feature "static-typing";
      let $i as xs:integer := 
              if (current-date() eq xs:date('1900-01-01'))
              then ()
              else 1
      return $i
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="require-static-typing-1-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-05" change="See Bug 19606." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="false"/>
    <test>
      declare option require-feature "static-typing";
      let $i as xs:integer := 
              if (current-date() eq xs:date('1900-01-01'))
              then ()
              else 1
      return $i
    </test>
    <result>
      <any-of>
        <error code="XPTY0004"/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-module-1-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt" on="2012-10-22" change="declare option now appears after import. Bug issue #19597. Also changed assert-eq to assert-empty" />
    <modified by="Tim Mills" on="2012-10-23" change="set module namespace to match actual module namespace" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace m = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "module";
      ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-module-1-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt" on="2012-10-22" change="declare option now appears after import. Bug issue #19597. Also changed assert-eq to assert-empty" />
    <modified by="Tim Mills" on="2012-10-23" change="set module namespace to match actual module namespace" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      import module namespace m = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "module";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-module-2-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="O'Neil Delpratt" on="2012-10-25" change="Added query body and set module namespace to match actual module namespace" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace m = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-module-2-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="O'Neil Delpratt" on="2012-10-25" change="Added query body and set module namespace to match actual module namespace" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      import module namespace m = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <error code="XQST0016"/>
    </result>
  </test-case>
  
  <test-case name="require-serialization-1">
    <description>An error must be thrown if the feature is not recognized.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-06" change="Resolved Bug 19877." />
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "serialization";
      ()
    </test>
    <result>
      <any-of>
	<error code="XQST0123"/>
	<assert-empty />
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-1-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-1-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <any-of>
        <assert-false/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-2-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "higher-order-function";
      for $f in () return $f(1)
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-2-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function";
      for $f in () return $f(1)
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-3-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Tim Mills" on="2012-10-23" change="changed result of test to match assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "higher-order-function";
      let $f := function($x) { $x + 1 } return ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-3-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Tim Mills" on="2012-10-23" change="changed result of test to match assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function";
      let $f := function($x) { $x + 1 } return ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-4-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "higher-order-function";
      let $f := sum#1 return 0
    </test>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-4-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function";
      let $f := sum#1 return 0
    </test>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-5-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "higher-order-function";
      for $f in () return $f(1, ?)
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  
  <test-case name="require-higher-order-function-5-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function";
      for $f in () return $f(1, ?)
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-6-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      1 instance of function(*)
    </test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-6-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      1 instance of function(*)
    </test>
    <result>
      <any-of>
        <assert-false/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0129"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-7-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      for $f in () return $f(1)
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-7-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      for $f in () return $f(1)
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0129"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-8-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      let $f := function($x) { $x + 1 } return 0
    </test>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-8-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      let $f := function($x) { $x + 1 } return 0
    </test>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0129"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-9-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      let $f := sum#1 return 0
    </test>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-9-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      let $f := sum#1 return 0
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="require-higher-order-function-10-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      for $f in () return $f(1, ?)
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>  
  
  <test-case name="require-higher-order-function-10-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      for $f in () return $f(1, ?)
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>  
  
  <test-case name="prohibit-schema-aware-1-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0009"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-schema-aware-1-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <error code="XQST0009"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-schema-aware-2-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil, Saxonica" on="2012-10-23" change="Added prohibited-feature option. See bug issue #19597" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data-schemas";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0075"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-schema-aware-2-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil, Saxonica" on="2012-10-23" change="Added prohibited-feature option. See bug issue #19597" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data-schemas";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <error code="XQST0075"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-static-typing-1-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-05" change="See Bug 19606." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="true"/>
    <test>
      declare option prohibit-feature "static-typing";
      try { let $i as xs:integer := 
              if (current-date() ne xs:date('1900-01-01'))
              then ()
              else 1
            return $i } catch * { 0 }
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <assert-eq>0</assert-eq>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-static-typing-1-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-05" change="See Bug 19606." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="false"/>
    <test>
      declare option prohibit-feature "static-typing";
      try { let $i as xs:integer := 
              if (current-date() ne xs:date('1900-01-01'))
              then ()
              else 1
            return $i } catch * { 0 }
    </test>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-module-1-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-15" change="Bug fix to issue #19597" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace m = "http://www.example.com/dummy-module";
      declare option prohibit-feature "module";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0016"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-module-1-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-15" change="Bug fix to issue #19597" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/dummy.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      import module namespace m = "http://www.example.com/dummy-module";
      declare option prohibit-feature "module";
      ()
    </test>
    <result>
      <error code="XQST0016"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-1-s">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-1-ns">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-2-s">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      for $f in () return $f(1)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-2-ns">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      for $f in () return $f(1)
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-3-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      let $f := function($x) { $x + 1 } return 0
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-3-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      let $f := function($x) { $x + 1 } return 0
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-4-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      let $f := sum#1 return 0
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-4-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      let $f := sum#1 return 0
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="prohibit-higher-order-function-5-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      for $f in () return $f(1, ?)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>  
  
  <test-case name="prohibit-higher-order-function-5-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      for $f in () return $f(1, ?)
    </test>
    <result>
      <error code="XQST0129"/>
    </result>
  </test-case>  
  
  <test-case name="unknown-feature">
    <description>An error must be thrown if the feature is not recognized.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare namespace example = "http://www.example.com/does/not/exist";
      declare option require-feature "example:does-not-exist";
      ()
    </test>
    <result>
      <error code="XQST0123"/>
    </result>
  </test-case>
  
  <test-case name="well-formed-feature-1">
    <description>Features must be lexical QNames.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "not:a:qname";
      ()
    </test>
    <result>
      <error code="XQST0122"/>
    </result>
  </test-case>

  <test-case name="well-formed-feature-2">
    <description>Features must be lexical QNames.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt" on="2013-05-01" change="bug fix added error code relating to bug issue #21719"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "qname not:a:qname";
      ()
    </test>
    <result>
        <any-of>
            <error code="XQST0122"/>
            <error code="XQST0123"/>
        </any-of>
    </result>
  </test-case>
  
  <test-case name="well-formed-feature-3">
    <description>Features must be lexical QNames.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "123";
      ()
    </test>
    <result>
      <error code="XQST0122"/>
    </result>
  </test-case>
  
  <test-case name="well-formed-feature-4">
    <description>The prefix of a feature must be bound.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Tim Mills" on="2012-11-05" change="Fixed error code (Bug 19629)" />
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "unkonwn:prefix";
      ()
    </test>
    <result>
      <error code="XPST0081"/>
    </result>
  </test-case>
  
  <test-case name="require-prohibit-1">
    <description>A feature cannot be both required and prohibited.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "typed-data-schemas";
      declare option prohibit-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <error code="XQST0127"/>
    </result>
  </test-case>
  
  <test-case name="require-prohibit-2">
    <description>A feature cannot be both required and prohibited.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "module";
      declare option prohibit-feature "module";
      ()
    </test>
    <result>
      <error code="XQST0127"/>
    </result>
  </test-case>
  
  <test-case name="require-prohibit-4">
    <description>A feature cannot be both required and prohibited.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "higher-order-function";
      declare option prohibit-feature "higher-order-function";
      ()
    </test>
    <result>
      <error code="XQST0127"/>
    </result>
  </test-case>
  
  <test-case name="require-prohibit-5">
    <description>A feature cannot be both required and prohibited.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "static-typing";
      declare option prohibit-feature "static-typing";
      ()
    </test>
    <result>
      <error code="XQST0127"/>
    </result>
  </test-case>
  
  <test-case name="require-all-extensions-1">
    <description>All extensions features cannot be activated.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option require-feature "all-extensions";
      ()
    </test>
    <result>
      <error code="XQST0126"/>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-1-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="staticTyping" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "all-optional-features";
      ()
    </test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-1-ns1">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "all-optional-features";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-1-ns2">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "all-optional-features";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-1-ns3">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="false"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "all-optional-features";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-1-ns4">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "all-optional-features";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-3-s">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <dependency type="feature" value="staticTyping" satisfied="true"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      declare option require-feature "all-optional-features";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-3-ns1">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      declare option require-feature "all-optional-features";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-3-ns2">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      declare option require-feature "all-optional-features";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-3-ns3">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="false"/>
    <test>
      declare option prohibit-feature "higher-order-function";
      declare option require-feature "all-optional-features";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-2-s">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="true"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      declare option require-feature "all-optional-features";
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-2-ns1">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      declare option require-feature "all-optional-features";
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-2-ns2">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="staticTyping" satisfied="false"/>
    <test>
      declare option require-feature "all-optional-features";
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-2-ns3">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      declare option require-feature "all-optional-features";
      declare option prohibit-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate and activate the others -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- cannot activate  -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-all-optional-features-1">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option prohibit-feature "all-optional-features";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-all-optional-features-2-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing schema-aware feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <assert-empty />
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-all-optional-features-2-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing schema-aware feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "typed-data-schemas";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- supported -->
        <assert-empty />
        <!-- not supported -->
        <error code="XQST0120"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-all-optional-features-3-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing schema-aware feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "typed-data-schemas";
      declare option prohibit-feature "all-optional-features";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- supported -->
        <assert-empty />
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  
  <test-case name="prohibit-all-optional-features-3-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2012-10-15"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Ghislain Fourny" on="2013-05-28" change="Changing schema-aware feature name." />
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <environment ref="dummy-schema"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "typed-data-schemas";
      declare option prohibit-feature "all-optional-features";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- supported -->
        <assert-empty />
        <!-- not supported -->
        <error code="XQST0120"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  
  <test-case name="require-all-optional-features-5-s">
    <description>Test should succeed if feature is supported by implementation, otherwise error. </description>
    <created by="O'Neil Delpratt, Saxonica" on="2012-10-24"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-04-19" change="Allowing error if cannot prohibit." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <any-of>
        <assert-false />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-5-ns">
    <description>Test should succeed if feature is supported by implementation, otherwise error. </description>
    <created by="O'Neil Delpratt, Saxonica" on="2012-10-24"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "higher-order-function";
      1 instance of function(*)
    </test>
    <result>
      <any-of>
        <assert-false />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-7-s">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="O'Neil Delpratt, Saxonica" on="2012-10-24"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "module";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- is deactivated -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-all-optional-features-7-ns">
    <description>An error must be thrown if the feature is prohibited and used. </description>
    <created by="O'Neil Delpratt, Saxonica" on="2012-10-24"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "module";
      1 instance of function(*)
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- is deactivated -->
        <error code="XQST0129"/>
        <!-- not supported -->
        <error code="XQST0120"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  

  
  <test-case name="separate-modules-1">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "higher-order-function";
      let $f := module:one() return 1
    </test>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-2-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-25" change="Bug fix #19630" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "module";
      for $f in module:one() return 1
    </test>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>

  <test-case name="separate-modules-2-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-25" change="Bug fix #19630" />
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "all-optional-features";
      declare option require-feature "module";
      for $f in module:one() return 1
    </test>
    <result>
      <any-of>
        <error code="XQST0129" />
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-3-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-06" change="Fixed name of module." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "higher-order-function";
      for $f in module:one() return 1
    </test>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <!-- not supported -->
        <error code="XQST0120"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-3-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Tim Mills" on="2012-11-06" change="Fixed name of module." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "higher-order-function";
      for $f in module:one() return 1
    </test>
    <result>
      <any-of>
        <assert-eq>1</assert-eq>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-4-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      module:one()()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="separate-modules-4-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Tim Mills" on="2013-03-21" change="Corrected error code.  See bug 19858." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      module:one()()
    </test>
    <result>
      <any-of>
	<!-- XQST0120 raised when the implementation can enable the higher order feature in the imported module -->
        <error code="XQST0120"/>
	<!-- XQST0129 raised when the implementation cannot enable the higher order feature in the imported module -->
        <error code="XQST0129"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-5-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "higher-order-function";
      module:one()()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-5-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/requires.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "higher-order-function";
      module:one()()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- not supported -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-6-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits-uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-6-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits-uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <error code="XQST0129"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-7-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits-uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "higher-order-function";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-7-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits-uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "higher-order-function";
      ()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0129"/>
        <!-- not supported -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-8-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2013-03-20" change="Fixed value of $f." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      let $f := function() { () } return $f()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <assert-empty />
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-8-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="O'Neil Delpratt, Saxonica" on="2012-10-23" change="assert-eq changed to assert-empty" />
    <modified by="Ghislain Fourny" on="2013-03-20" change="Fixed value of $f." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      let $f := function() { () } return $f()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <error code="XQST0129"/>
    </result>
  </test-case>
  
  <test-case name="separate-modules-9-s">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-20" change="Fixed value of $f." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <assert-empty />
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="separate-modules-9-ns">
    <description>Prohibiting or requiring a feature only affects the module.</description>
    <created by="Ghislain Fourny" on="2012-10-18"/>
    <modified by="Ghislain Fourny" on="2012-11-01" change="Duplicating tests depending on feature support." />
    <modified by="Ghislain Fourny" on="2013-03-19" change="Allowing reactivation of feature." />
    <modified by="Ghislain Fourny" on="2013-03-20" change="Fixed value of $f." />
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/prohibits.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-1-s">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="true"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "module higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <assert-empty />
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-1-ns-1">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "module higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-1-ns-2">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <module uri="http://www.w3.org/XQueryTest/RequireProhibitFeature" file="RequireProhibitFeature/uses.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="moduleImport" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option require-feature "module higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-2-s">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "unknown higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0123"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-2-ns">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "unknown higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0123"/>
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-3-s">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="true"/>
    <test>
      declare option require-feature "unknown higher-order-function";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0123"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-feature-list-3-ns">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions" satisfied="false"/>
    <test>
      declare option require-feature "higher-order-function unknown";
      let $f := function() { () } return $f()
    </test>
    <result>
      <any-of>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0123"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-feature-list-1">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option prohibit-feature "all-extensions static-typing";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-feature-list-2">
    <description>The require-feature and prohibit-feature options may be lists of QNames.</description>
    <created by="Ghislain Fourny" on="2013-04-19"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      declare option prohibit-feature "static-typing all-extensions";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-1-s">
    <description>An error must be thrown if the feature is required but not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      ()
    </test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-1-ns">
    <description>An error must be thrown if the feature is required but not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-2-s">
    <description>An error must be thrown if the feature is required but not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      module:nine() le module:ten()
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-2-ns">
    <description>An error must be thrown if the feature is required but not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-true/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-3-s">
    <description>Data must be typed if the typed-data feature is supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      module:nine() le module:ten()
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-3-ns">
    <description>Data must be untyped if the typed-data feature is not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-false/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-1-s">
    <description>An error must be thrown if the typed data feature cannot be prohibited.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option prohibit-feature "typed-data";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-1-ns">
    <description>Prohibiting typed-data must work if it is not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option prohibit-feature "typed-data";
      ()
    </test>
    <result>
      <any-of>
        <assert-empty/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-2-s">
    <description>Data must be untyped if the feature is deactivated.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option prohibit-feature "typed-data";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-false/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-2-ns">
    <description>Data must be untyped if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option prohibit-feature "typed-data";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-false/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-3-s">
    <description>Prohibiting typed data must trigger prohibiting schema awareness.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "typed-data";
      ()
    </test>
    <result>
      <any-of>
        <error code="XQST0009"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-3-ns">
    <description>Prohibiting typed data must trigger prohibiting schema awareness.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      import schema namespace s = "http://www.w3.org/XQueryTest/RequireProhibitFeature";
      declare option prohibit-feature "typed-data";
      ()
    </test>
    <result>
      <any-of>
        <error code="XQST0009"/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-4-s">
    <description>Prohibiting typed data must trigger prohibiting schema awareness.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <any-of>
        <error code="XQST0075"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-typed-data-4-ns">
    <description>Prohibiting typed data must trigger prohibiting schema awareness.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <error code="XQST0075"/>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-4-s">
    <description>Requiring schema awareness must trigger requiring typed data.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data-schemas";
      module:nine() le module:ten()
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-4-ns">
    <description>Requiring schema awareness must trigger requiring typed data.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data-schemas";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-true/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-prohibit-schemas-1-s">
    <description>Requiring schema awareness must trigger requiring typed data.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      declare option prohibit-feature "typed-data-schemas";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-true/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-prohibit-schemas-1-sns">
    <description>Requiring schema awareness must trigger requiring typed data.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="true"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      declare option prohibit-feature "typed-data-schemas";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-true/>
        <!-- Cannot activate schema in imported module while deactivating it in the main module -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-typed-data-prohibit-schemas-1-ns">
    <description>Requiring schema awareness must trigger requiring typed data.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <module uri="http://www.w3.org/XQueryTest/ProducesTypedData" file="RequireProhibitFeature/produces-typed-data.xquery"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="typedData" satisfied="false"/>
    <test>
      import module namespace module = "http://www.w3.org/XQueryTest/ProducesTypedData";
      declare option require-feature "typed-data";
      declare option prohibit-feature "typed-data-schemas";
      module:nine() le module:ten()
    </test>
    <result>
      <any-of>
        <assert-true/>
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-5-s">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test><![CDATA[
      declare option require-feature "typed-data-all-optional-features";
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="require-schema-aware-5-ns">
    <description>An error must be thrown if the feature is not supported.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test><![CDATA[
      declare option require-feature "typed-data-all-optional-features";
      (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <any-of>
        <assert-true />
        <!-- The test must be reported to fail if a different error is returned -->
        <error code="XQST0120"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-schema-aware-3-s">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="true"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data-all-optional-features";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <!-- The test must be reported to fail if a different error is returned -->
      <any-of>
        <!-- can deactivate -->
        <error code="XQST0075"/>
        <!-- cannot deactivate -->
        <error code="XQST0128"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="prohibit-schema-aware-3-ns">
    <description>An error must be thrown if the feature is prohibited and used.</description>
    <created by="Ghislain Fourny" on="2013-05-28"/>
    <modified by="Ghislain Fourny" on="2013-06-13" change="Corrected typo." />
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="schemaAware" satisfied="false"/>
    <test><![CDATA[
    declare option prohibit-feature "typed-data-all-optional-features";
    (validate lax { <element
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xsi:type="xs:integer">42</element> }) instance of element(*, xs:integer)
      ]]>
    </test>
    <result>
      <error code="XQST0075"/>
    </result>
  </test-case>
  
</test-set>
