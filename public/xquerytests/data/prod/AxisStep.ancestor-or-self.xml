<test-set name="prod-AxisStep.ancestor-or-self" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the AxisStep production</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-AxisStep" type="spec"/>
  <link document="" idref="axes" section-number="3.2.1.1" type="spec"/>
  <test-case name="ancestorself-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Evaluation of the ancestor-or-self axis for which the context node is not a node. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <test>(200)/ancestor-or-self::*</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0019"))</result-string>
    <result>
      <error code="XPTY0019"/>
    </result>
  </test-case>
  <test-case name="ancestorself-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluation of the ancestor-or-self axis for which the given node does not exists. Uses fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:count(/works/employee[1]/ancestor-or-self::noSuchNode)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="ancestorself-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "is" expression (return true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "is" expression (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works/employee[1])</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="ancestorself-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node before" expression (return true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works/employee[1]/ancestor-or-self::works) << exactly-one(/works/employee[1])]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node before" expression and both operands are the same (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works/employee[1]/ancestor-or-self::works) << exactly-one(/works/employee[1]/ancestor-or-self::works)]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="ancestorself-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node before" expression both operands are differents (return false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>
      <![CDATA[exactly-one(/works/employee[1]/ancestor-or-self::works) << exactly-one(/works/employee[1])]]>
    </test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node after" expression (returns true). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[1]) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node after" expression with both operands the same (returns false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="ancestorself-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "node after" expression with both operands the same (returns false). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/hours)</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="ancestorself-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "union " operation. Both operands are the same. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>((/works/employee[12]/*/day/ancestor-or-self::overtime) | (/works/employee[12]/*/day/ancestor-or-self::overtime))/count(*)</test>
    <result-string>xs:string("2")</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="ancestorself-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "union" operation. Both operands are different </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>((/works/employee[12]/*/day[1]/ancestor-or-self::overtime) | (/works/employee[12]/*/day[2]/ancestor-or-self::overtime))/count(*)</test>
    <result-string>xs:string("2")</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="ancestorself-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "intersect" operation. Both operands are the same. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>((/works/employee[12]/overtime/day/ancestor-or-self::employee) intersect (/works/employee[12]/overtime/day/ancestor-or-self::employee))/@name</test>
    <result-string>xs:string("John Doe 12")</result-string>
    <result>
      <assert-string-value>John Doe 12</assert-string-value>
    </result>
  </test-case>
  <test-case name="ancestorself-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the ancestor-self axis that is part of an "except" operation. Both operands are the same. Uses fn:count to avoid empty file </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:count((/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[ancestor-or-self::overtime]))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="ancestorself-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of an "except" operation. Both operands are different. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[1])</test>
    <result-string>xs:string("Tuesday")</result-string>
    <result>
      <assert-string-value>Tuesday</assert-string-value>
    </result>
  </test-case>
  <test-case name="ancestorself-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;day&gt;Monday&lt;/day&gt;,&lt;day&gt;Tuesday&lt;/day&gt;)</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of a boolean expression ("and" and fn:true(). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:true()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;day&gt;Monday&lt;/day&gt;,&lt;day&gt;Tuesday&lt;/day&gt;)</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of a boolean expression ("and" and fn:false()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:false()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="ancestorself-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of a boolean expression ("or" and fn:true()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:true()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> Evaluation of the ancestor-or-self axis that is part of a boolean expression ("or" and fn:false()). </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:false()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Evaluation of the ancestor-or-self axis that used as part of the deep-equal-function. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <environment ref="works-mod"/>
    <test>fn:deep-equal(/works/employee[12]/overtime/ancestor-or-self::works,/works/employee[12]/overtime/ancestor-or-self::works)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="ancestorself-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;anElement&gt;Some Content&lt;/anElement&gt;</response-string>
    <description> Evaluation of the ancestor-or-self axis used together with a newly constructed element. </description>
    <created by="Carmelo Montanez" on="2005-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $var := <anElement>Some Content</anElement> return $var/ancestor-or-self::*]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<anElement>Some Content</anElement>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="unabbreviatedSyntax-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">attribute name {"Jane Doe 1"}</response-string>
    <description> Evaluate selecting an ancestor or self (ancestor-or-self::employee)- Select the "employee" ancestors of the context node and if the context is "employee" select it as well. </description>
    <created by="Carmelo Montanez" on="2005-07-11"/>
    <environment ref="works-mod"/>
    <test>(for $h in (/works/employee[1]/hours) return $h/ancestor-or-self::employee)/@name</test>
    <result-string>attribute name {"Jane Doe 1"}</result-string>
    <result>
      <assert-string-value>Jane Doe 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),&lt;element/&gt;,xs:integer("1"))</response-string>
    <description> Apply axis ancestor on a single element. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <element/>/ancestor-or-self::node(), 1]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[1<element/>1]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply axis ancestor to a single processing instruction. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <?target data?>/ancestor-or-self::node(), 1]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[1<?target data?>1]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:boolean("true"),xs:integer("1"))</response-string>
    <description> Apply axis ancestor to a single attribute. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>1, (attribute name {"content"}/ancestor-or-self::node() instance of attribute(name)), 1</test>
    <result-string/>
    <result>
      <assert-deep-eq>1, true(), 1</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply axis ancestor to a single comment. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1, <!-- content -->/ancestor-or-self::node(), 1]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[1<!-- content -->1]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),document {}xs:integer("1"))</response-string>
    <description> Apply axis ancestor-or-self to a single document node. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>1, document {()}/ancestor-or-self::node(), 1</test>
    <result-string/>
    <result>
      <assert-xml>11</assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:string(""),xs:integer("1"))</response-string>
    <description> Apply axis ancestor to a single text node. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>1, text {""}/ancestor-or-self::node(), 1</test>
    <result-string/>
    <result>
      <assert-xml>11</assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("3")</response-string>
    <description> Apply fn:count() to the result of axis ancestor-or-self. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a> <b c=""> <c/> </b> <d/> </a>/b/c/(ancestor-or-self::*))]]>
    </test>
    <result-string>xs:integer("3")</result-string>
    <result>
      <assert-eq>3</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("2"),xs:integer("3"),xs:integer("2"))</response-string>
    <description> Apply fn:count() to the result of axis ancestor-or-self(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> <b c=""> <c/> </b> <d/> </a>//count(ancestor-or-self::*)]]>
    </test>
    <result-string>(xs:integer("1"),xs:integer("2"),xs:integer("3"),xs:integer("2"))</result-string>
    <result>
      <assert-string-value>1 2 3 2</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ancestor-or-selfAxis-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(&lt;c/&gt;,&lt;b&gt;&lt;c/&gt;&lt;/b&gt;,&lt;r&gt;&lt;a&gt;&lt;b&gt;&lt;c/&gt;&lt;/b&gt;&lt;/a&gt;&lt;/r&gt;)</response-string>
    <description> Use positional predicates. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<r> <a> <b> <c/> </b> </a> </r>/a/b/c/(ancestor-or-self::*[1], ancestor-or-self::*[2], ancestor-or-self::*[last()], ancestor-or-self::*[10])]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<r><a><b><c/></b></a></r><b><c/></b><c/>]]>
      </assert-xml>
    </result>
  </test-case>
</test-set>