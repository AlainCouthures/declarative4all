<test-set name="prod-CompPIConstructor" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the CompPIConstructor (Computed Processing Instruction Constructor) production</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-CompPIConstructor" type="spec"/>
  <link document="XQuery" idref="id-computed-pis" section-number="3.7.3.5" type="spec"/>
  <environment name="DupNode">
    <source file="CompAttrConstructor/DupNode.xml" role=".">
      <description>Simple document with all node kinds</description>
      <created by="Andreas Behm" on="2005-04-26"/>
    </source>
  </environment>
  <dependency type="spec" value="XQ10+"/>
  <test-case name="Constr-comppi-name-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text"}</response-string>
    <description> NCName for computed PI constructor </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction pi {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-name-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> QName for computed PI constructor </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<elem xmlns:foo="http://www.example.com">{processing-instruction foo:pi {'text'}}</elem>]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> empty computed name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {()} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction one two {"text"}</response-string>
    <description> two strings as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {&apos;one&apos;, &apos;two&apos;} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction one two {"text"}</response-string>
    <description> two untypedAtomic values as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {xs:untypedAtomic(&apos;one&apos;), xs:untypedAtomic(&apos;two&apos;)} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction text text {"text"}</response-string>
    <description> content of two nodes as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="DupNode"/>
    <test>processing-instruction {//a} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction 1 2 {"text"}</response-string>
    <description> two numeric values as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {1,2} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction 123 {"text"}</response-string>
    <description> numeric value as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {123} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction 1999-05-31T13:20:00 {"text"}</response-string>
    <description> dataTime value as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {xs:dateTime("1999-05-31T13:20:00")} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction aNCname {"text"}</response-string>
    <description> NCName as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="atomic"/>
    <test>processing-instruction {//*:NCName[1]} {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?aNCname text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction foo:aQname {"text"}</response-string>
    <description> QName as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="atomic"/>
    <test>processing-instruction {//*:QName} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <any-of>
        <error code="XQDY0041"/>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text"}</response-string>
    <description> string as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {&apos;pi&apos;} {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text"}</response-string>
    <description> string as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {&apos;pi&apos;, ()} {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text"}</response-string>
    <description> string as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {(), &apos;pi&apos;} {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> string with prefix as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<elem xmlns:foo="http://www.example.com/foo">{processing-instruction {'foo:attr'} {}}</elem>]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result>
      <error code="XQDY0041"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text"}</response-string>
    <description> untyped atomic as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {xs:untypedAtomic(&apos;pi&apos;)} {&apos;text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> untyped atomic with prefix as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<elem xmlns:foo="http://www.example.com/foo">{processing-instruction {xs:untypedAtomic('foo:pi')} {'text'}}</elem>]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result>
      <error code="XQDY0041"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction p i {"text"}</response-string>
    <description> non-ncname string as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {&apos;p i&apos;} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result>
      <error code="XQDY0041"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-compname-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction p i {"text"}</response-string>
    <description> non-ncname untyped atomic as name </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>processing-instruction {xs:untypedAtomic(&apos;p i&apos;)} {&apos;text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result>
      <error code="XQDY0041"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-doc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"textcontenttextcontent textcontenttextcontent"}</response-string>
    <description> strip document nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="DupNode"/>
    <test>processing-instruction pi {., .}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi texttext texttext?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-parent-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> empty parent </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count((processing-instruction pi {()})/..)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-comppi-string-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> string value of PI </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>fn:string(processing-instruction pi {&apos;a&apos;, element a {}, &apos;b&apos;})</test>
    <result-string>xs:string("a  b")</result-string>
    <result>
      <assert-string-value>a  b</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-comppi-data-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> typed value of PI </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>fn:data(processing-instruction pi {&apos;a&apos;, element a {}, &apos;b&apos;})</test>
    <result-string>xs:string("a  b")</result-string>
    <result>
      <assert-string-value>a  b</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-comppi-enclexpr-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"1 string 3.14 0.012345 2002-04-02T12:00:00-01:00"}</response-string>
    <description> enclosed expression in computed processing-instruction node - atomic values </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {1,&apos;string&apos;,3.14,xs:float(&apos;1.2345e-2&apos;),xs:dateTime(&apos;2002-04-02T12:00:00-01:00&apos;)}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi 1 string 3.14 0.012345 2002-04-02T12:00:00-01:00?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-enclexpr-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"123 456 789"}</response-string>
    <description> enclosed expression in computed processing-instruction node - nodes </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[processing-instruction pi {<elem>123</elem>, (<elem attr='456'/>)/@attr, (<elem>789</elem>)/text()}]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi 123 456 789?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-enclexpr-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"1  2"}</response-string>
    <description> enclosed expression in computed processing-instruction node - empty string </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {1,&apos;&apos;,2}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi 1  2?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-enclexpr-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"1  2"}</response-string>
    <description> enclosed expression in computed processing-instruction node - empty node </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[processing-instruction pi {1,<a/>,2}]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi 1  2?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-enclexpr-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"textcontenttextcontent"}</response-string>
    <description> enclosed expression in computed processing-instruction node - nodes </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <environment ref="DupNode"/>
    <test>processing-instruction pi {/root}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi texttext?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-namexml-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction xml {"pi"}</response-string>
    <description> invalid PI target xml </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction xml {&apos;pi&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-namexml-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction XmL {"pi"}</response-string>
    <description> invalid PI target xml </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction XmL {&apos;pi&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-namexml-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction xml {"pi"}</response-string>
    <description> invalid PI target xml </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction {&apos;xml&apos;} {&apos;pi&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-namexml-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction XmL {"pi"}</response-string>
    <description> invalid PI target xml </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction {&apos;XmL&apos;} {&apos;pi&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-invalid-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"?"}</response-string>
    <description> invalid PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {&apos;?&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-invalid-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"?text"}</response-string>
    <description> invalid PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {&apos;?text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-invalid-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {"text?text"}</response-string>
    <description> invalid PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {&apos;text?text&apos;}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
  <test-case name="Constr-comppi-space-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {" text"}</response-string>
    <description> leading whitespace in PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {&apos; text&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-space-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {" 
	text"}</response-string>
    <description> leading whitespace in PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>
      <![CDATA[processing-instruction pi {'&#x20;&#x0A;&#x0D;&#x09;text'}]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi text?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-space-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("")</response-string>
    <description> leading whitespace in PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>string-to-codepoints(processing-instruction pi {&apos; text&apos;})</test>
    <result-string>xs:string("116 101 120 116")</result-string>
    <result>
      <assert-string-value>116 101 120 116</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-comppi-space-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("")</response-string>
    <description> leading whitespace in PI content </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>
      <![CDATA[string-to-codepoints(processing-instruction pi {'&#x20;&#x0A;&#x0D;&#x09;text'})]]>
    </test>
    <result-string>xs:string("116 101 120 116")</result-string>
    <result>
      <assert-string-value>116 101 120 116</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-comppi-empty-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Empty PI node </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {()}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi ?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-comppi-empty-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction pi {""}</response-string>
    <description> Empty PI node </description>
    <created by="Andreas Behm" on="2005-08-17"/>
    <test>processing-instruction pi {&apos;&apos;}</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<?pi ?>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The name can&apos;t be specified as a string literal. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction "name" {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction xml {"content"}</response-string>
    <description> An invalid name for a processing-instruction. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction {"xml"} {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction  xmL  {"content"}</response-string>
    <description> An invalid name for a processing-instruction. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction {" xmL "} {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0064"))</result-string>
    <result>
      <error code="XQDY0064"/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Extract the name from a computed PI. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>local-name(processing-instruction {" name "} {"content"})</test>
    <result-string>xs:string("name")</result-string>
    <result>
      <assert-string-value>name</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Extract the name from a computed PI. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>local-name(processing-instruction {" XmLnaMe "} {"content"})</test>
    <result-string>xs:string("XmLnaMe")</result-string>
    <result>
      <assert-string-value>XmLnaMe</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction 1.das  {"content"}</response-string>
    <description> Invalid target name. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction {"1.das "} {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0041"))</result-string>
    <result>
      <error code="XQDY0041"/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">processing-instruction thename {"asdas?"}</response-string>
    <description> PI data containing &apos;?&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction {"thename"} {"asdas?"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Extract the data from a computed PI. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(processing-instruction {"thename"} {"asdas? "})</test>
    <result-string>xs:string("asdas? ")</result-string>
    <result>
      <assert-string-value>asdas? </assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Extract (possible parser-confusing) PI data. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(processing-instruction {"thename"} {"content {1+ } {"})</test>
    <result-string>xs:string("content {1+ } {")</result-string>
    <result>
      <assert-string-value>content {1+ } {</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Data that only is whitespace. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>processing-instruction name {" "} eq ""</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-ComputeConPI-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test the atomized type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>data(processing-instruction name {"content"}) instance of xs:string</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-constr-comppi-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">&lt;element&gt; processing-instruction undefined {"?&amp;gt;"}&lt;/element&gt;</response-string>
    <description> test detection of &apos;?&apos; in computed comment </description>
    <created by="Tim Mills" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	<element> { processing-instruction { 'pi' } { <element>?&gt;</element> } } </element>
      ]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
  <test-case name="cbcl-constr-comppi-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> test detection of &apos;?&apos; in computed comment </description>
    <created by="Tim Mills" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	declare function local:tag($arg) as element() { element { 'tag' } { $arg } }; 
      	<element> { processing-instruction { 'pi' } { "content", local:tag('?&gt;') } } </element>
      ]]>
    </test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XQDY0026"))</result-string>
    <result>
      <error code="XQDY0026"/>
    </result>
  </test-case>
</test-set>