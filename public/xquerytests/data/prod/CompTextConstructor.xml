<test-set name="prod-CompTextConstructor" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the CompTextConstructor (text node constructor) production</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-CompTextConstructor" type="spec"/>
  <link document="XQuery" idref="id-textConstructors" section-number="3.7.3.4" type="spec"/>
  <environment name="DupNode">
    <source file="CompAttrConstructor/DupNode.xml" role=".">
      <description>Simple document with all node kinds</description>
      <created by="Andreas Behm" on="2005-04-26"/>
    </source>
  </environment>
  <dependency type="spec" value="XQ10+"/>
  <test-case name="Constr-text-enclexpr-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> enclosed expression in text node - atomic values </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>text {1,&apos;string&apos;,3.14,xs:float(&apos;1.2345e-2&apos;),xs:dateTime(&apos;2002-04-02T12:00:00-01:00&apos;)}</test>
    <result-string>xs:string("1 string 3.14 0.012345 2002-04-02T12:00:00-01:00")</result-string>
    <result>
      <assert-string-value>1 string 3.14 0.012345 2002-04-02T12:00:00-01:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-enclexpr-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> enclosed expression in text node - nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[text {<elem>123</elem>, (<elem attr='456'/>)/@attr, (<elem>789</elem>)/text()}]]>
    </test>
    <result-string>xs:string("123 456 789")</result-string>
    <result>
      <assert-string-value>123 456 789</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-enclexpr-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> enclosed expression in text node - empty string </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>text {1,&apos;&apos;,2}</test>
    <result-string>xs:string("1  2")</result-string>
    <result>
      <assert-string-value>1  2</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-enclexpr-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> enclosed expression in text node - empty node </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[text {1,<a/>,2}]]>
    </test>
    <result-string>xs:string("1  2")</result-string>
    <result>
      <assert-string-value>1  2</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-enclexpr-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> enclosed expression in text node - nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="DupNode"/>
    <test>text {/root}</test>
    <result-string>xs:string("texttext")</result-string>
    <result>
      <assert-string-value>texttext</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-doc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> strip document nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <environment ref="DupNode"/>
    <test>text {., .}</test>
    <result-string>xs:string("texttext texttext")</result-string>
    <result>
      <assert-string-value>texttext texttext</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-parent-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> empty parent </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count((text {&apos;text&apos;})/..)</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-string-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> string value of text node </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>fn:string(text {&apos;a&apos;, element a {}, &apos;b&apos;})</test>
    <result-string>xs:string("a  b")</result-string>
    <result>
      <assert-string-value>a  b</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-data-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> typed value of text node </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>fn:data(text {&apos;a&apos;, element a {}, &apos;b&apos;})</test>
    <result-string>xs:string("a  b")</result-string>
    <result>
      <assert-string-value>a  b</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-count-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count(text {&apos;&apos;})</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-count-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count(text {()})</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-count-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count(element elem {text {&apos;&apos;}}/text())</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-count-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count(document {text {&apos;&apos;}}/text())</test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Constr-text-count-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<a>{text {''}}<b/>{text {''}}<b/>{text {''}}</a>/text())]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-count-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("3")</response-string>
    <description> count text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(document {text {''},<b/>,text {''},<b/>,text {''}}/text())]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0005"))</result-string>
    <result>
      <any-of>
        <assert-eq>0</assert-eq>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="Constr-text-adjtext-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> merge adjacent text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[count(<elem>{text {'te'}, text {'xt'}}</elem>/text())]]>
    </test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-adjtext-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> merge adjacent text nodes </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>count(document {text {&apos;te&apos;}, text {&apos;xt&apos;}}/text())</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="Constr-text-nested-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> nested text node constructor </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <test>text {text {&apos;one&apos;, text {&apos;two&apos;}}, &apos;three&apos;, text {&apos;four&apos;}}</test>
    <result-string>xs:string("one two three four")</result-string>
    <result>
      <assert-string-value>one two three four</assert-string-value>
    </result>
  </test-case>
  <test-case name="Constr-text-nested-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> nested text nodes in element constructor </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<elem>{text {'one'}}<a>{text {'two'}}</a>{text {'three'}}</elem>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<elem>one<a>two</a>three</elem>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="Constr-text-nested-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">document {one&lt;a/&gt;two&lt;b/&gt;three}</response-string>
    <description> nested text nodes in element constructor </description>
    <created by="Andreas Behm" on="2005-05-20"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[document {text {'one'}, <a/>, text {'two'}, <b/>, text {'three'}}]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[one<a/>two<b/>three]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Text constructors cannot specify a name. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>text {"name"} {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Text constructors cannot specify a name(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>text name {"content"}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> An empty text node is nevertheless a text node, not the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(text {""}) eq ""</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-ConText-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Construct from an empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a>{text{()}}</a>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a></a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The enclosed expression isn&apos;t optional. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>text{}</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test the atomized type. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>data(text {"content"}) instance of xs:untypedAtomic</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-ConText-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The end of content in a CDATA section may end with &apos;]&apos;. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA[content]]]/e&gt;</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e>content]</e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The end of content in a CDATA section may end with many &apos;]&apos;(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA[content]]]]]]/e&gt;</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e>content]]]]</e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The end of content in a CDATA section may end with &apos;]&apos;(#3). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA[]]]/e&gt;</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e>]</e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> The end of content in a CDATA section may end with many &apos;]&apos;(#4). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA[]]]]]]/e&gt;</test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<e>]]]]</e>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A CDATA section ending incorrectly. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA]]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A CDATA section ending incorrectly(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> An element ending incorrectly. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>e&gt;![CDATA]]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="K2-ConText-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure that an empty text node between two atomic values are serialized correctly. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<elem>{1}{text{""}}{2}</elem>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<elem>12</elem>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="K2-ConText-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Ensure that an empty text node between two atomic values are serialized correctly(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[string(<elem>{1}{text{""}}{2}</elem>)]]>
    </test>
    <result-string>xs:string("12")</result-string>
    <result>
      <assert-string-value>12</assert-string-value>
    </result>
  </test-case>
</test-set>