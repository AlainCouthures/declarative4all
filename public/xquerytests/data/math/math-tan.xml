<test-set covers="math-tan" name="math-tan" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the math:tan function introduced in XPath 3.0</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-tan" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <test-case name="math-tan-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description>Evaluate the function math:tan() with the argument ()</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(())</test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="math-tan-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0")</response-string>
    <description>Evaluate the function math:tan() with the argument 0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(0)</test>
    <result-string>xs:double("0")</result-string>
    <result>
      <assert-eq>0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-tan-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0")</response-string>
    <description>Evaluate the function math:tan() with the argument -0.0e0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(-0.0e0)</test>
    <result-string>xs:double("0")</result-string>
    <result>
      <assert-eq>-0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-tan-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0.9999999999999999")</response-string>
    <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(math:pi() div 4)</test>
    <result-string>xs:double("1.0e0")</result-string>
    <result>
      <assert>abs($result - 1.0e0) lt 0.0000001</assert>
    </result>
  </test-case>
  <test-case name="math-tan-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-0.9999999999999999")</response-string>
    <description>Evaluate the function math:tan() with the argument -math:pi() div 4</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(-math:pi() div 4)</test>
    <result-string>xs:double("-1.0e0")</result-string>
    <result>
      <assert>abs($result - -1.0e0) lt 0.0000001</assert>
    </result>
  </test-case>
  <test-case name="math-tan-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-1.1102230246251565e-16")</response-string>
    <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <modified by="Michael Kay, Saxonica" change="avoid function singularity, see bug 15233" on="2012-05-29"/>
    <modified by="Michael Kay, Saxonica" change="allow imprecision, see bug 18478" on="2013-05-01"/>
    <environment ref="math"/>
    <test>math:tan(math:pi() div 4) - 1</test>
    <result-string>xs:double("0.0e0")</result-string>
    <result>
      <assert>abs($result) le 1e-12</assert>
    </result>
  </test-case>
  <test-case name="math-tan-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("1.1102230246251565E-16")</response-string>
    <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <modified by="Michael Kay, Saxonica" change="avoid function singularity, see bug 15233" on="2012-05-29"/>
    <modified by="Michael Kay, Saxonica" change="allow imprecision, see bug 18478" on="2013-05-01"/>
    <environment ref="math"/>
    <test>math:tan(-math:pi() div 4) + 1</test>
    <result-string>xs:double("0.0e0")</result-string>
    <result>
      <assert>abs($result) le 1e-12</assert>
    </result>
  </test-case>
  <test-case name="math-tan-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-1.2246467991473532E-16")</response-string>
    <description>Evaluate the function math:tan() with the argument math:pi()</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(math:pi())</test>
    <result-string>xs:double("0.0e0")</result-string>
    <result>
      <assert>abs($result)  1e-12</assert>
    </result>
  </test-case>
  <test-case name="math-tan-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("NaN")</response-string>
    <description>Evaluate the function math:tan() with the argument xs:double(&apos;NaN&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(xs:double(&apos;NaN&apos;))</test>
    <result-string>xs:double("NaN")</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="math-tan-010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("NaN")</response-string>
    <description>Evaluate the function math:tan() with the argument xs:double(&apos;INF&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(xs:double(&apos;INF&apos;))</test>
    <result-string>xs:double("NaN")</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="math-tan-011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("NaN")</response-string>
    <description>Evaluate the function math:tan() with the argument xs:double(&apos;-INF&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:tan(xs:double(&apos;-INF&apos;))</test>
    <result-string>xs:double("NaN")</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
</test-set>