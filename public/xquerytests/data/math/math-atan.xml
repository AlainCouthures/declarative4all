<test-set covers="math-atan" name="math-atan" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the math:atan function introduced in XPath 3.0</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-atan" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <test-case name="math-atan-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description>Evaluate the function math:atan() with the argument ()</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(())</test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="math-atan-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0")</response-string>
    <description>Evaluate the function math:atan() with the argument 0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(0)</test>
    <result-string>xs:double("0")</result-string>
    <result>
      <assert-eq>0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0")</response-string>
    <description>Evaluate the function math:atan() with the argument -0.0e0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(-0.0e0)</test>
    <result-string>xs:double("0")</result-string>
    <result>
      <assert-eq>-0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("0.7853981633974483")</response-string>
    <description>Evaluate the function math:atan() with the argument 1.0e0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(1.0e0)</test>
    <result-string>xs:double("0.7853981633974483")</result-string>
    <result>
      <assert-eq>0.7853981633974483e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-0.7853981633974483")</response-string>
    <description>Evaluate the function math:atan() with the argument -1.0e0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(-1.0e0)</test>
    <result-string>xs:double("-0.7853981633974483")</result-string>
    <result>
      <assert-eq>-0.7853981633974483e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-0.7853981633974483")</response-string>
    <description>Evaluate the function math:atan() with the argument 2.0e0</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(-1.0e0)</test>
    <result-string>xs:double("-0.7853981633974483")</result-string>
    <result>
      <assert-eq>-0.7853981633974483e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("NaN")</response-string>
    <description>Evaluate the function math:atan() with the argument xs:double(&apos;NaN&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(xs:double(&apos;NaN&apos;))</test>
    <result-string>xs:double("NaN")</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="math-atan-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("1.5707963267948966")</response-string>
    <description>Evaluate the function math:atan() with the argument xs:double(&apos;INF&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(xs:double(&apos;INF&apos;))</test>
    <result-string>xs:double("1.5707963267948966")</result-string>
    <result>
      <assert-eq>1.5707963267948966e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-atan-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:double("-1.5707963267948966")</response-string>
    <description>Evaluate the function math:atan() with the argument xs:double(&apos;-INF&apos;)</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-12-10"/>
    <environment ref="math"/>
    <test>math:atan(xs:double(&apos;-INF&apos;))</test>
    <result-string>xs:double("-1.5707963267948966")</result-string>
    <result>
      <assert-eq>-1.5707963267948966e0</assert-eq>
    </result>
  </test-case>
</test-set>