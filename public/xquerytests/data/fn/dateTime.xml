<test-set name="fn-dateTime" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description/>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-dateTime" type="spec"/>
  <test-case name="fn-dateTime-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T12:00:00")</response-string>
    <description>Evaluation of "fn:dateTime" function as per example 1 of the F  O Specs. for this function. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31"), xs:time("12:00:00"))</test>
    <result-string>xs:dateTime("1999-12-31T12:00:00")</result-string>
    <result>
      <assert-string-value>1999-12-31T12:00:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T00:00:00")</response-string>
    <description>Evaluation of "fn:dateTime" function as per example 2 of the F  O Specs. for this function. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))</test>
    <result-string>xs:dateTime("1999-12-31T00:00:00")</result-string>
    <result>
      <assert-string-value>1999-12-31T00:00:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T23:00:00Z")</response-string>
    <description>Evaluation of "fn:dateTime" function, where only the first argument have a timezone. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00"))</test>
    <result-string>xs:dateTime("1999-12-31T23:00:00Z")</result-string>
    <result>
      <assert-string-value>1999-12-31T23:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T23:00:00Z")</response-string>
    <description>Evaluation of "fn:dateTime" function, where only the second argument have a timezone. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31"), xs:time("23:00:00Z"))</test>
    <result-string>xs:dateTime("1999-12-31T23:00:00Z")</result-string>
    <result>
      <assert-string-value>1999-12-31T23:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T23:00:00Z")</response-string>
    <description>Evaluation of "fn:dateTime" function, where both arguments have the same timezone (Z). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00Z"))</test>
    <result-string>xs:dateTime("1999-12-31T23:00:00Z")</result-string>
    <result>
      <assert-string-value>1999-12-31T23:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T23:00:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" function, where both arguments have the same timezone (+10:00). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:dateTime("1999-12-31T23:00:00+10:00")</result-string>
    <result>
      <assert-string-value>1999-12-31T23:00:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(eq). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) eq fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(ne). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ne fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(le). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(ge). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(lt). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) lt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(le). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(gt). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) gt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluation of "fn:dateTime" function together together with the  op:dateTime-equal operator(ge). 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-dateTime-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1999")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "year-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:year-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("1999")</result-string>
    <result>
      <assert-string-value>1999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("12")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "month-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:month-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("12")</result-string>
    <result>
      <assert-string-value>12</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("31")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "day-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:day-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("31")</result-string>
    <result>
      <assert-string-value>31</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("23")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "hours-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:hours-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("23")</result-string>
    <result>
      <assert-string-value>23</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "minutes-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:minutes-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:decimal("0")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "seconds-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:seconds-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:decimal("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dayTimeDuration("PT10H")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "timezone-from-dateTime". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:timezone-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:dayTimeDuration("PT10H")</result-string>
    <result>
      <assert-string-value>PT10H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-31T23:00:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" as an argument to the function "adjust-dateTime-to-timezone". 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:adjust-dateTime-to-timezone(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")),xs:dayTimeDuration("PT10H"))</test>
    <result-string>xs:dateTime("1999-12-31T23:00:00+10:00")</result-string>
    <result>
      <assert-string-value>1999-12-31T23:00:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dayTimeDuration("PT1H")</response-string>
    <description>Evaluation of "fn:dateTime" as part of a subtraction operation. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("22:00:00+10:00"))</test>
    <result-string>xs:dayTimeDuration("PT1H")</result-string>
    <result>
      <assert-string-value>PT1H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("2001-03-03T23:00:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" used together with the "op:add-yearMonthDuration-to-dateTime" operator 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test> fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:yearMonthDuration("P1Y2M")</test>
    <result-string>xs:string("2001-02-28T23:00:00+10:00")</result-string>
    <result>
      <assert-string-value>2001-02-28T23:00:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("2000-01-04T00:15:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" used together with the "op:add-dayTimeDuration-to-dateTime" operator 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test> fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:dayTimeDuration("P3DT1H15M")</test>
    <result-string>xs:dateTime("2000-01-04T00:15:00+10:00")</result-string>
    <result>
      <assert-string-value>2000-01-04T00:15:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1998-10-31T23:00:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" used together with the "subtract-yearMonthDuration-from-dateTime" operator 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test> fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:yearMonthDuration("P1Y2M")</test>
    <result-string>xs:dateTime("1998-10-31T23:00:00+10:00")</result-string>
    <result>
      <assert-string-value>1998-10-31T23:00:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:dateTime("1999-12-28T21:45:00+10:00")</response-string>
    <description>Evaluation of "fn:dateTime" used together with the "subtract-dayTimeDuration-from-dateTime" operator 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test> fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:dayTimeDuration("P3DT1H15M")</test>
    <result-string>xs:dateTime("1999-12-28T21:45:00+10:00")</result-string>
    <result>
      <assert-string-value>1999-12-28T21:45:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description>Evaluation of "fn:dateTime" where first argument is empty sequence 
 </description>
    <created by="Carmelo Montanez" on="2006-09-22"/>
    <test> fn:count(fn:dateTime((), xs:time("23:00:00+10:00")))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description>Evaluation of "fn:dateTime" where second argument is empty sequence 
 </description>
    <created by="Carmelo Montanez" on="2006-09-22"/>
    <test> fn:count(fn:dateTime(xs:date("1999-12-31+10:00"), ()))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-dateTime-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description>Evaluation of "fn:dateTime" where both arguments are equal to the empty sequence 
 </description>
    <created by="Carmelo Montanez" on="2006-09-22"/>
    <test> fn:count(fn:dateTime((),()))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="forg0008-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</response-string>
    <description>Evaluation of "fn:dateTime" function, where the two arguments have different timezones. 
 </description>
    <created by="Carmelo Montanez" on="2009-09-19"/>
    <test> fn:dateTime(xs:date("1999-12-31Z"), xs:time("12:00:00+10:00"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</result-string>
    <result>
      <error code="FORG0008"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Passing too few parameters(none) to fn:dateTime().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Passing too few parameters(only one) to fn:dateTime().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Passing too many parameters to fn:dateTime().</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"), xs:time("08:05:23"), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Passing the empty sequence as second argument is allowed(recent change in the specification).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>empty(dateTime(xs:date("2004-03-04"), ()))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Passing the empty sequence as first argument is allowed(recent change in the specification). </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>empty(dateTime((), xs:time("08:05:23")))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</response-string>
    <description>Passing different timezones to fn:dateTime() is an error. </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23+00:01"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</result-string>
    <result>
      <error code="FORG0008"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</response-string>
    <description>Passing different timezones to fn:dateTime() is an error. </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23Z"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</result-string>
    <result>
      <error code="FORG0008"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Invoke fn:dateTime() with timezones +00:00 and -00:00.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04-00:00"), xs:time("08:05:23+00:00")) eq xs:dateTime("2004-03-04T08:05:23Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with identical timezones.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23+11:00")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the first value having no timezone.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"), xs:time("08:05:23-05:00")) eq xs:dateTime("2004-03-04T08:05:23-05:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the second value having no timezone.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the time value being 24:00:00. </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:string(dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))) eq "1999-12-31T00:00:00"</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Invoke fn:dateTime() with timezones being canonical UTC(&apos;Z&apos;).</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the first value&apos;s timezone being canonical UTC(&apos;Z&apos;). </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the first value&apos;s timezone being an arbitrary value.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04+13:07"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the second value&apos;s timezone being an arbitrary value.</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"), xs:time("08:05:23+13:07")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() where none of its values has a timezone. </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeFunc-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Invoke fn:dateTime() with the first value&apos;s timezone being canonical UTC(&apos;Z&apos;). </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>dateTime(xs:date("2004-03-04"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-DateTimeFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Passing the empty sequence as both arguments is allowed(recent change in the specification). </description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>empty(dateTime((), ()))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("2")</response-string>
    <description> test evaluation of fn:dateTime to exactly one item Author: Tim Mills </description>
    <created by="Oliver Hallam" on="2008-04-14"/>
    <test>fn:index-of( ( &apos;A&apos;, fn:current-dateTime(), &apos;B&apos; ), fn:dateTime(fn:current-date(), fn:current-time()) )</test>
    <result-string>xs:integer("2")</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</response-string>
    <description> test evaluation of fn:dateTime to exactly one item with invalid timezones </description>
    <created by="Oliver Hallam" on="2008-04-14"/>
    <test>fn:index-of( ( &apos;A&apos;, fn:current-dateTime(), &apos;B&apos; ), fn:dateTime(adjust-date-to-timezone(fn:current-date(), xs:dayTimeDuration("PT1H")), adjust-time-to-timezone(fn:current-time(), xs:dayTimeDuration("PT2H"))))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FORG0008"))</result-string>
    <result>
      <error code="FORG0008"/>
    </result>
  </test-case>
</test-set>