<test-set name="fn-namespace-uri-from-QName" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the namespace-uri-from-qname() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-namespace-uri-from-qname" type="spec"/>
  <environment name="fsx">
    <source file="../prod/ForClause/fsx.xml" role=".">
      <description>Data about a filesystem represented in XML.</description>
      <created by="Mike Rorke" on="2003-03-25"/>
    </source>
  </environment>
  <test-case name="NamespaceURIFromQNameFunc001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Using QName element as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))))</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Using QName attribute as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))))</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Using element derived from QName as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/derivQN)[1]))))</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Using attribute derived from QName as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrDerivQN)[1]))))</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Check return type of function is xs:NCName </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(/root[1]/@attrDerivQN)))) instance of xs:anyURI ?</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Empty sequence literal as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName(())</test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Empty sequence literal as input </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName(((),()))</test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - invalid parameter type (string) </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName("")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - multiple input values </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(/root/elemQN)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - no input parameter </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - typo in function name </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-qname((/root/elemQN)[1])</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - typo in function name </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-Qname((/root/elemQN)[1])</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - typo in function name </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespaceURIfromQName((/root/elemQN)[1])</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. 
      				Error case - invalid parameter type (simple type) </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ10 XP20"/>
    <test>fn:namespace-uri-from-QName((//Folder)[1])</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc015a"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. 
      				Error case - invalid parameter type (simple type) </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <modified by="Michael Kay" change="see bug 16088" on="2012-05-17"/>
    <environment ref="fsx"/>
    <dependency type="spec" value="XQ30+ XP30+"/>
    <test>fn:namespace-uri-from-QName((//Folder)[1])</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0117"))</result-string>
    <result>
      <error code="XPTY0117"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - invalid parameter type (integer) </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName(xs:integer("100"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Error case - invalid parameter type (time) </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <test>fn:namespace-uri-from-QName(xs:time("12:00:00Z"))</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Explicit call to data to extract simple typed QName value </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(data((/root/elemQN))[1]))))</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Conditional expression as parameter 
        where both branches result in QName value </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName( if( true() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN[1])))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN))[1])) )</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Conditional expression as parameter 
        where both branches result in QName value </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <environment ref="qname"/>
    <test>fn:namespace-uri-from-QName( if( false() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))) )</test>
    <result-string>xs:string("http://www.example.com/urn")</result-string>
    <result>
      <assert-string-value>http://www.example.com/urn</assert-string-value>
    </result>
  </test-case>
  <test-case name="NamespaceURIFromQNameFunc021"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test function fn:namespace-uri-from-QName. Conditional expression as parameter where one 
        branch does NOT result in a QName value </description>
    <created by="Mike Rorke" on="2005-09-28"/>
    <modified by="O&apos;Neil Delpratt" change="Added schemeImport dependency. See bug issue #21238" on="2013-06-05"/>
    <modified by="Michael Kay" change="Recombined the 1.0 and 3.0 tests as the error code is the same
        in both cases; see bug 22416. They were previously split as a result of bug 21723." on="2013-06-21"/>
    <environment ref="qname"/>
    <dependency type="spec" value="XP20 XQ10"/>
    <dependency type="feature" value="schemaImport"/>
    <test>fn:namespace-uri-from-QName( if( true() ) then (/root/elemStr)[1] else (/root/elemQN)[1] )</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIFromQNameFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `namespace-uri-from-QName()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-from-QName()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIFromQNameFunc-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `namespace-uri-from-QName(1, 2)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-from-QName(1, 2)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIFromQNameFunc-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `empty(namespace-uri-from-QName( () ))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(namespace-uri-from-QName( () ))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIFromQNameFunc-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `namespace-uri-from-QName( QName("example.com/", "pre:lname")) eq xs:anyURI("example.com/")`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-from-QName( QName("example.com/", "pre:lname")) eq xs:anyURI("example.com/")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIFromQNameFunc-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> A test whose essence is: `namespace-uri-from-QName( QName("example.com/", "pre:lname")) instance of xs:anyURI`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-from-QName( QName("example.com/", "pre:lname")) instance of xs:anyURI</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-NamespaceURIFromQNameFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Test that xmlns declarations in direct element constructors are honored in embedded expressions. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare namespace ns = "http://example.com/ANamespace"; 
        string(<name xmlns:ns="http://example.com/BNamespace">{namespace-uri-from-QName("ns:foo" cast as xs:QName)}</name>)
      ]]>
    </test>
    <result-string>xs:string("http://example.com/BNamespace")</result-string>
    <result>
      <assert-string-value>http://example.com/BNamespace</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-NamespaceURIFromQNameFunc-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that the default element namespace is picked up with computed element constructors. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        <e xmlns="http://example.com/"> {namespace-uri-from-QName(node-name(element anElement{"text"}))} </e>/string()
      ]]>
    </test>
    <result-string>xs:string("http://example.com/")</result-string>
    <result>
      <assert-string-value>http://example.com/</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-NamespaceURIFromQNameFunc-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xmlns declarations overrides. </description>
    <created by="Frans Englich" on="2008-01-08"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare default element namespace "http://example.com/"; 
        <e xmlns="">{namespace-uri-from-QName(xs:QName("l"))}</e>/string()
      ]]>
    </test>
    <result-string>xs:string("""")</result-string>
    <result>
      <assert-eq>""</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NamespaceURIFromQNameFunc-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> Check that xmlns declarations overrides(#2). </description>
    <created by="Frans Englich" on="2008-01-08"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare default element namespace "http://example.com/"; 
        declare namespace p = "http://example.com/2"; 
        <e xmlns="" xmlns:p="http://example.com/3">[{namespace-uri-from-QName(xs:QName("n1"))}|{namespace-uri-from-QName(xs:QName("p:n2"))}]</e>/text()
      ]]>
    </test>
    <result-string>xs:string("[|http://example.com/3]")</result-string>
    <result>
      <assert-string-value>[|http://example.com/3]</assert-string-value>
    </result>
  </test-case>
</test-set>