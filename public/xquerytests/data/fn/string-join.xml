<test-set name="fn-string-join" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the string-join() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-string-join" type="spec"/>
  <test-case name="fn-string-join2args-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("This is a characte")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string(lower bound) $arg2 = xs:string(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</test>
    <result-string>xs:string("This is a characte")</result-string>
    <result>
      <assert-string-value>This is a characte</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join2args-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("This is a characte")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string(mid range) $arg2 = xs:string(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</test>
    <result-string>xs:string("This is a characte")</result-string>
    <result>
      <assert-string-value>This is a characte</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join2args-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("This is a characte")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string(upper bound) $arg2 = xs:string(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</test>
    <result-string>xs:string("This is a characte")</result-string>
    <result>
      <assert-string-value>This is a characte</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join2args-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("This is a characte")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string(lower bound) $arg2 = xs:string(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</test>
    <result-string>xs:string("This is a characte")</result-string>
    <result>
      <assert-string-value>This is a characte</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join2args-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("This is a characte")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string(lower bound) $arg2 = xs:string(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</test>
    <result-string>xs:string("This is a characte")</result-string>
    <result>
      <assert-string-value>This is a characte</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Now is the time ...")</response-string>
    <description> Evaluates The "string-join" function as per example 1 for this frunction in FO sepecs. </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join((&apos;Now&apos;, &apos;is&apos;, &apos;the&apos;, &apos;time&apos;, &apos;...&apos;), &apos; &apos;)</test>
    <result-string>xs:string("Now is the time ...")</result-string>
    <result>
      <assert-string-value>Now is the time ...</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Blow, blow, thou winter wind!")</response-string>
    <description> Evaluates The "string-join" function as per example 2 for this function in the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join((&apos;Blow, &apos;, &apos;blow, &apos;, &apos;thou &apos;, &apos;winter &apos;, &apos;wind!&apos;), &apos;&apos;)</test>
    <result-string>xs:string("Blow, blow, thou winter wind!")</result-string>
    <result>
      <assert-string-value>Blow, blow, thou winter wind!</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluates The "string-join" function as per example 3 for this function in the FO specs. Use of fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join((), &apos;separator&apos;))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = () $arg2 = "" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join((),""))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "" $arg2 = "" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join("",""))</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "" $arg2 = "A Character String". </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join("","A Character String"))</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("0")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = () $arg2 = "A Character String" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join((),"A Character String"))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("AAAAABBBBBCCCCC")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "AAAAABBBBBCCCCC" $arg2 = "BBBBB" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("AAAAABBBBBCCCCC"),"BBBBB")</test>
    <result-string>xs:string("AAAAABBBBBCCCCC")</result-string>
    <result>
      <assert-string-value>AAAAABBBBBCCCCC</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("AAAAABBBBB")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = ("AAAAABBBBB") $arg2 = " " </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("AAAAABBBBB")," ")</test>
    <result-string>xs:string("AAAAABBBBB")</result-string>
    <result>
      <assert-string-value>AAAAABBBBB</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:integer("1")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = (" ") $arg2 = " AAAAABBBBB". Use of count to avoid empty file </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:count(fn:string-join((" "),"AAAAABBBBB"))</test>
    <result-string>xs:integer("1")</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> Evaluates The "string-join" function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:not(fn:string-join((),"A"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-string-join-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Evaluates The "string-join" function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:not(fn:string-join(("A"),"B"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-string-join-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("A")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = xs:string("A") $arg2 = "A" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join((xs:string("A")),"A")</test>
    <result-string>xs:string("A")</result-string>
    <result>
      <assert-string-value>A</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("A")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "A" $arg2 = xs:string("A") </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("A"),xs:string("A"))</test>
    <result-string>xs:string("A")</result-string>
    <result>
      <assert-string-value>A</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("A")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "A" $arg2 = "a" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("A"),"a")</test>
    <result-string>xs:string("A")</result-string>
    <result>
      <assert-string-value>A</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "a" $arg2 = "A" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("a"),"A")</test>
    <result-string>xs:string("a")</result-string>
    <result>
      <assert-string-value>a</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("string-join")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "string-join" $arg2 = "string-join" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join("string-join","string-join")</test>
    <result-string>xs:string("string-join")</result-string>
    <result>
      <assert-string-value>string-join</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("string-joinstring-join")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "string-joinstring-join" $arg2 = "string-join" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join(("string-joinstring-join"),"string-join")</test>
    <result-string>xs:string("string-joinstring-join")</result-string>
    <result>
      <assert-string-value>string-joinstring-join</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("****")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "****" $arg2 = "***" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join("****","***")</test>
    <result-string>xs:string("****")</result-string>
    <result>
      <assert-string-value>****</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("12345")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "12345" $arg2 = "1234" </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join("12345","1234")</test>
    <result-string>xs:string("12345")</result-string>
    <result>
      <assert-string-value>12345</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-string-join-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("string-join")</response-string>
    <description> Evaluates The "string-join" function with the arguments set as follows: $arg1 = "string-join $arg2 = "nioj-gnirts ("string-join" backwards) </description>
    <created by="Carmelo Montanez" on="2005-06-24"/>
    <test>fn:string-join("string-join","nioj-gnirts")</test>
    <result-string>xs:string("string-join")</result-string>
    <result>
      <assert-string-value>string-join</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="fn-string-join-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123")</response-string>
    <description> Default second argument is zero-length string in 3.0 </description>
    <created by="Michael Kay" on="2012-07-09"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:string-join(("1", "2", "3"))</test>
    <result-string>xs:string("123")</result-string>
    <result>
      <assert-string-value>123</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="fn-string-join-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description> Default second argument is zero-length string in 3.0 </description>
    <created by="Michael Kay" on="2012-07-09"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      <![CDATA[
         let $e := <e><a>1</a><b>2</b><c>3</c></e>
         return fn:string-join($e/*)
      ]]>
    </test>
    <result-string>xs:string("123")</result-string>
    <result>
      <assert-string-value>123</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="fn-string-join-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description> Default second argument is zero-length string in 3.0 </description>
    <created by="Michael Kay" on="2012-07-09"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      <![CDATA[
         let $e := <e><a>1</a><b></b><c>3</c></e>
         return fn:string-join($e/*)
      ]]>
    </test>
    <result-string>xs:string("13")</result-string>
    <result>
      <assert-string-value>13</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="fn-string-join-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Default second argument is zero-length string in 3.0 </description>
    <created by="Michael Kay" on="2012-07-09"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      <![CDATA[
         let $e := <e><a>1</a><b></b><c>3</c></e>
         return fn:string-join($e/d)
      ]]>
    </test>
    <result-string>xs:string("")</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="fn-string-join-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123456789")</response-string>
    <description> Default second argument is zero-length string in 3.0 </description>
    <created by="Michael Kay" on="2012-07-09"/>
    <dependency type="spec" value="XQ30+"/>
    <test>
      <![CDATA[
         fn:string-join((1 to 9)!string())
      ]]>
    </test>
    <result-string>xs:string("123456789")</result-string>
    <result>
      <assert-string-value>123456789</assert-string-value>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a string")</response-string>
    <description> A test whose essence is: `string-join("a string")`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10 XP20"/>
    <test>string-join("a string")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case covers="fn-string-join" name="K-StringJoinFunc-1a"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a string")</response-string>
    <description> A test whose essence is: `string-join("a string")`. Allowed in 3.0</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ30+ XP30+"/>
    <test>string-join("a string")</test>
    <result-string>xs:string("a string")</result-string>
    <result>
      <assert-string-value>a string</assert-string-value>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> A test whose essence is: `string-join("a string", "a string", "wrong param")`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join("a string", "a string", "wrong param")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `string-join((&apos;Now&apos;, &apos;is&apos;, &apos;the&apos;, &apos;time&apos;, &apos;...&apos;), &apos; &apos;) eq "Now is the time ..."`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join((&apos;Now&apos;, &apos;is&apos;, &apos;the&apos;, &apos;time&apos;, &apos;...&apos;), &apos; &apos;) eq "Now is the time ..."</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `string-join(("abc", "def"), "") eq "abcdef"`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join(("abc", "def"), "") eq "abcdef"</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `string-join((&apos;Blow, &apos;, &apos;blow, &apos;, &apos;thou &apos;, &apos;winter &apos;, &apos;wind!&apos;), &apos;&apos;) eq "Blow, blow, thou winter wind!"`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join((&apos;Blow, &apos;, &apos;blow, &apos;, &apos;thou &apos;, &apos;winter &apos;, &apos;wind!&apos;), &apos;&apos;) eq "Blow, blow, thou winter wind!"</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `string-join((), &apos;separator&apos;) eq ""`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join((), &apos;separator&apos;) eq ""</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringJoinFunc-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a string")</response-string>
    <description> A test whose essence is: `string-join("a string", ())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-join("a string", ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="cbcl-fn-string-join-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> Test boolean fn:string-join on various cases </description>
    <created by="Nick Jones" on="2008-06-12"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:repeat($count as xs:integer, $arg as xs:string) as xs:string* { if ($count le 0) then "" else for $x in 1 to $count return $arg };
        string-join( for $x in 0 to 4 return local:repeat($x, &apos;a&apos;) , &apos; &apos;) and string-join( for $x in 0 to 4 return local:repeat($x, &apos;a&apos;) , &apos;&apos;)</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>