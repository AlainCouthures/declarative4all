<test-set covers="fn-format-time" name="fn-format-time" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the format-time() function transferred from XSLT 2.0 to XPath 3.0</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-format-time" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <test-case name="format-time-002a"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H01]:[m01]")</test>
    <result-string>xs:string("09:15")</result-string>
    <result>
      <assert-string-value>09:15</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002b"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]")</test>
    <result-string>xs:string("9:15")</result-string>
    <result>
      <assert-string-value>9:15</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002c"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H01]:[m01]:[s01]")</test>
    <result-string>xs:string("09:15:06")</result-string>
    <result>
      <assert-string-value>09:15:06</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002d"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s]")</test>
    <result-string>xs:string("9:15:06")</result-string>
    <result>
      <assert-string-value>9:15:06</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002e"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s1]")</test>
    <result-string>xs:string("9:15:6")</result-string>
    <result>
      <assert-string-value>9:15:6</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002f"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s01]:[f001]")</test>
    <result-string>xs:string("9:15:06:456")</result-string>
    <result>
      <assert-string-value>9:15:06:456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002g"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s].[f,1-1]")</test>
    <result-string>xs:string("9:15:06.5")</result-string>
    <result>
      <assert-string-value>9:15:06.5</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002h"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s].[f1,1-1]")</test>
    <result-string>xs:string("9:15:06.5")</result-string>
    <result>
      <assert-string-value>9:15:06.5</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002i"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s].[f01]")</test>
    <result-string>xs:string("9:15:06.46")</result-string>
    <result>
      <assert-string-value>9:15:06.46</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-002j"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>Test format-time: basic numeric formats</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t,"[H]:[m]:[s].[f001]")</test>
    <result-string>xs:string("9:15:06.456")</result-string>
    <result>
      <assert-string-value>9:15:06.456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008")))</response-string>
    <description>Test format-time: 12-hour clock</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>
        for $i in 1 to 24 return
        format-time($t + xs:dayTimeDuration(&apos;PT1H&apos;)*$i, &apos;[h].[m]&apos;)</test>
    <result-string>xs:string("
         10.15 11.15 12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15 10.15 11.15 
         12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15
         ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
         10.15 11.15 12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15 10.15 11.15 
         12.15 1.15 2.15 3.15 4.15 5.15 6.15 7.15 8.15 9.15
         </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013n"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[m,3]&apos;)</test>
    <result-string>xs:string("015")</result-string>
    <result>
      <assert-string-value>015</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013p"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,4-4]&apos;)</test>
    <result-string>xs:string("4560")</result-string>
    <result>
      <assert-string-value>4560</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013q"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,1-4]&apos;)</test>
    <result-string>xs:string("456")</result-string>
    <result>
      <assert-string-value>456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013r"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,2-5]&apos;)</test>
    <result-string>xs:string("456")</result-string>
    <result>
      <assert-string-value>456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013s"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,2-2]&apos;)</test>
    <result-string>xs:string("46")</result-string>
    <result>
      <assert-string-value>46</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013t"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,1-*]&apos;)</test>
    <result-string>xs:string("456")</result-string>
    <result>
      <assert-string-value>456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013u"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,*-2]&apos;)</test>
    <result-string>xs:string("46")</result-string>
    <result>
      <assert-string-value>46</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-013v"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0008"))</response-string>
    <description>test format-time(): effect of width specifiers </description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456&apos;)"/>
    </environment>
    <test>format-time($t, &apos;[f,3]&apos;)</test>
    <result-string>xs:string("456")</result-string>
    <result>
      <assert-string-value>456</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>test format-time(): timezones in +nn:nn notation</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt, Saxonica" change="Bug fix 17285" on="2012-08-08"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456Z&apos;)"/>
    </environment>
    <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
               $t, $z*xs:dayTimeDuration(&apos;PT30M&apos;)), &apos;[h01][m01][Z]&apos;), &apos;; &apos;)</test>
    <result-string>xs:string("
             0715-14:00; 0745-13:30; 0815-13:00; 0845-12:30; 0915-12:00; 0945-11:30; 1015-11:00; 1045-10:30; 1115-10:00; 
             1145-09:30; 1215-09:00; 1245-08:30; 0115-08:00; 0145-07:30; 0215-07:00; 0245-06:30; 0315-06:00; 0345-05:30; 
             0415-05:00; 0445-04:30; 0515-04:00; 0545-03:30; 0615-03:00; 0645-02:30; 0715-02:00; 0745-01:30; 0815-01:00; 
             0845-00:30; 0915+00:00; 0945+00:30; 1015+01:00; 1045+01:30; 1115+02:00; 1145+02:30; 1215+03:00; 1245+03:30;
             0115+04:00; 0145+04:30; 0215+05:00; 0245+05:30; 0315+06:00; 0345+06:30; 0415+07:00; 0445+07:30; 0515+08:00; 
             0545+08:30; 0615+09:00; 0645+09:30; 0715+10:00; 0745+10:30; 0815+11:00; 0845+11:30; 0915+12:00; 0945+12:30; 
             1015+13:00; 1045+13:30; 1115+14:00
         ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
             0715-14:00; 0745-13:30; 0815-13:00; 0845-12:30; 0915-12:00; 0945-11:30; 1015-11:00; 1045-10:30; 1115-10:00; 
             1145-09:30; 1215-09:00; 1245-08:30; 0115-08:00; 0145-07:30; 0215-07:00; 0245-06:30; 0315-06:00; 0345-05:30; 
             0415-05:00; 0445-04:30; 0515-04:00; 0545-03:30; 0615-03:00; 0645-02:30; 0715-02:00; 0745-01:30; 0815-01:00; 
             0845-00:30; 0915+00:00; 0945+00:30; 1015+01:00; 1045+01:30; 1115+02:00; 1145+02:30; 1215+03:00; 1245+03:30;
             0115+04:00; 0145+04:30; 0215+05:00; 0245+05:30; 0315+06:00; 0345+06:30; 0415+07:00; 0445+07:30; 0515+08:00; 
             0545+08:30; 0615+09:00; 0645+09:30; 0715+10:00; 0745+10:30; 0815+11:00; 0845+11:30; 0915+12:00; 0945+12:30; 
             1015+13:00; 1045+13:30; 1115+14:00
         </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>test format-time(): timezones in GMT+x notation</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt, Saxonica" change="Bug fix 17285" on="2012-08-08"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456Z&apos;)"/>
    </environment>
    <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
                        $t, $z*xs:dayTimeDuration(&apos;PT30M&apos;)), &apos;[h01][m01][z]&apos;), &apos;; &apos;)</test>
    <result-string>xs:string("
            0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
            0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>test format-time(): timezones in GMT+x notation</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt, Saxonica" change="Bug fix 17285" on="2012-08-08"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456Z&apos;)"/>
    </environment>
    <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone(
                        $t, $z*xs:dayTimeDuration(&apos;PT30M&apos;)), &apos;[h01][m01][z,6-6]&apos;), &apos;; &apos;)</test>
    <result-string>xs:string("
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
        ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
        </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>test format-time(): timezones in GMT+x notation</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt, Saxonica" change="Bug fix 17285" on="2012-08-08"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456Z&apos;)"/>
    </environment>
    <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone($t, $z*xs:dayTimeDuration(&apos;PT30M&apos;)), &apos;[h01][m01][z,5-6]&apos;), &apos;; &apos;)</test>
    <result-string>xs:string("
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
             0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>test format-time(): timezones in GMT+x notation</description>
    <created by="Michael Kay, Saxonica" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt, Saxonica" change="Bug fix 17285" on="2012-08-08"/>
    <environment>
      <param as="xs:time" name="t" select="xs:time(&apos;09:15:06.456Z&apos;)"/>
    </environment>
    <test>string-join(
               for $z in -28 to +28
               return format-time(adjust-time-to-timezone($t, $z*xs:dayTimeDuration(&apos;PT30M&apos;)), &apos;[h01][m01][z,2-6]&apos;), &apos;; &apos;)</test>
    <result-string>xs:string("
              0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         ")</result-string>
    <result>
      <assert-string-value normalize-space="true">
              0715GMT-14:00; 0745GMT-13:30; 0815GMT-13:00; 0845GMT-12:30; 0915GMT-12:00; 0945GMT-11:30; 1015GMT-11:00; 1045GMT-10:30;
            1115GMT-10:00; 1145GMT-09:30; 1215GMT-09:00; 1245GMT-08:30; 0115GMT-08:00; 0145GMT-07:30; 0215GMT-07:00; 0245GMT-06:30;
            0315GMT-06:00; 0345GMT-05:30; 0415GMT-05:00; 0445GMT-04:30; 0515GMT-04:00; 0545GMT-03:30; 0615GMT-03:00; 0645GMT-02:30;
            0715GMT-02:00; 0745GMT-01:30; 0815GMT-01:00; 0845GMT-00:30; 0915GMT+00:00; 0945GMT+00:30; 1015GMT+01:00; 1045GMT+01:30; 1115GMT+02:00;
            1145GMT+02:30; 1215GMT+03:00; 1245GMT+03:30; 0115GMT+04:00; 0145GMT+04:30; 0215GMT+05:00; 0245GMT+05:30; 0315GMT+06:00;
            0345GMT+06:30; 0415GMT+07:00; 0445GMT+07:30; 0515GMT+08:00; 0545GMT+08:30; 0615GMT+09:00; 0645GMT+09:30; 0715GMT+10:00;
            0745GMT+10:30; 0815GMT+11:00; 0845GMT+11:30; 0915GMT+12:00; 0945GMT+12:30; 1015GMT+13:00; 1045GMT+13:30;
            1115GMT+14:00
         </assert-string-value>
    </result>
  </test-case>
  <test-case name="format-time-809err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FOFD1350"))</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt" change="Bug fix related to bug #14875: Corrected error code" on="2012-05-22"/>
    <test>format-time(current-time(), &apos;[Y]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-810err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FOFD1350"))</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[M]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-811err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[d]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-812err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[d]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-813err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FOFD1350"))</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[F]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-814err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[W]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-815err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[w]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-816err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1350 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <test>format-time(current-time(), &apos;[E]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1350"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1350"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1350"/>
        <error code="FOFD1350"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-817err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error XTDE1340 component in picture string not available in value</description>
    <created by="Anders Berglund" on="2011-07-01"/>
    <modified by="O&apos;Neil Delpratt" change="Bug fix related to bug #14875: Change description and corrected error code" on="2012-05-22"/>
    <test>format-time(current-time(), &apos;[bla]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1340"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1340"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1340"/>
        <error code="FOFD1340"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="format-time-inpt-er1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>wrong arg input to format-time()</description>
    <created by="Zhen Hua Liu" on="2012-01-18"/>
    <test>format-time(&apos;abc&apos;, &apos;[bla]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="format-time-inpt-er2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>wrong number of args to format-time()</description>
    <created by="Zhen Hua Liu" on="2012-01-18"/>
    <test>format-time(current-time(), &apos;[bla]&apos;, &apos;en&apos;, (), (), 6)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="format-time-inpt-er3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>wrong number of args to format-time()</description>
    <created by="Zhen Hua Liu" on="2012-01-18"/>
    <test>format-time(current-time(), &apos;[bla]&apos;, &apos;en&apos;, (), (), 6)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="format-time-1340err"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("")</response-string>
    <description>Error FOFD1340 syntax of picture is incorrect</description>
    <created by="Zhen Hua Liu" on="2012-01-18"/>
    <test>format-time(current-time(), &apos;[y]&apos;, &apos;en&apos;, (), ())</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XTDE1340"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FOFD1340"))</result-string>
    <result>
      <any-of>
        <error code="XTDE1340"/>
        <error code="FOFD1340"/>
      </any-of>
    </result>
  </test-case>
</test-set>