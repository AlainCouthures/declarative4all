<test-set covers="fn-has-children" name="fn-has-children" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the has-children() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-has-children" type="spec"/>
  <environment name="has-children">
    <source file="has-children/has-children.xml" role=".">
      <description>Data for has-children tests</description>
      <created by="Tim Mills" on="2011-11-28"/>
    </source>
  </environment>
  <test-case name="fn-has-children-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Attempts to reference the "has-children" function with arity zero.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="Tim Mills" change="Context-dependent functions can now be referenced without error." on="2012-05-01"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:exists( fn:has-children#0 )</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Attempts to reference the "has-children" function with arity one.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:exists( fn:has-children#1 )</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Attempts to evaluate the "has-children" function with two arguments.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( fn:contains#2, fn:contains#2 )</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Attempts to reference the "has-children" function with arity two.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children#2</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the zero-arity "has-children" function with absent context item.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <any-of>
        <error code="XPDY0002"/>
        <!-- an implementation may know statically that the context item will be absent -->
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-has-children-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the (arity one) "has-children" function with absent context item.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children(.)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <any-of>
        <error code="XPDY0002"/>
        <!-- an implementation may know statically that the context item will be absent -->
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-has-children-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description>Evaluates the zero-arity "has-children" function with context item which is not a node.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>(1)[fn:has-children()]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <any-of>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-has-children-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description>Evaluates the zero-arity "has-children" function with context item which is not a node.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>(fn:concat#2)[fn:has-children()]</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <any-of>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-has-children-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children(1)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="O&apos;Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children(fn:concat#2)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( (.,.) )</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="staticTyping"/>
    <test>( if ( fn:current-dateTime() eq
                   fn:dateTime( fn:current-date(), fn:current-time() ))
              then .
              else 1 ) ! fn:has-children()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="staticTyping"/>
    <test>fn:has-children( if ( fn:current-dateTime() eq
                                  fn:dateTime( fn:current-date(),
                                               fn:current-time() ))
                             then .
                             else 1 )</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("true"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")))</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>(., 1) ! fn:has-children()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("true"),fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004")))</response-string>
    <description>Tests the type checking of the argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>(., 1) ! fn:has-children(.)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-has-children-016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Tests the return type of the "has-children" function.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children()</test>
    <result-string/>
    <result>
      <assert-type>xs:boolean</assert-type>
    </result>
  </test-case>
  <test-case name="fn-has-children-017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Tests the return type of the "has-children" function.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children(.)</test>
    <result-string/>
    <result>
      <assert-type>xs:boolean</assert-type>
    </result>
  </test-case>
  <test-case name="fn-has-children-018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type attribute() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/@attribute/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type attribute() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/@attribute )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type namespace() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>/root/namespace::fots/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-021"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type attribute() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+"/>
    <dependency type="feature" value="namespace-axis"/>
    <test>fn:has-children( /root/namespace::fots )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-022"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type comment() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/comment()/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-023"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type comment() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/comment() )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-024"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type processing-instruction() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/processing-instruction()/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-025"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type processing-instruction() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/processing-instruction() )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-026"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type text() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/text()/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-027"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type text() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/text() )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-028"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/empty/fn:has-children()</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-029"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/empty )</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-has-children-030"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/fn:has-children()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-031"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root )</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-032"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/non-empty/fn:has-children()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-033"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type element() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( /root/non-empty )</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-034"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type document-node() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/fn:has-children()</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-035"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type document-node() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>fn:has-children( / )</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-has-children-036"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("true"))</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: context item of type node() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/node()/fn:has-children()</test>
    <result-string>(xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("true"))</result-string>
    <result>
      <assert-string-value>false false false false true</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-has-children-037"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("true"))</response-string>
    <description>Evaluates the "has-children" function with the argument set as follows: $node of type node() </description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="has-children"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>/root/node()/fn:has-children(.)</test>
    <result-string>(xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("false"),xs:boolean("true"))</result-string>
    <result>
      <assert-string-value>false false false false true</assert-string-value>
    </result>
  </test-case>
</test-set>