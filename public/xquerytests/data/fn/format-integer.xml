<test-set covers="fn-format-integer" name="fn-format-integer" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the fn:format-integer function introduced in XPath 3.0</description>
  <link document="http://www.w3.org/TR/xpath-functions-11/" idref="func-format-integer" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <test-case name="format-integer-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123")</response-string>
    <description>format-integer with picture="1"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(123, &apos;1&apos;)</test>
    <result-string>xs:string("123")</result-string>
    <result>
      <assert-eq>&apos;123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123")</response-string>
    <description>format-integer with picture="001"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(123, &apos;001&apos;)</test>
    <result-string>xs:string("123")</result-string>
    <result>
      <assert-eq>&apos;123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("00123")</response-string>
    <description>format-integer with picture="00001"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(123, &apos;00001&apos;)</test>
    <result-string>xs:string("00123")</result-string>
    <result>
      <assert-eq>&apos;00123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("-123")</response-string>
    <description>format-integer negative integer with picture="9"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(-123, &apos;9&apos;)</test>
    <result-string>xs:string("-123")</result-string>
    <result>
      <assert-eq>&apos;-123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("-123")</response-string>
    <description>format-integer negative integer with picture="999"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(-123, &apos;999&apos;)</test>
    <result-string>xs:string("-123")</result-string>
    <result>
      <assert-eq>&apos;-123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("-00123")</response-string>
    <description>format-integer negative integer with picture="99999"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(-123, &apos;99999&apos;)</test>
    <result-string>xs:string("-00123")</result-string>
    <result>
      <assert-eq>&apos;-00123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("0")</response-string>
    <description>format-integer zero with picture="0"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(0, &apos;0&apos;)</test>
    <result-string>xs:string("0")</result-string>
    <result>
      <assert-eq>&apos;0&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("000")</response-string>
    <description>format-integer zero with picture="000"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(0, &apos;000&apos;)</test>
    <result-string>xs:string("000")</result-string>
    <result>
      <assert-eq>&apos;000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("00000")</response-string>
    <description>format-integer zero with picture="00000"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(0, &apos;00000&apos;)</test>
    <result-string>xs:string("00000")</result-string>
    <result>
      <assert-eq>&apos;00000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("a1a2a3a4")</response-string>
    <description>format-integer with picture="a"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>string-join(for $i in 1 to 4 return format-integer($i, &apos;a&apos;))</test>
    <result-string>xs:string("&apos;abcd&apos;")</result-string>
    <result>
      <assert-eq>&apos;abcd&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("A1A2A3A4")</response-string>
    <description>format-integer with picture="A"</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>string-join(for $i in 1 to 4 return format-integer($i, &apos;A&apos;))</test>
    <result-string>xs:string("&apos;ABCD&apos;")</result-string>
    <result>
      <assert-eq>&apos;ABCD&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("i1|i2|i3|i4|i5|i6|i7|i8|i9|i10|i11|i12|i13|i14|i15|i16|i17|i18|i19|i20")</response-string>
    <description>format-integer with picture="i" (lower-case roman numerals)</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>string-join(for $i in 1 to 20 return format-integer($i, &apos;i&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;i|ii|iii|iv|v|vi|vii|viii|ix|x|xi|xii|xiii|xiv|xv|xvi|xvii|xviii|xix|xx&apos;")</result-string>
    <result>
      <assert-eq>&apos;i|ii|iii|iv|v|vi|vii|viii|ix|x|xi|xii|xiii|xiv|xv|xvi|xvii|xviii|xix|xx&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("I1|I2|I3|I4|I5|I6|I7|I8|I9|I10|I11|I12|I13|I14|I15|I16|I17|I18|I19|I20")</response-string>
    <description>format-integer with picture="I" (upper-case roman numerals)</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>string-join(for $i in 1 to 20 return format-integer($i, &apos;I&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;I|II|III|IV|V|VI|VII|VIII|IX|X|XI|XII|XIII|XIV|XV|XVI|XVII|XVIII|XIX|XX&apos;")</result-string>
    <result>
      <assert-eq>&apos;I|II|III|IV|V|VI|VII|VIII|IX|X|XI|XII|XIII|XIV|XV|XVI|XVII|XVIII|XIX|XX&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20")</response-string>
    <description>format-integer using Arabic digits</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <dependency type="format-integer-sequence" value="&#1633;"/>
    <test>string-join(for $i in 1 to 20 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;|||||||||||||||||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;|||||||||||||||||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20")</response-string>
    <description>format-integer using Arabic digits</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <dependency type="format-integer-sequence" value="&#1633;"/>
    <test>string-join(for $i in 1 to 20 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;|||||||||||||||||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;|||||||||||||||||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Ww1|Ww2|Ww3|Ww4|Ww5|Ww6|Ww7|Ww8|Ww9|Ww10")</response-string>
    <description>format-integer with title case words</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <dependency type="default-language" value="en"/>
    <test>string-join(for $i in 1 to 10 return format-integer($i, &apos;Ww&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;One|Two|Three|Four|Five|Six|Seven|Eight|Nine|Ten&apos;")</result-string>
    <result>
      <assert-eq>&apos;One|Two|Three|Four|Five|Six|Seven|Eight|Nine|Ten&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("W1|W2|W3|W4|W5|W6|W7|W8|W9|W10")</response-string>
    <description>format-integer with upper-case words</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <dependency type="default-language" value="en"/>
    <test>string-join(for $i in 1 to 10 return format-integer($i, &apos;W&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;ONE|TWO|THREE|FOUR|FIVE|SIX|SEVEN|EIGHT|NINE|TEN&apos;")</result-string>
    <result>
      <assert-eq>&apos;ONE|TWO|THREE|FOUR|FIVE|SIX|SEVEN|EIGHT|NINE|TEN&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("w1|w2|w3|w4|w5|w6|w7|w8|w9|w10")</response-string>
    <description>format-integer with lower-case words</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>string-join(for $i in 1 to 10 return format-integer($i, &apos;w&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;one|two|three|four|five|six|seven|eight|nine|ten&apos;")</result-string>
    <result>
      <assert-eq>&apos;one|two|three|four|five|six|seven|eight|nine|ten&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("w0")</response-string>
    <description>format-integer - Error case</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <test>format-integer(a, &apos;w&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPDY0002"))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="format-integer-020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1")</response-string>
    <description>format-integer - Error case with empty picture</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1, &apos;&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-021"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1,500,000")</response-string>
    <description>format-integer - picture grouping</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;0,000&apos;)</test>
    <result-string>xs:string("1,500,000")</result-string>
    <result>
      <assert-eq>&apos;1,500,000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-022"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1500,000")</response-string>
    <description>format-integer - picture grouping, with hash symbols at the end</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;#,###,000&apos;)</test>
    <result-string>xs:string("&apos;1,500,000&apos;")</result-string>
    <result>
      <assert-eq>&apos;1,500,000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-023"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1500000")</response-string>
    <description>format-integer - picture grouping</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;0,000,&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-024"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1,500,000")</response-string>
    <description>format-integer - picture grouping error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;11#0,000&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-025"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1500000")</response-string>
    <description>format-integer - picture grouping error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <modified by="Michael Kay, Saxonica" change="no longer an error: see bug 19004" on="2013-01-22"/>
    <test>format-integer(1500000, &apos;#&apos;)</test>
    <result-string>xs:string("1500000")</result-string>
    <result>
      <assert-eq>&apos;1500000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-026"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1500000a")</response-string>
    <description>format-integer - picture grouping error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <modified by="Michael Kay, Saxonica" change="no longer an error: see bug 19004" on="2013-01-22"/>
    <test>format-integer(1500000, &apos;#a&apos;)</test>
    <result-string>xs:string("&apos;1500000&apos;")</result-string>
    <result>
      <assert-eq>&apos;1500000&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-027"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1,500,000")</response-string>
    <description>format-integer - picture grouping error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;,123&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-028"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("150,0,000")</response-string>
    <description>format-integer - picture grouping error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1500000, &apos;0,00,,000&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-029"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1,50,00,00")</response-string>
    <description>format-integer - picture grouping, with hash symbols at the end; non-BMP grouping separator</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <test>format-integer(1500000, &apos;###0,00&apos;)</test>
    <result-string>xs:string("&apos;15000,00&apos;")</result-string>
    <result>
      <assert-eq>&apos;15000,00&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-030"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("602347826(000)000-000")</response-string>
    <description>format-integer - picture with different separators, which are irregular</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <test>format-integer(602347826, &apos;#(000)000-000&apos;)</test>
    <result-string>xs:string("&apos;(602)347-826&apos;")</result-string>
    <result>
      <assert-eq>&apos;(602)347-826&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-031"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("W2")</response-string>
    <description>format-integer - Ordinal number output request</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(2, &apos;W;o&apos;)</test>
    <result-string>xs:string("&apos;SECOND&apos;")</result-string>
    <result>
      <assert-eq>&apos;SECOND&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-032"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>format-integer - Ordinal number output request</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <dependency type="language" value="de"/>
    <test>format-integer(1, &apos;Ww;o(-er)&apos;, &apos;de&apos; cast as xs:language)</test>
    <result-string>xs:string("&apos;Erster&apos;")</result-string>
    <result>
      <assert-eq>&apos;Erster&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-033"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1")</response-string>
    <description>format-integer - Ordinal number output request</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(1, &apos;1;o(-en)&apos;)</test>
    <result-string>xs:string("&apos;1st&apos;")</result-string>
    <result>
      <assert-eq>&apos;1st&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-034"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1")</response-string>
    <description>format-integer - ordinal number request format modifier, with invalid picture</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code, and change picture to make it an error" on="2011-05-29"/>
    <test>format-integer(1, &apos;1;o(-er)z&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-035"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Ww1")</response-string>
    <description>format-integer - format modifier t</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(1, &apos;Ww;t&apos;)</test>
    <result-string>xs:string("&apos;One&apos;")</result-string>
    <result>
      <assert-eq>&apos;One&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-036"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Ww0")</response-string>
    <description>format-integer - empty sequence</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <test>format-integer((), &apos;Ww&apos;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&apos;&apos;</assert-eq>
        <assert-type>xs:string</assert-type>
        <assert>count($result) = 1</assert>
      </all-of>
    </result>
  </test-case>
  <test-case name="format-integer-037"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Ww1234")</response-string>
    <description>format-integer - mismatched parens in picture</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code, and change test to be an error" on="2011-05-29"/>
    <test>format-integer(1234, &apos;Ww;o()(&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-038"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("()Ww1234")</response-string>
    <description>format-integer - misplaced parens in picture</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <modified by="Michael Kay, Saxonica" change="not an error; assume fallback to picture=1" on="2012-05-29"/>
    <modified by="Michael Kay, Saxonica" change="see bug 19004 comment 22" on="2013-03-11"/>
    <test>format-integer(1234, &apos;()Ww;o&apos;)</test>
    <result-string>xs:string("1234th")</result-string>
    <result>
      <assert-string-value>1234th</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-integer-039"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1234")</response-string>
    <description>format-integer - disallowed characters in picture</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="not an error; assume fallback to picture=1" on="2011-05-29"/>
    <test>format-integer(1234, &apos;&apos;)</test>
    <result-string>xs:string("1234")</result-string>
    <result>
      <assert-string-value>1234</assert-string-value>
    </result>
  </test-case>
  <test-case name="format-integer-040"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1234")</response-string>
    <description>format-integer - mixed digits in picture</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(1234, &apos;123&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-041"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1234")</response-string>
    <description>format-integer - non-BMP digits (Osmanya digits)</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <test>format-integer(1234, &apos;#,&apos;)</test>
    <result-string>xs:string("&apos;,&apos;")</result-string>
    <result>
      <assert-eq>&apos;,&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-042"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1234")</response-string>
    <description>format-integer - unrecognized numbering sequence - fallback</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <dependency satisfied="false" type="format-integer-sequence" value="&#64500;"/>
    <test>format-integer(1234, &apos;&apos;)</test>
    <result-string>xs:string("1234")</result-string>
    <result>
      <assert-eq>&apos;1234&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-043"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("o85")</response-string>
    <description>format-integer - negative ordinal</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(-85, &apos;1;o&apos;)</test>
    <result-string>xs:string("&apos;-85th&apos;")</result-string>
    <result>
      <assert-eq>&apos;-85th&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-044"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("o5")</response-string>
    <description>format-integer - negative ordinal in words</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <modified by="Michael Kay, Saxonica" change="semicolon separator, see bug 14858" on="2012-02-28"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(-5, &apos;Ww;o&apos;)</test>
    <result-string>xs:string("&apos;-Fifth&apos;")</result-string>
    <result>
      <assert-eq>&apos;-Fifth&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-045"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("Ww0")</response-string>
    <description>format-integer - zero in words</description>
    <created by="Michael Kay, Saxonica" on="2010-09-28"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(0, &apos;Ww&apos;)</test>
    <result-string>xs:string("&apos;Zero&apos;")</result-string>
    <result>
      <assert-eq>&apos;Zero&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-046"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5")</response-string>
    <description>format-integer with circled digits</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <environment ref="empty"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#9312;"/>
    <test>string-join(for $i in 1 to 5 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-047"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5")</response-string>
    <description>format-integer with parenthesized digits</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <environment ref="empty"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#9332;"/>
    <test>string-join(for $i in 1 to 5 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-048"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5")</response-string>
    <description>format-integer with full-stopped digits</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <environment ref="empty"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#9352;"/>
    <test>string-join(for $i in 1 to 5 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-049"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5")</response-string>
    <description>
        	format-integer with greek uppercase
        	Note: see bug 21449. An implementation that does does not support this numbering
        	sequence should not run this test.
        </description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <environment ref="empty"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#913;"/>
    <test>string-join(for $i in 1 to 5 return format-integer($i, &apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-050"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1|2|3|4|5")</response-string>
    <description>
        	format-integer with greek lowercase.
        	Note: see bug 21449. An implementation that does does not support this numbering
        	sequence should not run this test.
        </description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <environment ref="empty"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#945;"/>
    <test>string-join(for $i in 1 to 5 return format-integer($i,&apos;&apos;), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;||||&apos;")</result-string>
    <result>
      <assert-eq>&apos;||||&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-051"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("12345678901 000")</response-string>
    <description>format-integer with space as separator</description>
    <created by="Michael Kay, Saxonica" on="2010-09-27"/>
    <test>format-integer(12345678901,&apos;# 000&apos;)</test>
    <result-string>xs:string("&apos;12 345 678 901&apos;")</result-string>
    <result>
      <assert-eq>&apos;12 345 678 901&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-052"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10|11=11|12=12|13=13|14=14|15=15|16=16|17=17|18=18|19=19|20=20|21=21|22=22|23=23|151=151|302=302|469=469|2025=2025")</response-string>
    <description>
        	format-integer using Kanji sequence (see http://en.wikipedia.org/wiki/Japanese_numerals)
            Note: see bug 21449. An implementation that does does not support this numbering
        	sequence should not run this test.
        </description>
    <created by="Michael Kay, Saxonica" on="2010-10-12"/>
    <dependency satisfied="true" type="format-integer-sequence" value="&#19968;"/>
    <test>string-join(
                for $i in (1 to 23, 151, 302, 469, 2025) 
                return concat($i, &apos;=&apos;,  format-integer($i, &apos;&apos;)), &apos;|&apos;)</test>
    <result-string>xs:string("&apos;1=|2=|3=|4=|5=|6=|7=|8=|9=|10=|11=|12=|13=|14=|15=|16=|17=|18=|19=|20=|21=|22=|23=|151=|302=|469=|2025=&apos;")</result-string>
    <result>
      <assert-eq>&apos;1=|2=|3=|4=|5=|6=|7=|8=|9=|10=|11=|12=|13=|14=|15=|16=|17=|18=|19=|20=|21=|22=|23=|151=|302=|469=|2025=&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-053"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123")</response-string>
    <description>format-integer with leading optional-digit-sign</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2010-09-27"/>
    <test>format-integer(123,&apos;#0&apos;)</test>
    <result-string>xs:string("123")</result-string>
    <result>
      <assert-eq>&apos;123&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-054"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("123")</response-string>
    <description>format-integer - trailing optional-digit-sign error</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2011-03-10"/>
    <modified by="Michael Kay, Saxonica" change="change error code" on="2011-05-29"/>
    <test>format-integer(123,&apos;0#&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-055"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("b1")</response-string>
    <description>format-integer - test case relates to Bug #12280 in bugzilla</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2011-03-16"/>
    <modified by="Michael Kay" change="see bug 15232" on="2012-05-18"/>
    <test>format-integer(1,&apos;b;o&apos;)</test>
    <result-string/>
    <result>
      <assert-type>xs:string</assert-type>
    </result>
  </test-case>
  <test-case name="format-integer-056"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("o1")</response-string>
    <description>format-integer - test case relates to Bug #12280 in bugzilla</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2011-03-16"/>
    <modified by="Michael Kay, Saxonica" change="no error, result implementation defined" on="2011-05-29"/>
    <environment ref="empty"/>
    <test>format-integer(1,&apos;o;o&apos;)</test>
    <result-string/>
    <result>
      <assert-type>xs:string</assert-type>
    </result>
  </test-case>
  <test-case name="format-integer-057"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("bo1")</response-string>
    <description>format-integer - test case relates to Bug #12280 in bugzilla</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2011-03-16"/>
    <modified by="Michael Kay, Saxonica" change="no error, result implementation defined" on="2011-05-29"/>
    <environment ref="empty"/>
    <test>format-integer(1,&apos;bo;o&apos;)</test>
    <result-string/>
    <result>
      <assert-type>xs:string</assert-type>
    </result>
  </test-case>
  <test-case name="format-integer-058"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("bb1")</response-string>
    <description>format-integer - test case relates to Bug #12280 in bugzilla</description>
    <created by="O&apos;Neil Delpratt, Saxonica" on="2011-03-16"/>
    <modified by="Michael Kay, Saxonica" change="no error, result implementation defined" on="2011-05-29"/>
    <test>format-integer(1,&apos;bb&apos;)</test>
    <result-string/>
    <result>
      <assert-type>xs:string</assert-type>
    </result>
  </test-case>
  <test-case name="format-integer-059"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("001")</response-string>
    <description>format-integer - semicolon at end is ignored</description>
    <created by="Michael Kay, Saxonica" on="2012-02-28"/>
    <environment ref="empty"/>
    <test>format-integer(1,&apos;001;&apos;)</test>
    <result-string>xs:string("&apos;001&apos;")</result-string>
    <result>
      <assert-eq>&apos;001&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-060"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1234")</response-string>
    <description>format-integer - semicolon as grouping separator</description>
    <created by="Michael Kay, Saxonica" on="2012-02-28"/>
    <environment ref="empty"/>
    <test>format-integer(1234,&apos;#;##1;&apos;)</test>
    <result-string>xs:string("&apos;1;234&apos;")</result-string>
    <result>
      <assert-eq>&apos;1;234&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-061"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("1")</response-string>
    <description>format-integer - Lone semicolon 
                     (unrecognized format token, defaults to "1")</description>
    <created by="Michael Kay, Saxonica" on="2012-02-28"/>
    <modified by="Michael Kay, Saxonica" change="see bug 16202" on="2012-05-18"/>
    <modified by="Michael Kay, Saxonica" change="now an error: see bug 19004" on="2013-01-22"/>
    <environment ref="empty"/>
    <test>format-integer(1, &apos;;&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="format-integer-062"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Third argument as a string in the form of a language code</description>
    <created by="Michael Kay, Saxonica" on="2012-12-07"/>
    <environment ref="empty"/>
    <test>format-integer(11, &apos;Ww&apos;, &apos;en&apos;)</test>
    <result-string>xs:string("&apos;Eleven&apos;")</result-string>
    <result>
      <assert-eq>&apos;Eleven&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-063"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description>Third argument as a string not in the form of a language code</description>
    <created by="Michael Kay, Saxonica" on="2012-12-07"/>
    <modified by="Michael Kay, Saxonica" change="Not an error. See bug 20663" on="2013-01-15"/>
    <environment ref="empty"/>
    <dependency type="default-language" value="en"/>
    <test>format-integer(11, &apos;Ww&apos;, &apos;@*!+%&apos;)</test>
    <result-string>xs:string("&apos;Eleven&apos;")</result-string>
    <result>
      <assert-eq>&apos;Eleven&apos;</assert-eq>
    </result>
  </test-case>
  <test-case name="format-integer-064"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:string("-1o")</response-string>
    <description>Error case with missing format modifier separator</description>
    <created by="Tim Mills" on="2013-03-14"/>
    <environment ref="empty"/>
    <test>format-integer(-1, &apos;1o&apos;)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "FODF1310"))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
</test-set>