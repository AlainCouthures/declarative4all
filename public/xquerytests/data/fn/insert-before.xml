<test-set name="fn-insert-before" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the insert-before() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-insert-before" type="spec"/>
  <test-case name="fn-insert-before-mix-args-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("z"),xs:string("a"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: string </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),1, "z")</test>
    <result-string>(xs:string("z"),xs:string("a"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"z", "a", "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: empty sequence </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),0, ())</test>
    <result-string>(xs:string("a"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: empty sequence </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, ())</test>
    <result-string>(xs:string("a"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string(" "),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: string </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:string(" "))</test>
    <result-string>(xs:string("a"),xs:string(" "),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", " ", "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:anyURI("www.example.com"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: anyURI </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:anyURI("www.example.com"))</test>
    <result-string>(xs:string("a"),xs:anyURI("www.example.com"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", "www.example.com", "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:integer("100"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: integer </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:integer("100"))</test>
    <result-string>(xs:string("a"),xs:integer("100"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", 100, "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:decimal("1.1"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: decimal </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:decimal("1.1"))</test>
    <result-string>(xs:string("a"),xs:decimal("1.1"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", 1.1, "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:float("1.1"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:float("1.1"))</test>
    <result-string>(xs:string("a"),xs:float("1.1"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", 1.1, "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:float("NaN"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:float("NaN"))</test>
    <result-string>(xs:string("a"),xs:float("NaN"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", xs:float(&apos;NaN&apos;), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:float("0"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:float("-0"))</test>
    <result-string>(xs:string("a"),xs:float("0"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", 0, "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:float("-INF"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:float("-INF"))</test>
    <result-string>(xs:string("a"),xs:float("-INF"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", xs:float(&apos;-INF&apos;), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:double("NaN"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: double </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:double("NaN"))</test>
    <result-string>(xs:string("a"),xs:double("NaN"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", xs:double(&apos;NaN&apos;),  "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:double("INF"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: double </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:double("INF"))</test>
    <result-string>(xs:string("a"),xs:double("INF"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", xs:double(&apos;INF&apos;), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:boolean("true"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:boolean("1"))</test>
    <result-string>(xs:string("a"),xs:boolean("true"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", true(), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:boolean("false"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:boolean("0"))</test>
    <result-string>(xs:string("a"),xs:boolean("false"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", false(), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:boolean("true"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:boolean("true"))</test>
    <result-string>(xs:string("a"),xs:boolean("true"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", true(), "b", "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:boolean("false"),xs:string("b"),xs:string("c"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),2, xs:boolean("false"))</test>
    <result-string>(xs:string("a"),xs:boolean("false"),xs:string("b"),xs:string("c"))</result-string>
    <result>
      <assert-deep-eq>"a", false(),  "b",  "c"</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string("b"),xs:string("c"),xs:date("1993-03-31"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: date </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),4, xs:date("1993-03-31"))</test>
    <result-string>(xs:string("a"),xs:string("b"),xs:string("c"),xs:date("1993-03-31"))</result-string>
    <result>
      <assert-deep-eq>"a", "b", "c", xs:date(&apos;1993-03-31&apos;)</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-019"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string("b"),xs:string("c"),xs:dateTime("1972-12-31T00:00:00"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: dateTime </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),4, xs:dateTime("1972-12-31T00:00:00"))</test>
    <result-string>(xs:string("a"),xs:string("b"),xs:string("c"),xs:dateTime("1972-12-31T00:00:00"))</result-string>
    <result>
      <assert-deep-eq>"a", "b", "c", xs:dateTime(&apos;1972-12-31T00:00:00&apos;)</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-020"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:string("a"),xs:string("b"),xs:string("c"),xs:time("12:30:00"))</response-string>
    <description> arg1: Sequence of string, arg2:integer, arg3: time </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( ("a", "b", "c"),4, xs:time("12:30:00"))</test>
    <result-string>(xs:string("a"),xs:string("b"),xs:string("c"),xs:time("12:30:00"))</result-string>
    <result>
      <assert-deep-eq>"a", "b", "c", xs:time(&apos;12:30:00&apos;)</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> A test whose essence is: `insert-before()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> A test whose essence is: `insert-before("wrong params", 2)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before("wrong params", 2)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</response-string>
    <description> A test whose essence is: `insert-before("wrong params", 2, 3, 4)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before("wrong params", 2, 3, 4)</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> The second argument to fn:insert-before cannot be the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), (), "a string")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `insert-before((), -31, "a string") eq "a string"`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), -31, "a string") eq "a string"</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> A test whose essence is: `insert-before((), 1, 3) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 1, 3) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `insert-before((), 1, "a string") eq "a string"`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 1, "a string") eq "a string"</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> A test whose essence is: `count(insert-before((), 1, (1, 2, 3))) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((), 1, (1, 2, 3))) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> A test whose essence is: `insert-before((), 30, 7) eq 7`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 30, 7) eq 7</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `count(insert-before((1, 2, 3, 4), 30, ())) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3, 4), 30, ())) eq 4</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `insert-before(9, 30, ()) eq 9`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before(9, 30, ()) eq 9</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> A test whose essence is: `count(insert-before((1, 2, 3, 4), 1, ())) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3, 4), 1, ())) eq 4</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> A test whose essence is: `count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> A test whose essence is: `count(insert-before((), 30, (1, 2, 3))) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((), 30, (1, 2, 3))) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> A test whose essence is: `count(insert-before((error(), 1), 1, (1, "two", 3)))  1`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((error(), 1), 1, (1, "two", 3)))  1</test>
    <result-string>xs:boolean("true")</result-string>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:FOER0000"))</result-string>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 1, (4, 5, 6))[last()] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last()] treat as xs:integer) eq 6</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last() - 3] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, ())[last()] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">()</response-string>
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(insert-before((1, current-time(), 3), 0, (4, 5, 6))[last() - 10])</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-fn-insert-before-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> tests insert-before at known positions </description>
    <created by="Nick Jones" on="2008-06-13"/>
    <test>insert-before(1 to 10,5,20 to 30)</test>
    <result-string>(xs:integer("1"),xs:integer("2"),xs:integer("3"),xs:integer("4"),xs:integer("20"),xs:integer("21"),xs:integer("22"),xs:integer("23"),xs:integer("24"),xs:integer("25"),xs:integer("26"),xs:integer("27"),xs:integer("28"),xs:integer("29"),xs:integer("30"),xs:integer("5"),xs:integer("6"),xs:integer("7"),xs:integer("8"),xs:integer("9"),xs:integer("10"))</result-string>
    <result>
      <assert-string-value>1 2 3 4 20 21 22 23 24 25 26 27 28 29 30 5 6 7 8 9 10</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-fn-insert-before-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">(xs:integer("1"),xs:integer("2"),xs:integer("3"),xs:integer("4"),xs:integer("5"),xs:integer("6"),xs:integer("7"),xs:integer("8"),xs:integer("9"),xs:integer("10"),xs:integer("20"),xs:string("blah"),xs:integer("22"),xs:integer("24"),xs:integer("26"),xs:integer("28"),xs:integer("30"),xs:integer("30"),xs:integer("31"),xs:integer("32"),xs:integer("33"),xs:integer("34"),xs:integer("35"),xs:integer("36"),xs:integer("37"),xs:integer("38"),xs:integer("39"),xs:integer("40"))</response-string>
    <description> Tests insert-before for known positions </description>
    <created by="Nick Jones" on="2008-06-13"/>
    <test>
        insert-before((1 to 10,(20 to 30)[. mod 2 = 0],30 to 40),12,"blah")
      </test>
    <result-string>(xs:integer("1"),xs:integer("2"),xs:integer("3"),xs:integer("4"),xs:integer("5"),xs:integer("6"),xs:integer("7"),xs:integer("8"),xs:integer("9"),xs:integer("10"),xs:integer("20"),xs:string("blah"),xs:integer("22"),xs:integer("24"),xs:integer("26"),xs:integer("28"),xs:integer("30"),xs:integer("30"),xs:integer("31"),xs:integer("32"),xs:integer("33"),xs:integer("34"),xs:integer("35"),xs:integer("36"),xs:integer("37"),xs:integer("38"),xs:integer("39"),xs:integer("40"))</result-string>
    <result>
      <assert-string-value>1 2 3 4 5 6 7 8 9 10 20 blah 22 24 26 28 30 30 31 32 33 34 35 36 37 38 39 40</assert-string-value>
    </result>
  </test-case>
</test-set>