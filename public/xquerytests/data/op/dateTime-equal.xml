<test-set name="op-dateTime-equal" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the dateTime-equal() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-dateTime-equal" type="spec"/>
  <test-case name="op-dateTime-equal2args-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-1                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-2                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(mid range)                         
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1996-04-07T01:40:52Z") eq xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-3                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(upper bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("2030-12-31T23:59:59Z") eq xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-4                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(mid range)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1996-04-07T01:40:52Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-5                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(upper bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("2030-12-31T23:59:59Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-6                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-7                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(mid range)                         
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1996-04-07T01:40:52Z") ne xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-8                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(upper bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("2030-12-31T23:59:59Z") ne xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-9                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(mid range)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1996-04-07T01:40:52Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-10                         
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:06 GMT-05:00 2005                
Purpose: Evaluates The "op:dateTime-equal" operator    
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(upper bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("2030-12-31T23:59:59Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-11                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (le) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-12                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (le)
 with the arguments set as follows:                    
$arg1 = xs:dateTime(mid range)                         
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1996-04-07T01:40:52Z") le xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-13                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (le) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(upper bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("2030-12-31T23:59:59Z") le xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-14                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (le) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(mid range)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1996-04-07T01:40:52Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-15                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (le)
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(upper bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("2030-12-31T23:59:59Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-16                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (ge) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-17                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (ge) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(mid range)                         
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1996-04-07T01:40:52Z") ge xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-18                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (ge) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(upper bound)                       
$arg2 = xs:dateTime(lower bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("2030-12-31T23:59:59Z") ge xs:dateTime("1970-01-01T00:00:00Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-19                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (ge) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(mid range)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1996-04-07T01:40:52Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-dateTime-equal2args-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description>
*******************************************************
Test: op-dateTime-equal2args-20                        
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:dateTime-equal" operator (ge) 
 with the arguments set as follows:                    
$arg1 = xs:dateTime(lower bound)                       
$arg2 = xs:dateTime(upper bound)                       
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-03"/>
    <test>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("2030-12-31T23:59:59Z")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-1                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of &apos;eq&apos; for xs:dateTime, returning positive. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.12")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-2"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-2                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of &apos;eq&apos; for xs:dateTime.         
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>not(xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.13"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-3"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-3                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of &apos;ne&apos; for xs:dateTime.         
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("2004-08-12T23:01:05.12") ne xs:dateTime("2004-08-12T23:01:04.12")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-4"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-4                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of &apos;ne&apos; for xs:dateTime.         
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>not(xs:dateTime("2004-07-12T23:01:04.12") ne xs:dateTime("2004-07-12T23:01:04.12"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-5"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-5                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to Z, in xs:dateTime. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-6"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-6                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset +00:00 is equal to Z, in xs:dateTime. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T16:00:12.345+00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-7"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-7                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset Z is equal to Z, in xs:dateTime. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T16:00:12.345Z") eq xs:dateTime("1999-12-04T16:00:12.345Z")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-8"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-8                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to +00:00, in xs:dateTime. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345+00:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-9"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-9                                  
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;eq&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") eq xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-10"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-10                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ne&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") ne xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-11"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-11                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;le&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") le xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-12"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-12                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;lt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") lt xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-13"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-13                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ge&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") ge xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-14"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-14                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;gt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") gt xs:date("1999-12-04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-15"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-15                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;eq&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") eq xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-16"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-16                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ne&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") ne xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-17"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-17                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;le&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") le xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-18"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-18                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;lt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") lt xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-19"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-19                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ge&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") ge xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-20"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-20                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;gt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:date("1999-12-04") gt xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-21"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-21                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;eq&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") eq xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-22"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-22                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ne&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") ne xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-23"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-23                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;le&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") le xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-24"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-24                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;lt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") lt xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-25"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-25                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ge&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") ge xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-26"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-26                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;gt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("1999-12-04T12:12:23") gt xs:time("22:12:04")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-27"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-27                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;eq&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") eq xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-28"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-28                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ne&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") ne xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-29"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-29                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;le&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") le xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-30"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-30                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;lt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") lt xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-31"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-31                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;ge&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") ge xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-DateTimeEQ-32"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description>
*******************************************************
 Test: K-DateTimeEQ-32                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: The operator &apos;gt&apos; is not available between xs:dateTime and xs:date . 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time("22:12:04") gt xs:dateTime("1999-12-04T12:12:23")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K2-DateTimeEQ-1"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description>
*******************************************************
 Test: K2-DateTimeEQ-1                                 
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Basic negative equalness test for xs:dateTime. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:dateTime("2002-03-06T00:00:00Z") ne xs:dateTime("2002-03-05T00:00:00+03:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-001"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat(&apos;0&apos;, $string) else $string }; declare function local:dateTime($year as xs:integer, $month as xs:integer, $day as xs:integer) { let $m := local:two-digit($month), $d := local:two-digit($day) return xs:dateTime(concat($year, &apos;-&apos;, $m, &apos;-&apos;, $d, "T12:00:00")) }; not(local:dateTime(2008, 05, 12) eq xs:dateTime("1972-12-15T12:00:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-002"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-30T00:01:00") eq xs:dateTime("2008-01-31T01:00:00+09:00")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-003"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-30T00:01:00")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-004"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00") eq xs:dateTime("2008-01-31T00:01:00+09:00")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-005"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-31T00:01:00")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-006"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPST0003"))</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat(&apos;0&apos;, $string) else $string }; declare function local:dateTime($year as xs:integer, $month as xs:integer, $day as xs:integer) { let $m := local:two-digit($month), $d := local:two-digit($day) return xs:dateTime(concat($year, &apos;-&apos;, $m, &apos;-&apos;, $d, "T12:00:00")) }; not(local:dateTime(2008, 05, 12) ne xs:dateTime("1972-12-15T12:00:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-007"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-30T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-008"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-30T00:01:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-009"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-010"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-31T00:01:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-011"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:dateTime, $null as xs:boolean) { if ($null) then () else $dateTime }; exists(local:dateTime(xs:dateTime("1972-12-15T12:00:00"), fn:true()) eq xs:dateTime("1972-12-15T12:00:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-012"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:dateTime, $null as xs:boolean) { if ($null) then () else $dateTime }; local:dateTime(xs:dateTime("1972-12-15T12:00:00"), fn:false()) eq xs:dateTime("1972-12-15T12:00:00")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-013"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "err:XPTY0004"))</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:dateTime, $null as xs:boolean) { if ($null) then () else $dateTime }; exists(local:dateTime(xs:dateTime("1972-12-15T12:00:00"), fn:true()) ne xs:dateTime("1972-12-15T12:00:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-014"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:dateTime, $null as xs:boolean) { if ($null) then () else $dateTime }; local:dateTime(xs:dateTime("1972-12-15T12:00:00"), fn:false()) ne xs:dateTime("1972-12-15T12:00:00")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-015"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-23"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:string, $timezone as xs:string) { xs:dateTime( concat($dateTime, $timezone) ) }; adjust-dateTime-to-timezone(local:dateTime("1972-12-14T00:00:00", "-12:00")) eq adjust-dateTime-to-timezone(xs:dateTime("1972-12-15T00:00:00+12:00"))</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-016"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">In progress...</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-23"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:dateTime($dateTime as xs:string, $timezone as xs:string) { xs:dateTime( concat($dateTime, $timezone) ) }; adjust-dateTime-to-timezone(local:dateTime("1972-12-14T00:00:00", "-12:00")) ne adjust-dateTime-to-timezone(xs:dateTime("1972-12-15T00:00:00+12:00"))</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-017"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("false")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-23"/>
    <test>xs:dateTime("1972-12-15T00:00:00+12:00") eq xs:dateTime("1972-12-15T00:00:01")</test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-dateTime-equal-018"><response-string xmlns:qt="http://www.w3.org/2010/09/qt-fots-catalog" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">xs:boolean("true")</response-string>
    <description> test comparison of dateTime </description>
    <created by="Tim Mills" on="2008-05-23"/>
    <test>xs:dateTime("1972-12-15T00:00:00+12:00") ne xs:dateTime("1972-12-15T00:00:01")</test>
    <result-string>xs:boolean("true")</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>