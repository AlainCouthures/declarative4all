<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module label
-->
<xsl:template match="xforms:label" priority="2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms">
	<xsl:param name="appearance" select="'undefined'"/>
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:param name="inputid"/>
	<xsl:variable name="inputidfor">
		<xsl:choose>
			<xsl:when test="@for != ''">
				<xsl:value-of select="concat($id_pf, 'input-', @for)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$inputid"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:variable>
	<xsl:choose>
		<xsl:when test="$appearance = 'groupTitle'">
			<div>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
					<xsl:with-param name="class">xforms-group-label</xsl:with-param>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</div>
		</xsl:when>
		<xsl:when test="$appearance = 'treeLabel'">
			<div>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
					<xsl:with-param name="class">xforms-tree-label</xsl:with-param>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</div>
		</xsl:when>
		<xsl:when test="$appearance = 'itemTreeLabel'">
			<a>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
					<xsl:with-param name="class">xforms-tree-item-label</xsl:with-param>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
				<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</a>
		</xsl:when>
		<xsl:when test="$appearance = 'minimal'">
			<legend>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</legend>
		</xsl:when>
		<xsl:when test="$appearance = 'caption'">
			<caption>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</caption>
		</xsl:when>
		<xsl:when test="$appearance = 'table'">
			<span scope="col">
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</span>
		</xsl:when>
		<xsl:when test="$appearance = 'item'">
			<label>
				<xsl:if test="$inputidfor != ''">
					<xsl:attribute name="for"><xsl:value-of select="$inputidfor"/></xsl:attribute>
				</xsl:if>
				<xsl:call-template name="genid">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:call-template name="style">
					<xsl:with-param name="class">xforms-item-label</xsl:with-param>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</label>
		</xsl:when>
		<xsl:when test="$appearance = 'field-minimal' and ../xforms:help[@appearance='minimal' and @href]">
			<a class="xforms-help xforms-minimal-help-link" href="{../xforms:help/@href}">
				<label>
					<xsl:call-template name="comunLabel">
						<xsl:with-param name="workid" select="$workid"/>
						<xsl:with-param name="class">xforms-appearance-minimal</xsl:with-param>
					</xsl:call-template>
					<xsl:choose>
						<xsl:when test="count(./node()) &gt; 0">
							<xsl:apply-templates select="node()">
								<xsl:with-param name="parentworkid" select="$workid"/>
							</xsl:apply-templates>
						</xsl:when>
						<xsl:otherwise> <xsl:text/></xsl:otherwise>
					</xsl:choose>
				</label>
			</a>
		</xsl:when>
		<xsl:when test="$appearance = 'field-minimal' and not(../xforms:help[@appearance='minimal' and @href])">
			<label>
				<xsl:if test="$inputidfor != ''">
					<xsl:attribute name="for"><xsl:value-of select="$inputidfor"/></xsl:attribute>
				</xsl:if>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
					<xsl:with-param name="class">xforms-appearance-minimal</xsl:with-param>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0"><xsl:apply-templates/>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</label>
		</xsl:when>
		<xsl:when test="$appearance = 'tabs'">
			<xsl:variable name="pid">
				<xsl:choose>
					<xsl:when test="../@id"><xsl:value-of select="../@id"/></xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$id_pf"/>
						<xsl:value-of select="local-name(parent::*)"/>
						<xsl:text>-</xsl:text>
						<xsl:value-of select="$parentworkid"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<a onclick="XsltForms_toggle.toggle('{$pid}');">
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</a>
		</xsl:when>
		<xsl:when test="$appearance = 'span'">
			<span>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
					<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</span>
		</xsl:when>
		<xsl:when test="local-name(../..) = 'tabs' or $appearance = 'none' or $appearance = 'groupNone'"/>
		<xsl:when test="../xforms:help[@appearance='minimal' and @href]">
			<a class="xforms-help xforms-minimal-help-link" href="{../xforms:help/@href}">
				<label>
					<xsl:call-template name="comunLabel">
						<xsl:with-param name="workid" select="$workid"/>
					</xsl:call-template>
					<xsl:choose>
						<xsl:when test="count(./node()) &gt; 0">
							<xsl:apply-templates select="node()">
								<xsl:with-param name="parentworkid" select="$workid"/>
							</xsl:apply-templates>
						</xsl:when>
						<xsl:otherwise> <xsl:text/></xsl:otherwise>
					</xsl:choose>
				</label>
			</a>
		</xsl:when>
		<xsl:when test="../xforms:help[@appearance='minimal' and not(@href)]">
			<span class="xforms-help">
				<xsl:variable name="hid">
					<xsl:choose>
						<xsl:when test="../xforms:help/@id"><xsl:value-of select="../xforms:help/@id"/></xsl:when>
						<xsl:otherwise>
							<xsl:for-each select="node()">
								<xsl:if test="self::xforms:help and not(preceding-sibling::xforms:help)">
									<xsl:value-of select="concat($id_pf,'help-',position(),'_',$workid)"/>
								</xsl:if>
							</xsl:for-each>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="helpworkid">
					<xsl:for-each select="../xforms:help/node()">
						<xsl:if test="self::xforms:help and not(preceding-sibling::xforms:help)">
							<xsl:value-of select="concat(position(),'_',$workid)"/>
						</xsl:if>
					</xsl:for-each>
				</xsl:variable>
				<span onmouseover="XsltForms_browser.show(this, 'help', true)" onmouseout="XsltForms_browser.show(this, 'help', false)">
					<label>
						<xsl:call-template name="comunLabel">
							<xsl:with-param name="workid" select="$workid"/>
						</xsl:call-template>
						<xsl:choose>
							<xsl:when test="count(./node()) &gt; 0">
								<xsl:apply-templates select="node()">
									<xsl:with-param name="parentworkid" select="$workid"/>
								</xsl:apply-templates>
							</xsl:when>
							<xsl:otherwise> <xsl:text/></xsl:otherwise>
						</xsl:choose>
					</label>
				</span>
				<span class="xforms-help-value" id="{$hid}">
					<xsl:apply-templates select="../xforms:help/node()">
						<xsl:with-param name="parentworkid" select="$helpworkid"/>
					</xsl:apply-templates>
				</span>
			</span>
		</xsl:when>
		<xsl:otherwise>
			<label>
				<xsl:if test="$inputidfor != ''">
					<xsl:attribute name="for"><xsl:value-of select="$inputidfor"/></xsl:attribute>
				</xsl:if>
				<xsl:call-template name="comunLabel">
					<xsl:with-param name="workid" select="$workid"/>
				</xsl:call-template>
				<xsl:choose>
					<xsl:when test="count(./node()) &gt; 0">
						<xsl:apply-templates select="node()">
							<xsl:with-param name="parentworkid" select="$workid"/>
						</xsl:apply-templates>
					</xsl:when>
				<xsl:otherwise> <xsl:text/></xsl:otherwise>
				</xsl:choose>
			</label>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>