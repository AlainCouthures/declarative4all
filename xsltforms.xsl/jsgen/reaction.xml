<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module reaction
-->
<xsl:template match="xforms:rebuild | xforms:recalculate | xforms:refresh | xforms:reset | xforms:revalidate" mode="script" priority="1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:apply-templates select="@*" mode="scriptattr"/>
	<js xmlns="">
		<xsl:choose>
			<xsl:when test="parent::xforms:action">
				<xsl:text>var </xsl:text>
				<xsl:value-of select="concat($vn_pf,local-name(),'_',$workid)"/>
				<xsl:text> = new XsltForms_dispatch(</xsl:text>
				<xsl:value-of select="$vn_subform"/>
				<xsl:text>,"xforms-</xsl:text>
				<xsl:value-of select="local-name()"/>
				<xsl:text>",</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@model"/></xsl:call-template>
				<xsl:text>,null,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@if"/></xsl:call-template>
				<xsl:text>,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@while"/></xsl:call-template>
				<xsl:text>,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@iterate"/></xsl:call-template>
				<xsl:text>);</xsl:text>
			</xsl:when>
			<xsl:otherwise>
				<xsl:variable name="parentid">
					<xsl:choose>
						<xsl:when test="../@id">"<xsl:value-of select="../@id"/></xsl:when>
						<xsl:otherwise>
							<xsl:variable name="lname" select="local-name(parent::*)"/>
							<xsl:value-of select="$jsid_pf"/>
							<xsl:value-of select="$lname"/>
							<xsl:text>-</xsl:text>
							<xsl:value-of select="$parentworkid"/>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:text>new XsltForms_listener(</xsl:text>
				<xsl:value-of select="$vn_subform"/>
				<xsl:text>,document.getElementById(</xsl:text>
				<xsl:value-of select="$parentid"/>
				<xsl:text>"),</xsl:text>
				<xsl:choose>
					<xsl:when test="@ev:target">
						<xsl:text>document.getElementById("</xsl:text>
						<xsl:value-of select="@ev:target"/>
						<xsl:text>"),</xsl:text>
					</xsl:when>
					<xsl:otherwise><xsl:text>null,</xsl:text></xsl:otherwise>
				</xsl:choose>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@ev:event"/></xsl:call-template>
				<xsl:text>,null,function(evt) {XsltForms_browser.run(new XsltForms_dispatch(</xsl:text>
				<xsl:value-of select="$vn_subform"/>
				<xsl:text>,"xforms-</xsl:text>
				<xsl:value-of select="local-name()"/>
				<xsl:text>",</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@model"/></xsl:call-template>
				<xsl:text>,null,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@if"/></xsl:call-template>
				<xsl:text>,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@while"/></xsl:call-template>
				<xsl:text>,</xsl:text>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@iterate"/></xsl:call-template>
				<xsl:text>),</xsl:text>
				<xsl:value-of select="$parentid"/>
				<xsl:text>",evt,false,true)}, true);</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</js>
	<xsl:apply-templates select="node()" mode="script">
		<xsl:with-param name="parentworkid" select="$workid"/>
	</xsl:apply-templates>
</xsl:template>