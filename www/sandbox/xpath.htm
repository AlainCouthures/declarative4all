<!DOCTYPE html>
<html>
	<head>
		<title>Fleur XPath Test Page</title>
		<script type="text/javascript" src="js/fleur.js"></script>
	</head>
	<body>
		<button id="run" disabled onclick="run()">Run</button>
		<pre id="xexpr"></pre>
		<pre id="result"></pre>
		<pre id="doc"></pre>
		<script type="text/javascript">
			/*globals Fleur */
			var req = new XMLHttpRequest();
			var parser = new Fleur.DOMParser();
			var ser = new Fleur.XMLSerializer();
			var xml;
			var xmldoc;
			var xexpr = "declare default element namespace 'http://www.toto.com';\ndeclare copy-namespaces preserve, no-inherit;\ndeclare default function namespace 'http://www.titi.com';\nmath:pi() div 2";
			xexpr = "/data/c";
			xexpr = "4 + count(prof:sleep(2000)) + 5";
			xexpr = "concat('A','B',prof:sleep(2000),'CD',prof:sleep(5000),'EFG')";
			xexpr = "doc('data/data.xml')/data/a";
			xexpr = "doc('data/data.xml')/data/a[@id eq 'a2']";
			xexpr = "(1 to 5) ! (. * .)";
			document.getElementById("xexpr").innerHTML = xexpr;
			var getp = new Promise(function(resolve, reject) {
				req.open('GET', 'data/data.xml', true);
				req.onload = function() {
					if (req.status === 200) {
						resolve(req.responseText);
					} else {
						reject("Not loaded!");
			      	}
				};
				req.send(null);
			});
			getp.then(
				function(s) {
					xml = s; 
					document.getElementById("run").disabled = false;
				},
				function(s) {
					document.getElementById("doc").innerHTML = s;
				}
			);
			function run() {
				document.getElementById("result").innerHTML = "";
				document.getElementById("doc").innerHTML = "";
				xmldoc = parser.parseFromString(xml, "application/xml");
				var nsResolver = function(element) {
					return {
						defaultNamespace: element.getAttribute("xmlns"),
						nsresolver: element.ownerDocument.createNSResolver(element),
						lookupNamespaceURI: function(prefix) {
							if (prefix === "_") {
								return this.defaultNamespace;
							}
							return this.nsresolver.lookupNamespaceURI(prefix);
						}
					};
				};
				document.getElementById("doc").innerHTML = ser.serializeToString(xmldoc, true).replace(/</mg, "&lt;");
				xmldoc.evaluate(xexpr, xmldoc, nsResolver(xmldoc.documentElement), Fleur.XPathResult.ANY_TYPE, null).then(
					function(res) {
						document.getElementById("result").innerHTML = res.toXQuery().replace(/</mg, "&lt;");
					},
					function(err) {
						document.getElementById("result").innerHTML = "Error " + err.code;
					}
				);
			}
		</script>
	</body>
</html>