<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="op-date-equal">
   <description>Tests for the date-equal() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-date-equal"/>
   <test-case name="op-date-equal2args-1">
      <description>
*******************************************************
Test: op-date-equal2args-1                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") eq xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-2">
      <description>
*******************************************************
Test: op-date-equal2args-2                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(mid range)                             
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1983-11-17Z") eq xs:date("1970-01-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-3">
      <description>
*******************************************************
Test: op-date-equal2args-3                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(upper bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("2030-12-31Z") eq xs:date("1970-01-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-4">
      <description>
*******************************************************
Test: op-date-equal2args-4                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(mid range)                             
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") eq xs:date("1983-11-17Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-5">
      <description>
*******************************************************
Test: op-date-equal2args-5                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(upper bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") eq xs:date("2030-12-31Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-6">
      <description>
*******************************************************
Test: op-date-equal2args-6                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") ne xs:date("1970-01-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-7">
      <description>
*******************************************************
Test: op-date-equal2args-7                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(mid range)                             
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1983-11-17Z") ne xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-8">
      <description>
*******************************************************
Test: op-date-equal2args-8                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(upper bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("2030-12-31Z") ne xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-9">
      <description>
*******************************************************
Test: op-date-equal2args-9                              
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(mid range)                             
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") ne xs:date("1983-11-17Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-10">
      <description>
*******************************************************
Test: op-date-equal2args-10                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:date-equal" operator        
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(upper bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:date("1970-01-01Z") ne xs:date("2030-12-31Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-11">
      <description>
*******************************************************
Test: op-date-equal2args-11                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (le)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") le xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-12">
      <description>
*******************************************************
Test: op-date-equal2args-12                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (le)   
 with the arguments set as follows:                    
$arg1 = xs:date(mid range)                             
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1983-11-17Z") le xs:date("1970-01-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-13">
      <description>
*******************************************************
Test: op-date-equal2args-13                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (le)   
 with the arguments set as follows:                    
$arg1 = xs:date(upper bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("2030-12-31Z") le xs:date("1970-01-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-14">
      <description>
*******************************************************
Test: op-date-equal2args-14                            
Written By: Carmelo Montanez                           
Date: June 14, 2005                                    
Purpose: Evaluates The "op:date-equal" operator (le)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(mid range)                             
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") le xs:date("1983-11-17Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-15">
      <description>
*******************************************************
Test: op-date-equal2args-15                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (le)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(upper bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") le xs:date("2030-12-31Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-16">
      <description>
*******************************************************
Test: op-date-equal2args-16                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (ge)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") ge xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-17">
      <description>
*******************************************************
Test: op-date-equal2args-17                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (ge)   
 with the arguments set as follows:                    
$arg1 = xs:date(mid range)                             
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1983-11-17Z") ge xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-18">
      <description>
*******************************************************
Test: op-date-equal2args-18                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (ge)   
 with the arguments set as follows:                    
$arg1 = xs:date(upper bound)                           
$arg2 = xs:date(lower bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("2030-12-31Z") ge xs:date("1970-01-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-19">
      <description>
*******************************************************
Test: op-date-equal2args-19                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (ge)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(mid range)                             
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") ge xs:date("1983-11-17Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-date-equal2args-20">
      <description>
*******************************************************
Test: op-date-equal2args-20                            
Written By: Carmelo Montanez                           
Date: June 3, 2005                                     
Purpose: Evaluates The "op:date-equal" operator (ge)   
 with the arguments set as follows:                    
$arg1 = xs:date(lower bound)                           
$arg2 = xs:date(upper bound)                           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-03"/>
      <test>xs:date("1970-01-01Z") ge xs:date("2030-12-31Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-1">
      <description>
*******************************************************
 Test: K-DateEQ-1                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:date, returning positive. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("2004-08-12") eq xs:date("2004-08-12")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-2">
      <description>
*******************************************************
 Test: K-DateEQ-2                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:date.             
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:date("2004-08-12") eq xs:date("2003-08-12"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-3">
      <description>
*******************************************************
 Test: K-DateEQ-3                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:date.             
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("2004-08-12") ne xs:date("2004-07-12")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-4">
      <description>
*******************************************************
 Test: K-DateEQ-4                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:date.             
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:date("2004-07-12") ne xs:date("2004-07-12"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-5">
      <description>
*******************************************************
 Test: K-DateEQ-5                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to Z, in xs:date. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("1999-12-04-00:00") eq xs:date("1999-12-04Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-6">
      <description>
*******************************************************
 Test: K-DateEQ-6                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset +00:00 is equal to Z, in xs:date. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("1999-12-04+00:00") eq xs:date("1999-12-04Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-7">
      <description>
*******************************************************
 Test: K-DateEQ-7                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset Z is equal to Z, in xs:date. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("1999-12-04Z") eq xs:date("1999-12-04Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-DateEQ-8">
      <description>
*******************************************************
 Test: K-DateEQ-8                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to +00:00, in xs:date. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:date("1999-12-04-00:00") eq xs:date("1999-12-04+00:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K2-DateEQ-1">
      <description>
*******************************************************
 Test: K2-DateEQ-1                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Basic negative equalness test for xs:date.   
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:time("01:01:01-03:00") ne xs:time("01:01:01+03:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="cbcl-date-eq-001">
      <description> Test that comparing large dates does not overflow. </description>
      <created by="Oliver Hallam" on="2008-05-14"/>
      <modified by="Michael Kay" on="2012-12-21" change="allow implementations to reject these dates"/>      
      <test>xs:date("-25252734927766555-06-07+02:00") = xs:date("25252734927766555-07-28")</test>
      <result>
         <any-of>
           <error code="FODT0001"/>
           <assert-false/>
         </any-of>  
      </result>
   </test-case>
   

   <test-case name="cbcl-date-ne-001">
      <description> Test that comparing large dates does not overflow. </description>
      <created by="Oliver Hallam" on="2008-05-14"/>      
      <modified by="Michael Kay" on="2012-12-21" change="allow implementations to reject these dates"/>      
      <test>xs:date("25252734927766555-07-28") != xs:date("-25252734927766555-06-07+02:00")</test>
      <result>
         <any-of>
           <error code="FODT0001"/>
           <assert-true/>
         </any-of> 
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-001">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string }; declare function local:date($year as xs:integer, $month as xs:integer, $day as xs:integer) { let $m := local:two-digit($month), $d := local:two-digit($day) return xs:date(concat($year, '-', $m, '-', $d)) }; not(local:date(2008, 05, 12) eq xs:date("1972-12-15"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-002">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-30") eq xs:date("2008-01-31+09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-003">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <test>xs:date("2008-01-31+09:00") eq xs:date("2008-01-30")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-004">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-31") eq xs:date("2008-01-31+09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-005">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-31+09:00") eq xs:date("2008-01-31")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-006">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string }; declare function local:date($year as xs:integer, $month as xs:integer, $day as xs:integer) { let $m := local:two-digit($month), $d := local:two-digit($day) return xs:date(concat($year, '-', $m, '-', $d)) }; not(local:date(2008, 05, 12) ne xs:date("1972-12-15"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-007">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-30") ne xs:date("2008-01-31+09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-008">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-31+09:00") ne xs:date("2008-01-30")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-009">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-31") ne xs:date("2008-01-31+09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-010">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-16"/>      
      <test>xs:date("2008-01-31+09:00") ne xs:date("2008-01-31")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-011">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:date($date as xs:date, $null as xs:boolean) { if ($null) then () else $date }; exists(local:date(xs:date("1972-12-15"), fn:true()) eq xs:date("1972-12-15"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-012">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:date($date as xs:date, $null as xs:boolean) { if ($null) then () else $date }; local:date(xs:date("1972-12-15"), fn:false()) eq xs:date("1972-12-15")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-013">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      <test>declare function local:date($date as xs:date, $null as xs:boolean) { if ($null) then () else $date }; exists(local:date(xs:date("1972-12-15"), fn:true()) ne xs:date("1972-12-15"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-014">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:date($date as xs:date, $null as xs:boolean) { if ($null) then () else $date }; local:date(xs:date("1972-12-15"), fn:false()) ne xs:date("1972-12-15")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-015">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-23"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:date($date as xs:string, $timezone as xs:string) { xs:date( concat($date, $timezone) ) }; adjust-date-to-timezone(local:date("1972-12-14", "-12:00")) eq adjust-date-to-timezone(xs:date("1972-12-15+12:00"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-date-equal-016">
      <description> test comparison of date </description>
      <created by="Tim Mills" on="2008-05-23"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>declare function local:date($date as xs:string, $timezone as xs:string) { xs:date( concat($date, $timezone) ) }; adjust-date-to-timezone(local:date("1972-12-14", "-12:00")) ne adjust-date-to-timezone(xs:date("1972-12-15+12:00"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>   
</test-set>