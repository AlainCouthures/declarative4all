<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-base64Binary-equal" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the base64Binary-equal() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-base64Binary-equal" type="spec"/>
  <test-case name="op-base64Binary-equal2args-1">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-1                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-2">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-2                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(mid range)                   
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;) eq xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-3">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-3                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(upper bound)                 
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs&quot;) eq xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-4">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-4                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(mid range)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-5">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-5                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(upper bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-6">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-6                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-7">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-7                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(mid range)                   
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;) ne xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-8">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-8                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(upper bound)                 
$value2 = xs:base64Binary(lower bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs&quot;) ne xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-9">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-9                      
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(mid range)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-base64Binary-equal2args-10">
    <description>
*******************************************************
Test: op-base64Binary-equal2args-10                     
Written By: Carmelo Montanez                            
Date: Tue Mar 22 11:23:46 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:base64Binary-equal&quot; operator
 with the arguments set as follows:                    
$value1 = xs:base64Binary(lower bound)                 
$value2 = xs:base64Binary(upper bound)                 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-1">
    <description>
Test: base64BinaryEqual-1                                   
Description: Simple base 64 binary operation as part of a   
logical expression.  Use &quot;and&quot; and &quot;eq&quot; operators.          
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and (xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-2">
    <description>
Test: base64BinaryEqual-2                               
Description: Simple base 64 Binary operation as part of a   
logical expression.  Use &quot;or&quot; and &quot;eq&quot; operators.      
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;) or xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-3">
    <description>
Test: base54BinaryEqual-3                                       
Description: Simple base 64 binary operation as part of argument to fn:not function. 
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>fn:not(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-4">
    <description>
Test: base64BinaryEqual-4                                       
Description: Simple operation with xs:base64binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;eq&quot; operators with &quot;fn:true&quot; function.
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and fn:true()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64binaryequal-5">
    <description>
Test: base64BinaryEqual-5                                       
Description: Simple operation involving xs:base64Binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;eq&quot; operators with &quot;fn:false&quot; function.  
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and fn:false()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-6">
    <description>
Test: base64BinaryEqual-6                                       
Description: Simple operation using xs:base64Binary values as part of a   
logical expression.  Use &quot;or&quot; and &quot;eq&quot; operators and &quot;fn:true&quot; function.      
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) or fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-7">
    <description>
Test: base64BinaryEqual-7                                      
Description: Simple operation using xs:base64Binary values as part of a   
logical expression.  Use &quot;or&quot; and &quot;eq&quot; operators and &quot;fn:false&quot; function. 
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) or fn:false()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-8">
    <description>
Test: base64BinaryEqual-8                               
Description: Simple operation involving xs:base64Binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;ne&quot; operators.      
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and (xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) eq xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-9">
    <description>
Test: base64BinaryEqual-9                                       
Description: Simple operation involving xs:base64Binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;ne&quot; operators.      
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) or (xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-10">
    <description>
Test: base64BinaryEqual-10                                       
Description: Simple opeartion involving xs:base64Binary values as part of argument to &quot;fn:not&quot; function. 
</description>
    <created by="Carmelo Montanez" on="2005-09-02"/>
    <test>fn:not(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-11">
    <description>
Test: base64BinaryEqual-11                                       
Description: Simple operation involving xs:base64Binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;ne&quot; operators with &quot;fn:true&quot; function.      
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-12">
    <description>
Test: base64BinaryEqual-12                                       
Description: Simple operation involving base64Binary values as part of a   
logical expression.  Use &quot;and&quot; and &quot;ne&quot; operators with &quot;fn:false&quot; function.      
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) and fn:false()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-13">
    <description>
Test: base64BinaryEqual-13                                   
Description: Simple operation involving xs:base64Binary values used as part of a   
logical expression.  Use &quot;or&quot; and &quot;ne&quot; operators and &quot;fn:true&quot; function.      
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) or fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="base64BinaryEqual-14">
    <description>
Test: base64BinaryEqual-14                                     
Description: Simple operation involving xs:base64Binary values used as part of a   
logical expression.  Use &quot;or&quot; and &quot;ne&quot; operators and &quot;fn:false&quot; function.      
</description>
    <created by="Carmelo Montanez" on="2005-09-06"/>
    <test>(xs:base64Binary(&quot;cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q&quot;) ne xs:base64Binary(&quot;d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp&quot;)) or fn:false()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-Base64BinaryEQ-1">
    <description>
*******************************************************
 Test: K-Base64BinaryEQ-1                              
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `xs:base64Binary(xs:hexBinary(&quot;03&quot;)) eq xs:base64Binary(xs:hexBinary(&quot;03&quot;))`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:base64Binary(xs:hexBinary(&quot;03&quot;)) eq xs:base64Binary(xs:hexBinary(&quot;03&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-Base64BinaryEQ-2">
    <description>
*******************************************************
 Test: K-Base64BinaryEQ-2                              
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `xs:base64Binary(xs:hexBinary(&quot;03&quot;)) ne xs:base64Binary(xs:hexBinary(&quot;13&quot;))`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:base64Binary(xs:hexBinary(&quot;03&quot;)) ne xs:base64Binary(xs:hexBinary(&quot;13&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-Base64BinaryEQ-3">
    <description>
*******************************************************
 Test: K-Base64BinaryEQ-3                              
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `xs:hexBinary(xs:base64Binary(&quot;/w==&quot;)) eq xs:hexBinary(&quot;FF&quot;)`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:hexBinary(xs:base64Binary(&quot;/w==&quot;)) eq xs:hexBinary(&quot;FF&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-base64Binary-equal-001">
    <description>
 Name: cbcl-base64Binary-equal-001 
 Description: test equality of xs:base64Binary 
 Author: Tim Mills 
 Date: 2008-05-14 
</description>
    <created by="Tim Mills" on="2008-05-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      declare function local:base64Binary-value($arg as xs:boolean) as xs:base64Binary { 
      	if ($arg) then xs:base64Binary('aGVsbG8=') else xs:base64Binary('Z29vZGJ5ZQ==') 
      }; 
      local:base64Binary-value(true()) eq local:base64Binary-value(false())</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-base64Binary-equal-002">
    <description>
 Name: cbcl-base64Binary-equal-002 
 Description: test equality of xs:base64Binary 
 Author: Tim Mills 
 Date: 2008-05-14 
</description>
    <created by="Tim Mills" on="2008-05-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:base64Binary-value($arg as xs:boolean) as xs:base64Binary { 
      		if ($arg) then xs:base64Binary('aGVsbG8=') else xs:base64Binary('Z29vZGJ5ZQ==') 
      	}; 
      	not(local:base64Binary-value(true()) eq local:base64Binary-value(false()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-base64Binary-equal-003">
    <description>
 Name: cbcl-base64Binary-equal-003 
 Description: test equality of xs:base64Binary 
 Author: Tim Mills 
 Date: 2008-05-14 
</description>
    <created by="Tim Mills" on="2008-05-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:base64Binary-value($arg as xs:boolean) as xs:base64Binary { 
      		if ($arg) then xs:base64Binary('aGVsbG8=') else xs:base64Binary('Z29vZGJ5ZQ==') 
      	}; 
      	not(local:base64Binary-value(true()) ne local:base64Binary-value(false()))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
</test-set>