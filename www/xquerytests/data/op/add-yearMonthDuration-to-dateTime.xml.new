<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-add-yearMonthDuration-to-dateTime" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the add-yearMonthDuration-to-dateTime operator</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-add-yearMonthDuration-to-dateTime" type="spec"/>
  <link document="FuncOps" idref="func-add-yearMonthDuration-to-dateTime" section-number="10.8.4" type="spec"/>
  <test-case name="op-add-yearMonthDuration-to-dateTime2args-1">
    <description> Evaluates The &quot;op:add-yearMonthDuration-to-dateTime&quot; operator with the arguments set as follows: $arg1 = xs:dateTime(lower bound) $arg2 = xs:yearMonthDuration(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime(&quot;1970-01-01T00:00:00Z&quot;) + xs:yearMonthDuration(&quot;P0Y0M&quot;)</test>
    <result-string>xs:string('1970-01-01T00:00:00Z')</result-string>
    <result>
      <assert-string-value>1970-01-01T00:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime2args-2">
    <description> Evaluates The &quot;op:add-yearMonthDuration-to-dateTime&quot; operator with the arguments set as follows: $arg1 = xs:dateTime(mid range) $arg2 = xs:yearMonthDuration(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime(&quot;1996-04-07T01:40:52Z&quot;) + xs:yearMonthDuration(&quot;P0Y0M&quot;)</test>
    <result-string>xs:string('1996-04-07T01:40:52Z')</result-string>
    <result>
      <assert-string-value>1996-04-07T01:40:52Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime2args-3">
    <description> Evaluates The &quot;op:add-yearMonthDuration-to-dateTime&quot; operator with the arguments set as follows: $arg1 = xs:dateTime(upper bound) $arg2 = xs:yearMonthDuration(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime(&quot;2030-12-31T23:59:59Z&quot;) + xs:yearMonthDuration(&quot;P0Y0M&quot;)</test>
    <result-string>xs:string('2030-12-31T23:59:59Z')</result-string>
    <result>
      <assert-string-value>2030-12-31T23:59:59Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime2args-4">
    <description> Evaluates The &quot;op:add-yearMonthDuration-to-dateTime&quot; operator with the arguments set as follows: $arg1 = xs:dateTime(lower bound) $arg2 = xs:yearMonthDuration(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime(&quot;1970-01-01T00:00:00Z&quot;) + xs:yearMonthDuration(&quot;P1000Y6M&quot;)</test>
    <result-string>xs:string('2970-07-01T00:00:00Z')</result-string>
    <result>
      <assert-string-value>2970-07-01T00:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime2args-5">
    <description> Evaluates The &quot;op:add-yearMonthDuration-to-dateTime&quot; operator with the arguments set as follows: $arg1 = xs:dateTime(lower bound) $arg2 = xs:yearMonthDuration(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:dateTime(&quot;1970-01-01T00:00:00Z&quot;) + xs:yearMonthDuration(&quot;P2030Y12M&quot;)</test>
    <result-string>xs:string('4001-01-01T00:00:00Z')</result-string>
    <result>
      <assert-string-value>4001-01-01T00:00:00Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-1">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator As per example 1 (for this function)of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>xs:dateTime(&quot;2000-10-30T11:12:00&quot;) + xs:yearMonthDuration(&quot;P1Y2M&quot;)</test>
    <result-string>xs:string('2001-12-30T11:12:00')</result-string>
    <result>
      <assert-string-value>2001-12-30T11:12:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-2">
    <description>date: July 5, 2005  Evaluates The string value of &quot;add-dayTimeDuration-to-dateTime&quot; operator used as part of a boolean expression (and operator) and the &quot;fn:false&quot; function. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string(xs:dateTime(&quot;2000-12-12T12:12:12Z&quot;) + xs:dayTimeDuration(&quot;P12DT10H07M&quot;)) and fn:false()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-3">
    <description>date: July 5, 2005  Evaluates The string value of &quot;add-yearMonthDuration-to-dateTime&quot; operator as part of a boolean expression (or operator) and the &quot;fn:boolean&quot; function. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string((xs:dateTime(&quot;1999-10-23T13:45:45Z&quot;) + xs:yearMonthDuration(&quot;P19Y12M&quot;))) or fn:false()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-4">
    <description>date: July 5, 2005  Evaluates The string value of the &quot;add-yearMonthDuration-to-dateTime&quot; operator that return true and used together with fn:not. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:not(fn:string(xs:dateTime(&quot;1998-09-12T13:56:12Z&quot;) + xs:yearMonthDuration(&quot;P20Y03M&quot;)))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTimealt-5">
    <description>date: July 5, 2005  Evaluates The string value of the &quot;add-yearMonthDuration-to-dateTime&quot; operator that is used as an argument to the fn:boolean function. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:boolean(fn:string(xs:dateTime(&quot;1962-03-12T10:12:34Z&quot;) + xs:yearMonthDuration(&quot;P10Y01M&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-6">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator that is used as an argument to the fn:number function. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:number(xs:dateTime(&quot;1988-01-28T13:45:23Z&quot;) + xs:yearMonthDuration(&quot;P09Y02M&quot;))</test>
    <result-string>xs:string('NaN')</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-7">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator used as an argument to the &quot;fn:string&quot; function). </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string(xs:dateTime(&quot;1989-07-05T14:34:36Z&quot;) + xs:yearMonthDuration(&quot;P08Y04M&quot;))</test>
    <result-string>xs:string('1997-11-05T14:34:36Z')</result-string>
    <result>
      <assert-string-value>1997-11-05T14:34:36Z</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-8">
    <description>date: July 8, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator that returns a negative value. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>(xs:dateTime(&quot;0001-01-01T01:01:01Z&quot;) + xs:yearMonthDuration(&quot;-P20Y07M&quot;))</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>-0021-06-01T01:01:01Z</assert-string-value>
        <assert-string-value>-0020-06-01T01:01:01Z</assert-string-value>
      </any-of>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-9">
    <description>date: July 5, 2005  Evaluates The string value of the &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with an &quot;and&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string((xs:dateTime(&quot;1993-12-09T10:10:10Z&quot;) + xs:yearMonthDuration(&quot;P03Y03M&quot;))) and fn:string((xs:dateTime(&quot;1993-12-09T10:10:10Z&quot;) + xs:yearMonthDuration(&quot;P03Y03M&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-10">
    <description>date: July 5, 2005  Evaluates The string value of the &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with an &quot;or&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string((xs:dateTime(&quot;1985-07-05T09:09:09Z&quot;) + xs:yearMonthDuration(&quot;P02Y02M&quot;))) or fn:string((xs:dateTime(&quot;1985-07-05T09:09:09Z&quot;) + xs:yearMonthDuration(&quot;P02Y02M&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-12">
    <description>date: July 5, 2005  Evaluates The string value of the &quot;add-yearMonthDuration-to-dateTime&quot; operator used with a boolean expression and the &quot;fn:true&quot; function. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>fn:string((xs:dateTime(&quot;1980-03-02T02:02:02Z&quot;) + xs:yearMonthDuration(&quot;P05Y05M&quot;))) and (fn:true())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-13">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with the numeric-equal-operator &quot;eq&quot;. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>(xs:dateTime(&quot;1980-05-05T05:05:05Z&quot;) + xs:yearMonthDuration(&quot;P23Y11M&quot;)) eq xs:dateTime(&quot;1980-05-05T05:05:05Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-14">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with the numeric-equal operator &quot;ne&quot;. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>(xs:dateTime(&quot;1979-12-12T09:09:09Z&quot;) + xs:yearMonthDuration(&quot;P08Y08M&quot;)) ne xs:dateTime(&quot;1979-12-12T09:09:09Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-15">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with the numeric-equal operator &quot;le&quot;. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>(xs:dateTime(&quot;1978-12-12T07:07:07Z&quot;) + xs:yearMonthDuration(&quot;P17Y12M&quot;)) le xs:dateTime(&quot;1978-12-12T07:07:07Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-add-yearMonthDuration-to-dateTime-16">
    <description>date: July 5, 2005  Evaluates The &quot;add-yearMonthDuration-to-dateTime&quot; operator used together with the numeric-equal operator &quot;ge&quot;. </description>
    <created by="Carmelo Montanez" on="2005-07-01"/>
    <test>(xs:dateTime(&quot;1977-12-12T03:03:03Z&quot;) + xs:yearMonthDuration(&quot;P18Y02M&quot;)) ge xs:dateTime(&quot;1977-12-12T03:03:03Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-1">
    <description> Simple testing involving operator '+' between xs:dateTime and xs:yearMonthDuration. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:dateTime(&quot;1999-07-19T08:23:01.765&quot;) + xs:yearMonthDuration(&quot;P3Y35M&quot;) eq xs:dateTime(&quot;2005-06-19T08:23:01.765&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-2">
    <description> Simple testing involving operator '+' between xs:yearMonthDuration and xs:dateTime. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:yearMonthDuration(&quot;P3Y35M&quot;) + xs:dateTime(&quot;1999-07-19T08:23:01.765&quot;) eq xs:dateTime(&quot;2005-06-19T08:23:01.765&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-3">
    <description> The '+' operator is not available between xs:date and xs:time. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:date(&quot;1999-10-12&quot;) + xs:time(&quot;08:12:12&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-4">
    <description> The '+' operator is not available between xs:time and xs:date. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:time(&quot;08:12:12&quot;) + xs:date(&quot;1999-10-12&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-5">
    <description> The '+' operator is not available between xs:date and xs:time. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:date(&quot;1999-10-12&quot;) + xs:time(&quot;08:12:12&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-YearMonthDurationAddDT-6">
    <description> The '+' operator is not available between xs:time and xs:date. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:time(&quot;08:12:12&quot;) + xs:date(&quot;1999-10-12&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="cbcl-add-yearMonthDuration-to-dateTime-001">
    <description> test addition of zero duration to dateTime </description>
    <created by="Tim Mills" on="2008-05-12"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
         declare function local:two-digit($number as xs:integer) { 
            let $string := string($number) 
            return if (string-length($string) lt 2) then concat('0', $string) else $string 
         }; 
         declare function local:dateTime($year as xs:integer, $month as xs:integer, $day as xs:integer, $hour as xs:integer, $mins as xs:integer) { 
            let $m := local:two-digit($month), $d := local:two-digit($day), $h := local:two-digit($hour), $n := local:two-digit($mins) 
            return xs:dateTime(concat($year, '-', $m, '-', $d, 'T', $h, ':', $n, ':00')) 
         }; 
         xs:yearMonthDuration(&quot;P0Y&quot;) + local:dateTime(2008, 05, 12, 12, 59)</test>
    <result-string>xs:string('2008-05-12T12:59:00')</result-string>
    <result>
      <assert-string-value>2008-05-12T12:59:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-add-yearMonthDuration-to-dateTime-002">
    <description> test addition of zero duration to dateTime </description>
    <created by="Tim Mills" on="2008-05-12"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
         declare function local:two-digit($number as xs:integer) { 
            let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string 
         }; 
         declare function local:dateTime($year as xs:integer, $month as xs:integer, $day as xs:integer, $hour as xs:integer, $mins as xs:integer) { 
            let $m := local:two-digit($month), $d := local:two-digit($day), $h := local:two-digit($hour), $n := local:two-digit($mins) 
            return xs:dateTime(concat($year, '-', $m, '-', $d, 'T', $h, ':', $n, ':00')) 
         }; 
         local:dateTime(2008, 05, 12, 12, 59) + xs:yearMonthDuration(&quot;P0Y&quot;)</test>
    <result-string>xs:string('2008-05-12T12:59:00')</result-string>
    <result>
      <assert-string-value>2008-05-12T12:59:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-add-yearMonthDuration-to-dateTime-003">
    <description> test addition of large duration to dateTime </description>
    <created by="Tim Mills" on="2008-05-12"/>
    <modified by="Michael Kay" change="allow implementation to blow its limits" on="2012-12-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
         declare function local:two-digit($number as xs:integer) { 
            let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string 
         }; 
         declare function local:dateTime($year as xs:integer, $month as xs:integer, $day as xs:integer, $hour as xs:integer, $mins as xs:integer) { 
            let $m := local:two-digit($month), $d := local:two-digit($day), $h := local:two-digit($hour), $n := local:two-digit($mins) 
            return xs:dateTime(concat($year, '-', $m, '-', $d, 'T', $h, ':', $n, ':00')) 
         }; 
         local:dateTime(2008, 05, 12, 12, 59) + xs:yearMonthDuration(&quot;P4026720960Y&quot;)</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>4026722968-05-12T12:59:00</assert-string-value>
        <error code="FODT0002"/>
      </any-of>
    </result>
  </test-case>
</test-set>