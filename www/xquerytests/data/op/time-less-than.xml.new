<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-time-less-than" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the time-less-than() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-time-less-than" type="spec"/>
  <test-case name="op-time-less-than2args-1">
    <description>
*******************************************************
Test: op-time-less-than2args-1                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) lt xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-2">
    <description>
*******************************************************
Test: op-time-less-than2args-2                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(mid range)                             
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;08:03:35Z&quot;) lt xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-3">
    <description>
*******************************************************
Test: op-time-less-than2args-3                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(upper bound)                           
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;23:59:59Z&quot;) lt xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-4">
    <description>
*******************************************************
Test: op-time-less-than2args-4                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(mid range)                             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) lt xs:time(&quot;08:03:35Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-5">
    <description>
*******************************************************
Test: op-time-less-than2args-5                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(upper bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) lt xs:time(&quot;23:59:59Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-6">
    <description>
*******************************************************
Test: op-time-less-than2args-6                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) ge xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-7">
    <description>
*******************************************************
Test: op-time-less-than2args-7                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(mid range)                             
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;08:03:35Z&quot;) ge xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-8">
    <description>
*******************************************************
Test: op-time-less-than2args-8                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(upper bound)                           
$arg2 = xs:time(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;23:59:59Z&quot;) ge xs:time(&quot;00:00:00Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-9">
    <description>
*******************************************************
Test: op-time-less-than2args-9                          
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(mid range)                             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) ge xs:time(&quot;08:03:35Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than2args-10">
    <description>
*******************************************************
Test: op-time-less-than2args-10                         
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The &quot;op:time-less-than&quot; operator    
 with the arguments set as follows:                    
$arg1 = xs:time(lower bound)                           
$arg2 = xs:time(upper bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:time(&quot;00:00:00Z&quot;) ge xs:time(&quot;23:59:59Z&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-1">
    <description>
*******************************************************
Test: op-time-less-than-1                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function       
As per example 1 (for this function)of the FO specs   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;12:00:00-05:00&quot;) lt xs:time(&quot;23:00:00+06:00&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-2">
    <description>
*******************************************************
Test: op-time-less-than-2                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function       
As per example 2 (for this function) of the FO  specs 
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>xs:time(&quot;11:00:00-05:00&quot;) lt xs:time(&quot;17:00:00Z&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-3">
    <description>
*******************************************************
Test: op-time-less-than-3                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function that  
return true and used together with fn:not (lt operator)
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>fn:not((xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;14:00:00Z&quot;)))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-4">
    <description>
*******************************************************
Test: op-time-less-than-4                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function that  
return true and used together with fn:not (le operator)
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>fn:not(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;14:00:00Z&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-5">
    <description>
*******************************************************
Test: op-time-less-than-5                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function that  
return false and used together with fn:not (lt operator)
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>fn:not(xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-6">
    <description>
*******************************************************
Test: op-time-less-than-6                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function that  
return false and used together with fn:not(le operator)
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>fn:not(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;12:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-7">
    <description>
*******************************************************
Test: op-time-less-than-7                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;and&quot; expression (lt operator).          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;)) and (xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-8">
    <description>
*******************************************************
Test: op-time-less-than-8                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;and&quot; expression (le operator).          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;)) and (xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-9">
    <description>
*******************************************************
Test: op-time-less-than-9                              
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;or&quot; expression (lt operator).          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;)) or (xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-10">
    <description>
*******************************************************
Test: op-time-less-than-10                             
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;or&quot; expression (le operator).          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;)) or (xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-11">
    <description>
*******************************************************
Test: op-time-less-than-11                             
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;fn:true&quot;/or expression (lt operator).   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;)) or (fn:true())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-12">
    <description>
*******************************************************
Test: op-time-less-than-12                             
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;fn:true&quot;/or expression (le operator).   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;)) or (fn:true())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-13">
    <description>
*******************************************************
Test: op-time-less-than-13                             
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;fn:false&quot;/or expression (lt operator).  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) lt xs:time(&quot;17:00:00Z&quot;)) or (fn:false())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-time-less-than-14">
    <description>
*******************************************************
Test: op-time-less-than-14                             
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The &quot;time-less-than&quot; function used  
together with &quot;fn:false&quot;/or expression (le operator).  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2005-06-13"/>
    <test>(xs:time(&quot;13:00:00Z&quot;) le xs:time(&quot;17:00:00Z&quot;)) or (fn:false())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-1">
    <description>
*******************************************************
 Test: K-TimeLT-1                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'gt' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time(&quot;23:01:05.12&quot;) gt xs:time(&quot;23:01:04.12&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-2">
    <description>
*******************************************************
 Test: K-TimeLT-2                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'gt' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>not(xs:time(&quot;23:01:03.12&quot;) gt xs:time(&quot;23:01:04.12&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-3">
    <description>
*******************************************************
 Test: K-TimeLT-3                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'gt' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>not(xs:time(&quot;23:01:04.12&quot;) gt xs:time(&quot;23:01:04.12&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-4">
    <description>
*******************************************************
 Test: K-TimeLT-4                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ge' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time(&quot;23:01:04.12&quot;) ge xs:time(&quot;23:01:04.12&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-5">
    <description>
*******************************************************
 Test: K-TimeLT-5                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ge' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>xs:time(&quot;23:01:05.12&quot;) ge xs:time(&quot;23:01:04.12&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimeLT-6">
    <description>
*******************************************************
 Test: K-TimeLT-6                                      
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ge' for xs:time.             
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>not(xs:time(&quot;23:01:03.12&quot;) ge xs:time(&quot;23:01:04.12&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-001">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string };
        declare function local:time($hours as xs:integer, $mins as xs:integer, $seconds as xs:decimal) { let $h := local:two-digit($hours), $m := local:two-digit($mins) return xs:time(concat($h, ':', $m, ':', $seconds)) };
        not(local:time(12, 59, 30) lt xs:time(&quot;12:32:05&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-002">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:time(&quot;14:00:00-12:00&quot;) lt xs:time(&quot;02:00:00&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-003">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:time(&quot;02:00:00&quot;) lt xs:time(&quot;14:00:00-12:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-004">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <modified by="Tim Mills" change="Bug 21222" on="2013-03-18"/>
    <test>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time(&quot;00:00:00&quot;) lt xs:time(&quot;00:00:00+01:00&quot;)
            else xs:time(&quot;00:00:00+01:01&quot;) lt xs:time(&quot;00:00:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-005">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <modified by="Tim Mills" change="Bug 21222" on="2013-03-18"/>
    <test>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time(&quot;00:00:00+01:00&quot;) lt xs:time(&quot;00:00:00&quot;)
            else xs:time(&quot;00:00:00&quot;) lt xs:time(&quot;00:00:00+01:01&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-006">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:two-digit($number as xs:integer) { let $string := string($number) return if (string-length($string) lt 2) then concat('0', $string) else $string };
        declare function local:time($hours as xs:integer, $mins as xs:integer, $seconds as xs:decimal) { let $h := local:two-digit($hours), $m := local:two-digit($mins) return xs:time(concat($h, ':', $m, ':', $seconds)) };
        not(local:time(12, 59, 30) ge xs:time(&quot;12:32:05&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-007">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:time(&quot;14:00:00-12:00&quot;) ge xs:time(&quot;02:00:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-008">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <test>xs:time(&quot;02:00:00&quot;) ge xs:time(&quot;14:00:00-12:00&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-009">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <modified by="Tim Mills" change="Bug 21222" on="2013-03-18"/>
    <test>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time(&quot;00:00:00&quot;) ge xs:time(&quot;00:00:01+01:00&quot;)  
            else xs:time(&quot;00:00:00+01:01&quot;) ge xs:time(&quot;00:00:00&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-010">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <modified by="Tim Mills" change="Bug 21222" on="2013-03-18"/>
    <test>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time(&quot;00:00:01+01:00&quot;) ge xs:time(&quot;00:00:00&quot;)
            else xs:time(&quot;00:00:00&quot;) ge xs:time(&quot;00:00:00+01:01&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-011">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:time($time as xs:time, $null as xs:boolean) { if ($null) then () else $time };
        exists(local:time(xs:time(&quot;23:58:00&quot;), fn:true()) lt xs:time(&quot;23:58:00&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-012">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:time($time as xs:time, $null as xs:boolean) { if ($null) then () else $time };
        local:time(xs:time(&quot;23:58:00&quot;), fn:false()) lt xs:time(&quot;23:58:00&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-013">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:time($time as xs:time, $null as xs:boolean) { if ($null) then () else $time };
        exists(local:time(xs:time(&quot;23:58:00&quot;), fn:true()) ge xs:time(&quot;23:58:00&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-time-less-than-014">
    <description> test comparison of time </description>
    <created by="Tim Mills" on="2008-05-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:time($time as xs:time, $null as xs:boolean) { if ($null) then () else $time };
        local:time(xs:time(&quot;23:58:00&quot;), fn:false()) ge xs:time(&quot;23:58:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>