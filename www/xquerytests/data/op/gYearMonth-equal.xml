<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="op-gYearMonth-equal">
   <description>Tests for the gYearMonth-equal() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-gYearMonth-equal"/>
   <test-case name="op-gYearMonth-equal2args-1">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-1                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-2">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-2                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(mid range)                       
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1984-12Z") eq xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-3">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-3                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(upper bound)                     
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("2030-12Z") eq xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-4">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-4                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(mid range)                       
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1984-12Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-5">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-5                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(upper bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("2030-12Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-6">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-6                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-7">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-7                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(mid range)                       
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1984-12Z") ne xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-8">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-8                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(upper bound)                     
$arg2 = xs:gYearMonth(lower bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("2030-12Z") ne xs:gYearMonth("1970-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-9">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-9                        
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(mid range)                       
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1984-12Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equal2args-10">
      <description>
*******************************************************
Test: op-gYearMonth-equal2args-10                       
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYearMonth-equal" operator  
 with the arguments set as follows:                    
$arg1 = xs:gYearMonth(lower bound)                     
$arg2 = xs:gYearMonth(upper bound)                     
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("2030-12Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-1">
      <description>
*******************************************************
Test: op-gYearMonth-equal-1                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function     
As per example 1 (for this function)of the F&amp;O specs   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1976-02-05:00") eq xs:gYearMonth("1976-03Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-2">
      <description>
*******************************************************
Test: op-gYearMonth-equal-2                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function     
As per example 2 (for this function) of the F&amp;O  specs 
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1976-03-05:00") eq xs:gYearMonth("1976-03Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-3">
      <description>
*******************************************************
Test: op-gYearMonth-equal-3                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function that
return true and used together with fn:not (eq operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not((xs:gYearMonth("1995-02Z") eq xs:gYearMonth("1995-02Z")))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-4">
      <description>
*******************************************************
Test: op-gYearMonth-equal-4                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function that
return true and used together with fn:not (le operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYearMonth("2005-02Z") ne xs:gYearMonth("2006-03Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-5">
      <description>
*******************************************************
Test: op-gYearMonth-equal-5                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function that
return false and used together with fn:not (eq operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2001-04Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-6">
      <description>
*******************************************************
Test: op-gYearMonth-equal-6                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function that
return false and used together with fn:not(ne operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYearMonth("2005-01Z") ne xs:gYearMonth("2005-01Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-7">
      <description>
*******************************************************
Test: op-gYearMonth-equal-7                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "and" expression (eq operator).          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("2000-02Z") eq xs:gYearMonth("2000-03Z")) and (xs:gYearMonth("2001-01Z") eq xs:gYearMonth("2001-01Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-8">
      <description>
*******************************************************
Test: op-gYearMonth-equal-8                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "and" expression (ne operator).          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("2000-01Z") ne xs:gYearMonth("2000-01Z")) and (xs:gYearMonth("1975-01Z") ne xs:gYearMonth("1975-03Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-9">
      <description>
*******************************************************
Test: op-gYearMonth-equal-9                            
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "or" expression (eq operator).           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2000-03Z")) or (xs:gYearMonth("1976-06Z") eq xs:gYearMonth("1976-06Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-10">
      <description>
*******************************************************
Test: op-gYearMonth-equal-10                           
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "or" expression (ne operator).           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1976-01Z") ne xs:gYearMonth("1976-02Z")) or (xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-04Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-11">
      <description>
*******************************************************
Test: op-gYearMonth-equal-11                           
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "fn:true"/or expression (eq operator).   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1980-05Z") eq xs:gYearMonth("1980-05Z")) or (fn:true())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-12">
      <description>
*******************************************************
Test: op-gYearMonth-equal-12                           
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "fn:true"/or expression (ne operator).   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("2000-06Z") ne xs:gYearMonth("2000-07Z")) or (fn:true())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-13">
      <description>
*******************************************************
Test: op-gYearMonth-equal-13                           
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "fn:false"/or expression (eq operator).  
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1980-09Z") eq xs:gYearMonth("1980-09Z")) or (fn:false())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYearMonth-equalNew-14">
      <description>
*******************************************************
Test: op-gYearMonth-equal-14                           
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYearMonth-equal" function used
together with "fn:false"/or expression (ne operator).  
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-03Z")) or (fn:false())</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-1">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-1                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:gYearMonth, returning positive. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("2001-01 ") eq xs:gYearMonth("2001-01")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-2">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-2                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:gYearMonth.       
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:gYearMonth("2001-03") eq xs:gYearMonth("2000-03"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-3">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-3                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:gYearMonth.       
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("2001-12") ne xs:gYearMonth("2001-11")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-4">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-4                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:gYearMonth.       
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:gYearMonth("1995-11") ne xs:gYearMonth("1995-11"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-5">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-5                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to Z, in xs:gYearMonth. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-6">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-6                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset +00:00 is equal to Z, in xs:gYearMonth. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("1999-01+00:00") eq xs:gYearMonth("1999-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-7">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-7                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset Z is equal to Z, in xs:gYearMonth. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("1999-01Z") eq xs:gYearMonth("1999-01Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearMonthEQ-8">
      <description>
*******************************************************
 Test: K-gYearMonthEQ-8                                
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to +00:00, in xs:gYearMonth. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01+00:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   
   <test-case name="cbcl-gYearMonth-equal-001">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($year as xs:integer) { xs:gYearMonth(concat(string(2000 + $year), "-01")) }; not(local:gYearMonth(7) eq xs:gYearMonth("2008-01"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-002">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-003">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") eq xs:gYearMonth("2008-01")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-004">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-005">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") eq xs:gYearMonth("2008-01")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-006">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($year as xs:integer) { xs:gYearMonth(concat(string(2000 + $year), "-01")) }; not(local:gYearMonth(7) ne xs:gYearMonth("2008-01"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-007">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-008">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") ne xs:gYearMonth("2008-01")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-009">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-010">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") ne xs:gYearMonth("2008-01")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-011">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($gYearMonth as xs:gYearMonth, $null as xs:boolean) { if ($null) then () else $gYearMonth }; exists(local:gYearMonth(xs:gYearMonth("1972-12"), fn:true()) eq xs:gYearMonth("1972-12"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-012">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($gYearMonth as xs:gYearMonth, $null as xs:boolean) { if ($null) then () else $gYearMonth }; local:gYearMonth(xs:gYearMonth("1972-12"), fn:false()) eq xs:gYearMonth("1972-12")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-013">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($gYearMonth as xs:gYearMonth, $null as xs:boolean) { if ($null) then () else $gYearMonth }; exists(local:gYearMonth(xs:gYearMonth("1972-12"), fn:true()) ne xs:gYearMonth("1972-12"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYearMonth-equal-014">
      <description> test comparison of gYearMonth </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYearMonth($gYearMonth as xs:gYearMonth, $null as xs:boolean) { if ($null) then () else $gYearMonth }; local:gYearMonth(xs:gYearMonth("1972-12"), fn:false()) ne xs:gYearMonth("1972-12")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
</test-set>
