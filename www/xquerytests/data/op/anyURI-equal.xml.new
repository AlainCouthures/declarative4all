<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-anyURI-equal" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the anyURI-equal operator (not actually defined as such in F+O)</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-compare" type="spec"/>
  <test-case name="K-AnyURIEqual-1">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-2">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-3">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) eq xs:string(&quot;example.com/&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) eq xs:string(&quot;example.com/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-4">
    <description> A test whose essence is: `xs:string(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:string(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-5">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) ne xs:string(&quot;example.com/No&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) ne xs:string(&quot;example.com/No&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-6">
    <description> A test whose essence is: `xs:string(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:string(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-7">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) eq xs:untypedAtomic(&quot;example.com/&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) eq xs:untypedAtomic(&quot;example.com/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-8">
    <description> A test whose essence is: `xs:untypedAtomic(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:untypedAtomic(&quot;example.com/&quot;) eq xs:anyURI(&quot;example.com/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-9">
    <description> A test whose essence is: `xs:anyURI(&quot;example.com/&quot;) ne xs:untypedAtomic(&quot;example.com/No&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;example.com/&quot;) ne xs:untypedAtomic(&quot;example.com/No&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AnyURIEqual-10">
    <description> A test whose essence is: `xs:untypedAtomic(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:untypedAtomic(&quot;example.com/&quot;) ne xs:anyURI(&quot;example.com/No&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-1">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:string(&quot;http://example.com/A&quot;) eq xs:anyURI(&quot;http://example.com/A&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-2">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;http://example.com/A&quot;) eq xs:string(&quot;http://example.com/A&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-3">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;http://example.com/A&quot;) eq xs:anyURI(&quot;http://example.com/A&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-4">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:string(&quot;http://example.com/A&quot;) eq xs:anyURI(&quot;http://example.com/B&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-5">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:anyURI(&quot;http://example.com/A&quot;) eq xs:string(&quot;http://example.com/B&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-6">
    <description> Invoked 'eq' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:anyURI(&quot;http://example.com/A&quot;) eq xs:anyURI(&quot;http://example.com/B&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-7">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:anyURI(&quot;http://example.com/A&quot;) ne xs:string(&quot;http://example.com/A&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-8">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:string(&quot;http://example.com/A&quot;) ne xs:anyURI(&quot;http://example.com/A&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-9">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>not(xs:anyURI(&quot;http://example.com/A&quot;) ne xs:anyURI(&quot;http://example.com/A&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-10">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;http://example.com/A&quot;) ne xs:string(&quot;http://example.com/B&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-11">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:string(&quot;http://example.com/A&quot;) ne xs:anyURI(&quot;http://example.com/B&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-AnyURIEqual-12">
    <description> Invoked 'ne' on xs:anyURI values. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:anyURI(&quot;http://example.com/A&quot;) ne xs:anyURI(&quot;http://example.com/B&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>