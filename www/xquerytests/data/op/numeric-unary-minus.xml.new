<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-numeric-unary-minus" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the numeric-unary-minus() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-numeric-unary-minus" type="spec"/>
  <test-case name="op-numeric-unary-minusint1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:int(&quot;-2147483647&quot;))</test>
    <result-string>xs:decimal(&quot;2147483647&quot;)</result-string>
    <result>
      <assert-eq>2147483647</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusint1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:int(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:int(&quot;-1873914410&quot;))</test>
    <result-string>xs:decimal(&quot;1873914410&quot;)</result-string>
    <result>
      <assert-eq>1873914410</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusint1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:int(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:int(&quot;2147483647&quot;))</test>
    <result-string>xs:decimal(&quot;-2147483647&quot;)</result-string>
    <result>
      <assert-eq>-2147483647</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusintg1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusintg1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:integer(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:integer(&quot;830993497117024304&quot;))</test>
    <result-string>xs:decimal(&quot;-830993497117024304&quot;)</result-string>
    <result>
      <assert-eq>-830993497117024304</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusintg1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:integer(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:integer(&quot;999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdec1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdec1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:decimal(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:decimal(&quot;617375191608514839&quot;))</test>
    <result-string>xs:decimal(&quot;-617375191608514839&quot;)</result-string>
    <result>
      <assert-eq>-617375191608514839</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdec1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:decimal(&quot;999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdbl1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:decimal(&quot;1.7976931348623157E308&quot;)</result-string>
    <result>
      <assert-eq>1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdbl1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:double(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:double(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;-0&quot;)</result-string>
    <result>
      <assert-eq>-0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusdbl1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:double(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:double(&quot;1.7976931348623157E308&quot;))</test>
    <result-string>xs:decimal(&quot;-1.7976931348623157E308&quot;)</result-string>
    <result>
      <assert-eq>-1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusflt1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:float(3.4028235E38)</result-string>
    <result>
      <assert-eq>xs:float(3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusflt1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:float(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:float(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;-0&quot;)</result-string>
    <result>
      <assert-eq>-0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusflt1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:float(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:float(&quot;3.4028235E38&quot;))</test>
    <result-string>xs:float(-3.4028235E38)</result-string>
    <result>
      <assert-eq>xs:float(-3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuslng1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:decimal(&quot;92233720368547758&quot;)</result-string>
    <result>
      <assert-eq>92233720368547758</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuslng1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:long(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:long(&quot;-47175562203048468&quot;))</test>
    <result-string>xs:decimal(&quot;47175562203048468&quot;)</result-string>
    <result>
      <assert-eq>47175562203048468</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuslng1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:long(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:long(&quot;92233720368547758&quot;))</test>
    <result-string>xs:decimal(&quot;-92233720368547758&quot;)</result-string>
    <result>
      <assert-eq>-92233720368547758</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minususht1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minususht1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedShort(&quot;44633&quot;))</test>
    <result-string>xs:decimal(&quot;-44633&quot;)</result-string>
    <result>
      <assert-eq>-44633</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minususht1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedShort(&quot;65535&quot;))</test>
    <result-string>xs:decimal(&quot;-65535&quot;)</result-string>
    <result>
      <assert-eq>-65535</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnint1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnint1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:negativeInteger(&quot;-297014075999096793&quot;))</test>
    <result-string>xs:decimal(&quot;297014075999096793&quot;)</result-string>
    <result>
      <assert-eq>297014075999096793</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnint1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:negativeInteger(&quot;-1&quot;))</test>
    <result-string>xs:decimal(&quot;1&quot;)</result-string>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuspint1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:decimal(&quot;-1&quot;)</result-string>
    <result>
      <assert-eq>-1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuspint1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:positiveInteger(&quot;52704602390610033&quot;))</test>
    <result-string>xs:decimal(&quot;-52704602390610033&quot;)</result-string>
    <result>
      <assert-eq>-52704602390610033</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minuspint1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:positiveInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusulng1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusulng1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedLong(&quot;130747108607674654&quot;))</test>
    <result-string>xs:decimal(&quot;-130747108607674654&quot;)</result-string>
    <result>
      <assert-eq>-130747108607674654</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusulng1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:unsignedLong(&quot;184467440737095516&quot;))</test>
    <result-string>xs:decimal(&quot;-184467440737095516&quot;)</result-string>
    <result>
      <assert-eq>-184467440737095516</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnpi1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnpi1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonPositiveInteger(&quot;-475688437271870490&quot;))</test>
    <result-string>xs:decimal(&quot;475688437271870490&quot;)</result-string>
    <result>
      <assert-eq>475688437271870490</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnpi1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonPositiveInteger(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnni1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnni1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonNegativeInteger(&quot;303884545991464527&quot;))</test>
    <result-string>xs:decimal(&quot;-303884545991464527&quot;)</result-string>
    <result>
      <assert-eq>-303884545991464527</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minusnni1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:nonNegativeInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:decimal(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minussht1args-1">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:decimal(&quot;32768&quot;)</result-string>
    <result>
      <assert-eq>32768</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minussht1args-2">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:short(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:short(&quot;-5324&quot;))</test>
    <result-string>xs:decimal(&quot;5324&quot;)</result-string>
    <result>
      <assert-eq>5324</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minussht1args-3">
    <description> Evaluates The &quot;op:numeric-unary-minus&quot; operator with the arguments set as follows: $arg = xs:short(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>-(xs:short(&quot;32767&quot;))</test>
    <result-string>xs:decimal(&quot;-32767&quot;)</result-string>
    <result>
      <assert-eq>-32767</assert-eq>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-1">
    <description> No unary operator is available for xs:string. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-&quot;a string&quot;</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-2">
    <description> A test whose essence is: `+(-3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>+(-3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-3">
    <description> A test whose essence is: `(-3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(-3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-4">
    <description> A test whose essence is: `(+3) ne -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(+3) ne -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-5">
    <description> A test whose essence is: `-3 eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-3 eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-6">
    <description> A test whose essence is: `+(-3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>+(-3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-7">
    <description> A test whose essence is: `-(+3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-(+3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-8">
    <description> A test whose essence is: `-(3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-(3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-9">
    <description> A test whose essence is: `-(3) eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-(3) eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-10">
    <description> A test whose essence is: `---------3 eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>---------3 eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-11">
    <description> A test whose essence is: `+-+-+-+-+-+-+-+3 eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>+-+-+-+-+-+-+-+3 eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-12">
    <description> A test whose essence is: `----+-+-++-+-+-+-+++-+--+--3 eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>----+-+-++-+-+-+-+++-+--+--3 eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericUnaryMinus-13">
    <description> A test whose essence is: `---3 eq -3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>---3 eq -3</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-1">
    <description> Operand is constructor function for xs:double. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-xs:double(0)</test>
    <result-string>xs:decimal(&quot;-0&quot;)</result-string>
    <result>
      <assert-eq>-0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-2">
    <description> Operand is constructor function for xs:float. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-xs:float(0)</test>
    <result-string>xs:decimal(&quot;-0&quot;)</result-string>
    <result>
      <assert-eq>-0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-3">
    <description> Operand is constructor function for xs:decimal. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-xs:decimal(0)</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-4">
    <description> Operand is constructor function for xs:integer. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>-xs:integer(0)</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-5">
    <description> -0.0. </description>
    <created by="Frans Englich" on="2007-12-28"/>
    <test>-0.0</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-6">
    <description> Cast -0.0 to xs:float. </description>
    <created by="Frans Englich" on="2007-12-28"/>
    <test>xs:float(-0.0)</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-7">
    <description> Cast -0.0 to xs:double. </description>
    <created by="Frans Englich" on="2007-12-28"/>
    <test>xs:double(-0.0)</test>
    <result-string>xs:decimal(&quot;0&quot;)</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-8">
    <description> Unary combined with path expressions. </description>
    <created by="Frans Englich" on="2008-06-03"/>
    <dependency type="spec" value="XQ10+"/>
    <test>empty(document{()}/(-element()))</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-9">
    <description> Unary with an empty sequence. </description>
    <created by="Frans Englich" on="2008-06-03"/>
    <test>empty(-())</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-NumericUnaryMinus-10">
    <description> A tricky operand, which requires various forms of argument conversion. </description>
    <created by="Frans Englich" on="2008-06-10"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[-((<n>1</n> | ())[1])]]>
    </test>
    <result-string>xs:decimal(&quot;-1&quot;)</result-string>
    <result>
      <assert-eq>-1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-unary-minus-1">
    <description> Check dynamic type of unary plus on argument of union of numeric types and untypedAtomic. </description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $x in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)) 
        return typeswitch (-$x) 
        case xs:integer return &quot;integer&quot; 
        case xs:decimal return &quot;decimal&quot; 
        case xs:float return &quot;float&quot; 
        case xs:double return &quot;double&quot; 
        default return error()</test>
    <result-string>xs:string(&quot;integer decimal float double double&quot;)</result-string>
    <result>
      <assert-string-value>integer decimal float double double</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-unary-minus-001">
    <description> Test unary minus with a potential type check error </description>
    <created by="Tim Mills" on="2008-06-17"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare function local:value($number as xs:boolean) { if ($number) then 1 else xs:string('1') }; -(local:value(true()))</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>-1</assert-string-value>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
</test-set>