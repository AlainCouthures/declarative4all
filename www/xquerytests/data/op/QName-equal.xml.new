<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-QName-equal" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the QName-equal() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-QName-equal" type="spec"/>
  <test-case name="op-qname-equal-1">
    <description>
 Name: op-qName-equal-1 
 Description: Evaluation of op-QName-equal operator with two identical qName values. Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-2">
    <description>
 Name: op-qName-equal-2 
 Description: Evaluation of op-QName-equal operator with two identical qName values. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-3">
    <description>
 Name: op-qName-equal-3 
 Description: Evaluation of op-QName-equal operator with two two different qName values (different namespace uri values, same local part). Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example1&quot;, &quot;person&quot;) eq fn:QName(&quot;http://www.example.com/example2&quot;, &quot;person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-4">
    <description>
 Name: op-qName-equal-4 
 Description: Evaluation of op-QName-equal operator with two two different qName values. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example1&quot;, &quot;person&quot;) ne fn:QName(&quot;http://www.example.com/example2&quot;, &quot;person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-5">
    <description>
 Name: op-qName-equal-5 
 Description: Evaluation of op-QName-equal operator with two two different qName values (same namespace uri values, different local part). Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person1&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;person2&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-6">
    <description>
 Name: op-qName-equal-6 
 Description: Evaluation of op-QName-equal operator with two two different qName values (same namespace uri, different local part). Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person1&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;person2&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-7">
    <description>
 Name: op-qName-equal-7 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, same local part, same prefix. Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;px1:person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-8">
    <description>
 Name: op-qName-equal-8 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, same local part, same prefix. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;px1:person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-9">
    <description>
 Name: op-qName-equal-9 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, same local part, different prefix. Uses the &quot;eq&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-10">
    <description>
 Name: op-qName-equal-10 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, same local part, different prefix. Uses the &quot;ne&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-11">
    <description>
 Name: op-qName-equal-11 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, different local part, different prefix. Uses the &quot;eq&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person1&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person2&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-12">
    <description>
 Name: op-qName-equal-12 
 Description: Evaluation of op-QName-equal operator with two same namespace uri, different local part, different prefix. Uses the &quot;ne&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person1&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person2&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-13">
    <description>
 Name: op-qName-equal-13 
 Description: Evaluation of op-QName-equal operator with two different namespace uri, different local part, different prefix. Uses the &quot;eq&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example1&quot;, &quot;px1:person1&quot;) eq fn:QName(&quot;http://www.example.com/example2&quot;,&quot;px2:person2&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-14">
    <description>
 Name: op-qName-equal-14 
 Description: Evaluation of op-QName-equal operator with two different namespace uri, different local part, different prefix. Uses the &quot;ne&quot; operator. 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-15"/>
    <test>fn:QName(&quot;http://www.example.com/example1&quot;, &quot;px1:person1&quot;) ne fn:QName(&quot;http://www.example.com/example2&quot;,&quot;px2:person2&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-15">
    <description>
 Name: op-qName-equal-15 
 Description: Evaluation of op-QName-equal operator with first namespace uri set to the empty string, same local part and no prefix. Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;&quot;, &quot;person&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-16">
    <description>
 Name: op-qName-equal-16 
 Description: Evaluation of op-QName-equal operator with first namespace uri set to the empty string, same local part and no prefix. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;&quot;, &quot;person&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-17">
    <description>
 Name: op-qName-equal-17 
 Description: Evaluation of op-QName-equal operator with second namespace uri set to the empty string, same local part and no prefix. Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;) eq fn:QName(&quot;&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-18">
    <description>
 Name: op-qName-equal-18 
 Description: Evaluation of op-QName-equal operator with second namespace uri set to the empty string, same local part and no prefix. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;http://www.example.com/example&quot;, &quot;person&quot;) ne fn:QName(&quot;&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-19">
    <description>
 Name: op-qName-equal-19 
 Description: Evaluation of op-QName-equal operator with both namespace uri set to the empty string, same local part and no prefix. Uses the &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;&quot;, &quot;person&quot;) eq fn:QName(&quot;&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-20">
    <description>
 Name: op-qName-equal-20 
 Description: Evaluation of op-QName-equal operator with both namespace uri set to the empty string, same local part and no prefix. Uses the &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:QName(&quot;&quot;, &quot;person&quot;) ne fn:QName(&quot;&quot;,&quot;person&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-21">
    <description>
 Name: op-qName-equal-21 
 Description: Evaluation of op-QName-equal operator as an argument to the fn:not function.  Uses &quot;eq&quot; operator 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:not(fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person1&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person2&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-22">
    <description>
 Name: op-qName-equal-22 
 Description: Evaluation of op-QName-equal operator as an argument to the fn:not function.  Uses &quot;ne&quot; operator 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>fn:not(fn:QName(&quot;http://www.example.com/example&quot;, &quot;px1:person1&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;px2:person2&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-23">
    <description>
 Name: op-qName-equal-23 
 Description: Evaluation of op-QName-equal operator as part of a boolean expression.  Uses &quot;eq&quot;  and &quot;and&quot; operators 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>(fn:QName(&quot;http://www.example.com/example&quot;, &quot;px:person&quot;) eq fn:QName(&quot;http://www.example.com/example&quot;,&quot;px:person&quot;)) and fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-qname-equal-24">
    <description>
 Name: op-qName-equal-24 
 Description: Evaluation of op-QName-equal operator as part of a boolean expression.  Uses &quot;ne&quot;  and &quot;and&quot; operators 
 Should ignore the prefix 
 </description>
    <created by="Carmelo Montanez" on="2005-11-16"/>
    <test>(fn:QName(&quot;http://www.example.com/example&quot;, &quot;px:person&quot;) ne fn:QName(&quot;http://www.example.com/example&quot;,&quot;px:person&quot;)) and fn:true()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="value-comparison-1">
    <description>
 name : value-comparison-1 
 description : Evaluation of xs:string compare to xs:anyURI.
 Uses &quot;eq&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2006-04-10"/>
    <test>xs:string(&quot;example.org/&quot;) eq xs:anyURI(&quot;example.org/&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="value-comparison-2">
    <description>
 name : value-comparison-2 
 description : Evaluation of xs:string compare to xs:anyURI.
 Uses &quot;ne&quot; operator. 
 </description>
    <created by="Carmelo Montanez" on="2006-04-10"/>
    <test>xs:string(&quot;example.org/&quot;) ne xs:anyURI(&quot;example.org/&quot;)</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-1">
    <description>
*******************************************************
 Test: K-QNameEQ-1                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) eq QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) eq QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-2">
    <description>
*******************************************************
 Test: K-QNameEQ-2                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) eq QName(&quot;example.com/&quot;, &quot;pdifferent:ncname&quot;)`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) eq QName(&quot;example.com/&quot;, &quot;pdifferent:ncname&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-3">
    <description>
*******************************************************
 Test: K-QNameEQ-3                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) ne QName(&quot;example.com/Nope&quot;, &quot;p:ncname&quot;)`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) ne QName(&quot;example.com/Nope&quot;, &quot;p:ncname&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-4">
    <description>
*******************************************************
 Test: K-QNameEQ-4                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: A test whose essence is: `QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) ne QName(&quot;example.com/&quot;, &quot;p:ncnameNope&quot;)`. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) ne QName(&quot;example.com/&quot;, &quot;p:ncnameNope&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-5">
    <description>
*******************************************************
 Test: K-QNameEQ-5                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'lt' is not available between xs:QName and xs:integer. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) lt 1</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-6">
    <description>
*******************************************************
 Test: K-QNameEQ-6                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'eq' is not available between xs:anyURI and xs:QName. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) eq xs:anyURI(&quot;org&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-7">
    <description>
*******************************************************
 Test: K-QNameEQ-7                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'lt' is not available between values of type xs:QName. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) lt QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-8">
    <description>
*******************************************************
 Test: K-QNameEQ-8                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'le' is not available between values of type xs:QName. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) le QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-9">
    <description>
*******************************************************
 Test: K-QNameEQ-9                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'gt' is not available between values of type xs:QName. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) gt QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-QNameEQ-10">
    <description>
*******************************************************
 Test: K-QNameEQ-10                                    
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Operator 'ge' is not available between values of type xs:QName. 
*******************************************************
</description>
    <created by="Frans Englich" on="2007-11-26+01:00"/>
    <test>QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) ge QName(&quot;example.com/&quot;, &quot;p:ncname&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="cbcl-QName-equal-001">
    <description> test equality of xs:QName </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:QName-value($arg as xs:boolean) as xs:QName { if ($arg) then QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) else QName(&quot;example.com/&quot;, &quot;q:ncname&quot;) };
        not(local:QName-value(true()) eq local:QName-value(false()))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-QName-equal-002">
    <description> test equality of xs:QName </description>
    <created by="Tim Mills" on="2008-05-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:QName-value($arg as xs:boolean) as xs:QName { if ($arg) then QName(&quot;example.com/&quot;, &quot;p:ncname&quot;) else QName(&quot;example.com/&quot;, &quot;q:ncname&quot;) };
        not(local:QName-value(true()) ne local:QName-value(false()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>