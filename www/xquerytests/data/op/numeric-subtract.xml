<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="op-numeric-subtract">
   <description>Tests for the numeric-subtract() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-numeric-subtract"/>

   <test-case name="op-numeric-subtractint2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:int("-2147483648") - xs:int("-2147483648")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractint2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:int(mid range) $arg2 = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:int("-1873914410") - xs:int("-2147483648")</test>
      <result>
         <assert-eq>273569238</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractint2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:int(upper bound) $arg2 = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:int("-1") - xs:int("-2147483648")</test>
      <result>
         <assert-eq>2147483647</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractint2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:int("-2147483648") - xs:int("-1873914410")</test>
      <result>
         <assert-eq>-273569238</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractint2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:int("-1") - xs:int("2147483647")</test>
      <result>
         <assert-eq>-2147483648</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractintg2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:integer("-999999999999999999") - xs:integer("-999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractintg2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:integer(mid range) $arg2 = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:integer("0") - xs:integer("-999999999999999999")</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractintg2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:integer(upper bound) $arg2 = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:integer("0") - xs:integer("-999999999999999999")</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractintg2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:integer("-169006502882975695") - xs:integer("830993497117024304")</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractintg2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:integer("0") - xs:integer("999999999999999999")</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdec2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:decimal("-999999999999999999") - xs:decimal("-999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdec2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:decimal(mid range) $arg2 = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:decimal("0") - xs:decimal("-999999999999999999")</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdec2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:decimal(upper bound) $arg2 = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:decimal("0") - xs:decimal("-999999999999999999")</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdec2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:decimal("-382624808391485160") - xs:decimal("617375191608514839")</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdec2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:decimal("0") - xs:decimal("999999999999999999")</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdbl2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:double("-1.7976931348623157E308") - xs:double("-1.7976931348623157E308")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdbl2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:double(mid range) $arg2 = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:double("0") - xs:double("-1.7976931348623157E308")</test>
      <result>
         <assert-eq>1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdbl2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:double(upper bound) $arg2 = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:double("0") - xs:double("-1.7976931348623157E308")</test>
      <result>
         <assert-eq>1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdbl2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:double("-1.7976931348623157E308") - xs:double("0")</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractdbl2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:double("0") - xs:double("1.7976931348623157E308")</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractflt2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:float("-3.4028235E38") - xs:float("-3.4028235E38")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractflt2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:float(mid range) $arg2 = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:float("0") - xs:float("-3.4028235E38")</test>
      <result>
         <assert-eq>xs:float(3.4028235E38)</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractflt2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:float(upper bound) $arg2 = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:float("0") - xs:float("-3.4028235E38")</test>
      <result>
         <assert-eq>xs:float(3.4028235E38)</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractflt2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:float("-3.4028235E38") - xs:float("0")</test>
      <result>
         <assert-eq>xs:float(-3.4028235E38)</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractflt2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:float("0") - xs:float("3.4028235E38")</test>
      <result>
         <assert-eq>xs:float(-3.4028235E38)</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractlng2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:long("-92233720368547758") - xs:long("-92233720368547758")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractlng2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:long(mid range) $arg2 = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:long("-47175562203048468") - xs:long("-92233720368547758")</test>
      <result>
         <assert-eq>45058158165499290</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractlng2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:long(upper bound) $arg2 = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:long("0") - xs:long("-92233720368547758")</test>
      <result>
         <assert-eq>92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractlng2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:long("-92233720368547758") - xs:long("-47175562203048468")</test>
      <result>
         <assert-eq>-45058158165499290</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractlng2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:long("0") - xs:long("92233720368547758")</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractusht2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedShort("0") - xs:unsignedShort("0")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractusht2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedShort(mid range) $arg2 = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedShort("44633") - xs:unsignedShort("0")</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractusht2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedShort(upper bound) $arg2 = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedShort("65535") - xs:unsignedShort("0")</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractusht2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedShort("44633") - xs:unsignedShort("44633")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractusht2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedShort("65535") - xs:unsignedShort("65535")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnint2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:negativeInteger(lower bound) $arg2 = xs:negativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-297014075999096793")</test>
      <result>
         <assert-eq>-702985924000903206</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnint2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:negativeInteger(lower bound) $arg2 = xs:negativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-1")</test>
      <result>
         <assert-eq>-999999999999999998</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractpint2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:positiveInteger(mid range) $arg2 = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:positiveInteger("52704602390610033") - xs:positiveInteger("1")</test>
      <result>
         <assert-eq>52704602390610032</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractpint2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:positiveInteger(upper bound) $arg2 = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:positiveInteger("999999999999999999") - xs:positiveInteger("1")</test>
      <result>
         <assert-eq>999999999999999998</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractpint2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:positiveInteger("52704602390610034") - xs:positiveInteger("52704602390610033")</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractulng2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedLong("0") - xs:unsignedLong("0")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractulng2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedLong(mid range) $arg2 = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedLong("130747108607674654") - xs:unsignedLong("0")</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractulng2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedLong(upper bound) $arg2 = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedLong("184467440737095516") - xs:unsignedLong("0")</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractulng2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedLong("130747108607674654") - xs:unsignedLong("130747108607674654")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractulng2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:unsignedLong("184467440737095516") - xs:unsignedLong("184467440737095516")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnpi2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnpi2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(mid range) $arg2 = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnpi2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(upper bound) $arg2 = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnpi2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-475688437271870490")</test>
      <result>
         <assert-eq>-524311562728129509</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnpi2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("0")</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnni2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonNegativeInteger("0") - xs:nonNegativeInteger("0")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnni2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(mid range) $arg2 = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("0")</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnni2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(upper bound) $arg2 = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("0")</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnni2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("303884545991464527")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractnni2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("999999999999999999")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractsht2args-1">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:short("-32768") - xs:short("-32768")</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractsht2args-2">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:short(mid range) $arg2 = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:short("-5324") - xs:short("-32768")</test>
      <result>
         <assert-eq>27444</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractsht2args-3">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:short(upper bound) $arg2 = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:short("-1") - xs:short("-32768")</test>
      <result>
         <assert-eq>32767</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractsht2args-4">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:short("-32768") - xs:short("-5324")</test>
      <result>
         <assert-eq>-27444</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractsht2args-5">
      <description> Evaluates The "op:numeric-subtract" operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:short("-1") - xs:short("32767")</test>
      <result>
         <assert-eq>-32768</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-1">
      <description> Simple subtraction test with () as one operand should return null </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <test>1 - ()</test>
      <result>
         <any-of>
            <assert-empty/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-2">
      <description> Simple subtraction test pass string for second operator </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <test>1 - '1'</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-3">
      <description> Simple subtraction test, second operator cast string to integer </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <test>1 - xs:integer('1')</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-4">
      <description> Simple subtraction test, second operator is a node, atomization applied </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[3 - <a> 2 </a>]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-5">
      <description> Simple subtraction test, second operator is a node, atomization applied </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[3 - <a> <b> 2 </b> </a>]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-6">
      <description> Simple subtraction test, second operator node which is not atomizable </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[3 - <a> <b> 2</b> <c> 2</c> </a>]]></test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-7">
      <description> Simple subtraction test, two operands are nodes </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> 2 </a> - <b> 1 </b>]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-8">
      <description> Simple subtraction test, second operator is a node, atomizable but not castable to integer </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[1 - <a> x </a>]]></test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>

   <test-case name="op-numeric-subtractmix2args-9">
      <description> Simple subtraction test pass an empty node for second operator </description>
      <created by="Ravindranath Chennoju" on="2004-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[1 - <a/>]]></test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-1">
      <description> A test whose essence is: `xs:double(6) - xs:double(2) eq 4`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:double(6) - xs:double(2) eq 4</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-2">
      <description> A test whose essence is: `xs:decimal(6) - xs:decimal(2) eq 4`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:decimal(6) - xs:decimal(2) eq 4</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-3">
      <description> A test whose essence is: `xs:integer(6) - xs:integer(2) eq 4`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:integer(6) - xs:integer(2) eq 4</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-4">
      <description> A test whose essence is: `xs:float(5) - xs:float(1) eq 4`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:float(5) - xs:float(1) eq 4</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-5">
      <description> A test whose essence is: `(xs:decimal(6) - xs:integer(2)) instance of xs:decimal`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:decimal(6) - xs:integer(2)) instance of xs:decimal</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-6">
      <description> A test whose essence is: `(xs:integer(6) - xs:decimal(2)) instance of xs:decimal`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:integer(6) - xs:decimal(2)) instance of xs:decimal</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-7">
      <description> A test whose essence is: `(xs:integer(6) - xs:integer(2)) instance of xs:integer`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:integer(6) - xs:integer(2)) instance of xs:integer</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-8">
      <description> A test whose essence is: `(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-9">
      <description> A test whose essence is: `(xs:decimal(6) - xs:float(2)) instance of xs:float`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:decimal(6) - xs:float(2)) instance of xs:float</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-10">
      <description> A test whose essence is: `(xs:float(6) - xs:decimal(2)) instance of xs:float`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:float(6) - xs:decimal(2)) instance of xs:float</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-11">
      <description> A test whose essence is: `(xs:float(6) - xs:integer(2)) instance of xs:float`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:float(6) - xs:integer(2)) instance of xs:float</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-12">
      <description> A test whose essence is: `(xs:integer(6) - xs:float(2)) instance of xs:float`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:integer(6) - xs:float(2)) instance of xs:float</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-13">
      <description> A test whose essence is: `(xs:float(6) - xs:float(2)) instance of xs:float`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:float(6) - xs:float(2)) instance of xs:float</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-14">
      <description> A test whose essence is: `(xs:decimal(6) - xs:double(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:decimal(6) - xs:double(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-15">
      <description> A test whose essence is: `(xs:double(6) - xs:decimal(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:double(6) - xs:decimal(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-16">
      <description> A test whose essence is: `(xs:double(6) - xs:float(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:double(6) - xs:float(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-17">
      <description> A test whose essence is: `(xs:float(6) - xs:double(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:float(6) - xs:double(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-18">
      <description> A test whose essence is: `(xs:double(6) - xs:integer(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:double(6) - xs:integer(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-19">
      <description> A test whose essence is: `(xs:integer(6) - xs:double(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:integer(6) - xs:double(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-20">
      <description> A test whose essence is: `(xs:double(6) - xs:double(2)) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:double(6) - xs:double(2)) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-21">
      <description> A test whose essence is: `string(xs:float("NaN") - 3) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(xs:float("NaN") - 3) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-22">
      <description> A test whose essence is: `string(xs:double("NaN") - 3) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(xs:double("NaN") - 3) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-23">
      <description> A test whose essence is: `string(3 - xs:float("NaN")) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(3 - xs:float("NaN")) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-24">
      <description> A test whose essence is: `string(3 - xs:double("NaN")) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(3 - xs:double("NaN")) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-25">
      <description> Invoke the '-' operator with invalid operands. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>"3" - "3"</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-26">
      <description> Invoke the '-' operator with invalid operands. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:untypedAtomic("3") - "3"</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-27">
      <description> A test whose essence is: `(xs:untypedAtomic("3") - 3) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:untypedAtomic("3") - 3) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-28">
      <description> A test whose essence is: `(3 - xs:untypedAtomic("3")) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(3 - xs:untypedAtomic("3")) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-29">
      <description> Operand(s) which are the empty sequence. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(() - ())</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-30">
      <description> Operand(s) which are the empty sequence. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(() - xs:float(3))</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-31">
      <description> Operand(s) which are the empty sequence. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(() - xs:double(3))</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-32">
      <description> A test whose essence is: `(xs:untypedAtomic("3") - xs:untypedAtomic("3")) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:untypedAtomic("3") - xs:untypedAtomic("3")) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-33">
      <description> A test whose essence is: `(xs:untypedAtomic("3") - xs:untypedAtomic("3")) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:untypedAtomic("3") - xs:untypedAtomic("3")) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-34">
      <description> A test whose essence is: `(xs:untypedAtomic("3") - 1.1) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(xs:untypedAtomic("3") - 1.1) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-35">
      <description> A test whose essence is: `(1.1 - xs:untypedAtomic("3")) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>(1.1 - xs:untypedAtomic("3")) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-36">
      <description> Substracting zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>1 eq (remove((current-time(), 1), 1) - 0)</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-37">
      <description> Adding zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>1 eq (remove((current-time(), 1), 1) + 0)</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-NumericSubtract-38">
      <description> Adding zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>1 eq (0 + remove((current-time(), 1), 1))</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-NumericSubtract-1">
      <description> Substract xs:double(0) from xs:integer(0). </description>
      <created by="Frans Englich" on="2007-12-28"/>
      <test>0 - xs:double(0)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-NumericSubtract-2">
      <description> Substract xs:double(0) from xs:integer(0). </description>
      <created by="Frans Englich" on="2007-12-28"/>
      <test>0 - xs:float(0)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="op-numeric-subtract-1">
      <description> Check dynamic type of numeric subtract on arguments of union of numeric types and untypedAtomic. </description>
      <created by="Oliver Hallam" on="2010-03-16"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        for $x in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)) 
        for $y in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)) 
        return typeswitch ($x - $y) 
        case xs:integer return "integer" 
        case xs:decimal return "decimal" 
        case xs:float return "float" 
        case xs:double return "double" 
        default return error()</test>
      <result>
         <assert-string-value>integer decimal float double double decimal decimal float double double float float float double double double double double double double double double double double double</assert-string-value>
      </result>
   </test-case>
   
   
   <test-case name="cbcl-numeric-subtract-001">
      <description> test subtraction of large xs:decimal </description>
      <created by="Tim Mills" on="2008-05-14"/>
      <test>-79228162514264337593543950335.0 - 1.0 lt 0.0</test>
      <result>
	<any-of>
	  <assert-true/>
	  <error code="FOAR0002"/>
	</any-of>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-002">
      <description> test subtraction of large xs:integer </description>
      <created by="Tim Mills" on="2008-05-14"/>
      <test>-79228162514264337593543950335 - 1 lt 0</test>
      <result>
	<any-of>
	  <assert-true/>
	  <error code="FOAR0002"/>
	</any-of>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-003">
      <description> test subtraction of xs:decimal 0 </description>
      <created by="Tim Mills" on="2008-05-14"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
      	declare function local:square($arg as xs:decimal) as xs:decimal { $arg * $arg }; 
      	local:square(7.5) - 0.0</test>
      <result>
         <assert-string-value>56.25</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-004">
      <description> test subtraction of xs:integer 0 </description>
      <created by="Tim Mills" on="2008-05-14"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
      	declare function local:square($arg as xs:integer) as xs:integer { $arg * $arg }; 
      	local:square(7) - 0</test>
      <result>
         <assert-string-value>49</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-005">
      <description> ensure that subtracting xs:integers returns an xs:integer </description>
      <created by="Oliver Hallam" on="2008-05-29"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	(local:integer(2) - local:integer(2)) instance of xs:integer</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-006">
      <description> test subtraction of negated integers </description>
      <created by="Tim Mills" on="2008-07-01"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	-(local:integer(2)) - -(local:integer(4))</test>
      <result>
         <assert-string-value>2</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-007">
      <description> test subtraction of negated integers </description>
      <created by="Tim Mills" on="2008-07-01"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	local:integer(2) - -(local:integer(4))</test>
      <result>
         <assert-string-value>6</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-numeric-subtract-008">
      <description> test subtraction of negated integers </description>
      <created by="Tim Mills" on="2008-07-01"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	-(local:integer(2)) - local:integer(4)</test>
      <result>
         <assert-string-value>-6</assert-string-value>
      </result>
   </test-case>

   <test-case name="op-numeric-subtract-big-01">
      <description> test subtraction of large xs:decimal </description>
      <created by="Andrew Eisenberg" on="2012-10-31"/>
      <modified by="Michael Kay" on="2012-12-21" change="see bug 20473"/>
      <test>(-79228162514264337593543950335.0 - 1.0) cast as xs:string</test>
      <result>
	    <any-of>
	      <assert-string-value>-79228162514264337593543950336</assert-string-value>
	      <error code="FOAR0002"/>
	    </any-of>
      </result>
   </test-case>   

</test-set>
