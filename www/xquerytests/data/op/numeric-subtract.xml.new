<?xml version="1.0" encoding="UTF-8"?>
<test-set name="op-numeric-subtract" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the numeric-subtract() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-numeric-subtract" type="spec"/>
  <test-case name="op-numeric-subtractint2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-2147483648&quot;) - xs:int(&quot;-2147483648&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractint2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:int(mid range) $arg2 = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-1873914410&quot;) - xs:int(&quot;-2147483648&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>273569238</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractint2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:int(upper bound) $arg2 = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-1&quot;) - xs:int(&quot;-2147483648&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>2147483647</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractint2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-2147483648&quot;) - xs:int(&quot;-1873914410&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-273569238</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractint2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-1&quot;) - xs:int(&quot;2147483647&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-2147483648</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractintg2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:integer(&quot;-999999999999999999&quot;) - xs:integer(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractintg2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:integer(mid range) $arg2 = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:integer(&quot;0&quot;) - xs:integer(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractintg2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:integer(upper bound) $arg2 = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:integer(&quot;0&quot;) - xs:integer(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractintg2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:integer(&quot;-169006502882975695&quot;) - xs:integer(&quot;830993497117024304&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractintg2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:integer(&quot;0&quot;) - xs:integer(&quot;999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdec2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:decimal(&quot;-999999999999999999&quot;) - xs:decimal(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdec2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:decimal(mid range) $arg2 = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:decimal(&quot;0&quot;) - xs:decimal(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdec2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:decimal(upper bound) $arg2 = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:decimal(&quot;0&quot;) - xs:decimal(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdec2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:decimal(&quot;-382624808391485160&quot;) - xs:decimal(&quot;617375191608514839&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdec2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:decimal(&quot;0&quot;) - xs:decimal(&quot;999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdbl2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:double(&quot;-1.7976931348623157E308&quot;) - xs:double(&quot;-1.7976931348623157E308&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdbl2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:double(mid range) $arg2 = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:double(&quot;0&quot;) - xs:double(&quot;-1.7976931348623157E308&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdbl2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:double(upper bound) $arg2 = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:double(&quot;0&quot;) - xs:double(&quot;-1.7976931348623157E308&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdbl2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:double(&quot;-1.7976931348623157E308&quot;) - xs:double(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractdbl2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:double(&quot;0&quot;) - xs:double(&quot;1.7976931348623157E308&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-1.7976931348623157E308</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractflt2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:float(&quot;-3.4028235E38&quot;) - xs:float(&quot;-3.4028235E38&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractflt2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:float(mid range) $arg2 = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:float(&quot;0&quot;) - xs:float(&quot;-3.4028235E38&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>xs:float(3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractflt2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:float(upper bound) $arg2 = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:float(&quot;0&quot;) - xs:float(&quot;-3.4028235E38&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>xs:float(3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractflt2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:float(&quot;-3.4028235E38&quot;) - xs:float(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>xs:float(-3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractflt2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:float(&quot;0&quot;) - xs:float(&quot;3.4028235E38&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>xs:float(-3.4028235E38)</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractlng2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:long(&quot;-92233720368547758&quot;) - xs:long(&quot;-92233720368547758&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractlng2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:long(mid range) $arg2 = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:long(&quot;-47175562203048468&quot;) - xs:long(&quot;-92233720368547758&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>45058158165499290</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractlng2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:long(upper bound) $arg2 = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:long(&quot;0&quot;) - xs:long(&quot;-92233720368547758&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>92233720368547758</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractlng2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:long(&quot;-92233720368547758&quot;) - xs:long(&quot;-47175562203048468&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-45058158165499290</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractlng2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:long(&quot;0&quot;) - xs:long(&quot;92233720368547758&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-92233720368547758</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractusht2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedShort(&quot;0&quot;) - xs:unsignedShort(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractusht2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedShort(mid range) $arg2 = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedShort(&quot;44633&quot;) - xs:unsignedShort(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>44633</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractusht2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedShort(upper bound) $arg2 = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedShort(&quot;65535&quot;) - xs:unsignedShort(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>65535</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractusht2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedShort(&quot;44633&quot;) - xs:unsignedShort(&quot;44633&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractusht2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedShort(&quot;65535&quot;) - xs:unsignedShort(&quot;65535&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnint2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:negativeInteger(lower bound) $arg2 = xs:negativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:negativeInteger(&quot;-999999999999999999&quot;) - xs:negativeInteger(&quot;-297014075999096793&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-702985924000903206</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnint2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:negativeInteger(lower bound) $arg2 = xs:negativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:negativeInteger(&quot;-999999999999999999&quot;) - xs:negativeInteger(&quot;-1&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999998</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractpint2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:positiveInteger(mid range) $arg2 = xs:positiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:positiveInteger(&quot;52704602390610033&quot;) - xs:positiveInteger(&quot;1&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>52704602390610032</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractpint2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:positiveInteger(upper bound) $arg2 = xs:positiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:positiveInteger(&quot;999999999999999999&quot;) - xs:positiveInteger(&quot;1&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999998</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractpint2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:positiveInteger(&quot;52704602390610034&quot;) - xs:positiveInteger(&quot;52704602390610033&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractulng2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedLong(&quot;0&quot;) - xs:unsignedLong(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractulng2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedLong(mid range) $arg2 = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedLong(&quot;130747108607674654&quot;) - xs:unsignedLong(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>130747108607674654</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractulng2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedLong(upper bound) $arg2 = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedLong(&quot;184467440737095516&quot;) - xs:unsignedLong(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>184467440737095516</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractulng2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedLong(&quot;130747108607674654&quot;) - xs:unsignedLong(&quot;130747108607674654&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractulng2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:unsignedLong(&quot;184467440737095516&quot;) - xs:unsignedLong(&quot;184467440737095516&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnpi2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonPositiveInteger(&quot;-999999999999999999&quot;) - xs:nonPositiveInteger(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnpi2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(mid range) $arg2 = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonPositiveInteger(&quot;-999999999999999999&quot;) - xs:nonPositiveInteger(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnpi2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(upper bound) $arg2 = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonPositiveInteger(&quot;-999999999999999999&quot;) - xs:nonPositiveInteger(&quot;-999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnpi2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonPositiveInteger(&quot;-999999999999999999&quot;) - xs:nonPositiveInteger(&quot;-475688437271870490&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-524311562728129509</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnpi2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonPositiveInteger(&quot;-999999999999999999&quot;) - xs:nonPositiveInteger(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnni2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonNegativeInteger(&quot;0&quot;) - xs:nonNegativeInteger(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnni2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(mid range) $arg2 = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonNegativeInteger(&quot;303884545991464527&quot;) - xs:nonNegativeInteger(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>303884545991464527</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnni2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(upper bound) $arg2 = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonNegativeInteger(&quot;999999999999999999&quot;) - xs:nonNegativeInteger(&quot;0&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>999999999999999999</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnni2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonNegativeInteger(&quot;303884545991464527&quot;) - xs:nonNegativeInteger(&quot;303884545991464527&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractnni2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:nonNegativeInteger(&quot;999999999999999999&quot;) - xs:nonNegativeInteger(&quot;999999999999999999&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractsht2args-1">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:short(&quot;-32768&quot;) - xs:short(&quot;-32768&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractsht2args-2">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:short(mid range) $arg2 = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:short(&quot;-5324&quot;) - xs:short(&quot;-32768&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>27444</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractsht2args-3">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:short(upper bound) $arg2 = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:short(&quot;-1&quot;) - xs:short(&quot;-32768&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>32767</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractsht2args-4">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:short(&quot;-32768&quot;) - xs:short(&quot;-5324&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-27444</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractsht2args-5">
    <description> Evaluates The &quot;op:numeric-subtract&quot; operator with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:short(&quot;-1&quot;) - xs:short(&quot;32767&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>-32768</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-1">
    <description> Simple subtraction test with () as one operand should return null </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <test>1 - ()</test>
    <result-string/>
    <result>
      <any-of>
        <assert-empty/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-2">
    <description> Simple subtraction test pass string for second operator </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <test>1 - '1'</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-3">
    <description> Simple subtraction test, second operator cast string to integer </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <test>1 - xs:integer('1')</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-4">
    <description> Simple subtraction test, second operator is a node, atomization applied </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[3 - <a> 2 </a>]]>
    </test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-5">
    <description> Simple subtraction test, second operator is a node, atomization applied </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[3 - <a> <b> 2 </b> </a>]]>
    </test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-6">
    <description> Simple subtraction test, second operator node which is not atomizable </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[3 - <a> <b> 2</b> <c> 2</c> </a>]]>
    </test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FORG0001&quot;))</result-string>
    <result>
      <error code="FORG0001"/>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-7">
    <description> Simple subtraction test, two operands are nodes </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[<a> 2 </a> - <b> 1 </b>]]>
    </test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-8">
    <description> Simple subtraction test, second operator is a node, atomizable but not castable to integer </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1 - <a> x </a>]]>
    </test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FORG0001&quot;))</result-string>
    <result>
      <error code="FORG0001"/>
    </result>
  </test-case>
  <test-case name="op-numeric-subtractmix2args-9">
    <description> Simple subtraction test pass an empty node for second operator </description>
    <created by="Ravindranath Chennoju" on="2004-12-13"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[1 - <a/>]]>
    </test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FORG0001&quot;))</result-string>
    <result>
      <error code="FORG0001"/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-1">
    <description> A test whose essence is: `xs:double(6) - xs:double(2) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:double(6) - xs:double(2) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-2">
    <description> A test whose essence is: `xs:decimal(6) - xs:decimal(2) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:decimal(6) - xs:decimal(2) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-3">
    <description> A test whose essence is: `xs:integer(6) - xs:integer(2) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:integer(6) - xs:integer(2) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-4">
    <description> A test whose essence is: `xs:float(5) - xs:float(1) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:float(5) - xs:float(1) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-5">
    <description> A test whose essence is: `(xs:decimal(6) - xs:integer(2)) instance of xs:decimal`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:decimal(6) - xs:integer(2)) instance of xs:decimal</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-6">
    <description> A test whose essence is: `(xs:integer(6) - xs:decimal(2)) instance of xs:decimal`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:integer(6) - xs:decimal(2)) instance of xs:decimal</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-7">
    <description> A test whose essence is: `(xs:integer(6) - xs:integer(2)) instance of xs:integer`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:integer(6) - xs:integer(2)) instance of xs:integer</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-8">
    <description> A test whose essence is: `(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-9">
    <description> A test whose essence is: `(xs:decimal(6) - xs:float(2)) instance of xs:float`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:decimal(6) - xs:float(2)) instance of xs:float</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-10">
    <description> A test whose essence is: `(xs:float(6) - xs:decimal(2)) instance of xs:float`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:float(6) - xs:decimal(2)) instance of xs:float</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-11">
    <description> A test whose essence is: `(xs:float(6) - xs:integer(2)) instance of xs:float`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:float(6) - xs:integer(2)) instance of xs:float</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-12">
    <description> A test whose essence is: `(xs:integer(6) - xs:float(2)) instance of xs:float`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:integer(6) - xs:float(2)) instance of xs:float</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-13">
    <description> A test whose essence is: `(xs:float(6) - xs:float(2)) instance of xs:float`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:float(6) - xs:float(2)) instance of xs:float</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-14">
    <description> A test whose essence is: `(xs:decimal(6) - xs:double(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:decimal(6) - xs:double(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-15">
    <description> A test whose essence is: `(xs:double(6) - xs:decimal(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:double(6) - xs:decimal(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-16">
    <description> A test whose essence is: `(xs:double(6) - xs:float(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:double(6) - xs:float(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-17">
    <description> A test whose essence is: `(xs:float(6) - xs:double(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:float(6) - xs:double(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-18">
    <description> A test whose essence is: `(xs:double(6) - xs:integer(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:double(6) - xs:integer(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-19">
    <description> A test whose essence is: `(xs:integer(6) - xs:double(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:integer(6) - xs:double(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-20">
    <description> A test whose essence is: `(xs:double(6) - xs:double(2)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:double(6) - xs:double(2)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-21">
    <description> A test whose essence is: `string(xs:float(&quot;NaN&quot;) - 3) eq &quot;NaN&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(xs:float(&quot;NaN&quot;) - 3) eq &quot;NaN&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-22">
    <description> A test whose essence is: `string(xs:double(&quot;NaN&quot;) - 3) eq &quot;NaN&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(xs:double(&quot;NaN&quot;) - 3) eq &quot;NaN&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-23">
    <description> A test whose essence is: `string(3 - xs:float(&quot;NaN&quot;)) eq &quot;NaN&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(3 - xs:float(&quot;NaN&quot;)) eq &quot;NaN&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-24">
    <description> A test whose essence is: `string(3 - xs:double(&quot;NaN&quot;)) eq &quot;NaN&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string(3 - xs:double(&quot;NaN&quot;)) eq &quot;NaN&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-25">
    <description> Invoke the '-' operator with invalid operands. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>&quot;3&quot; - &quot;3&quot;</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-26">
    <description> Invoke the '-' operator with invalid operands. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>xs:untypedAtomic(&quot;3&quot;) - &quot;3&quot;</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-27">
    <description> A test whose essence is: `(xs:untypedAtomic(&quot;3&quot;) - 3) eq 0`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:untypedAtomic(&quot;3&quot;) - 3) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-28">
    <description> A test whose essence is: `(3 - xs:untypedAtomic(&quot;3&quot;)) eq 0`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(3 - xs:untypedAtomic(&quot;3&quot;)) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-29">
    <description> Operand(s) which are the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(() - ())</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-30">
    <description> Operand(s) which are the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(() - xs:float(3))</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-31">
    <description> Operand(s) which are the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(() - xs:double(3))</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-32">
    <description> A test whose essence is: `(xs:untypedAtomic(&quot;3&quot;) - xs:untypedAtomic(&quot;3&quot;)) eq 0`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:untypedAtomic(&quot;3&quot;) - xs:untypedAtomic(&quot;3&quot;)) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-33">
    <description> A test whose essence is: `(xs:untypedAtomic(&quot;3&quot;) - xs:untypedAtomic(&quot;3&quot;)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:untypedAtomic(&quot;3&quot;) - xs:untypedAtomic(&quot;3&quot;)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-34">
    <description> A test whose essence is: `(xs:untypedAtomic(&quot;3&quot;) - 1.1) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(xs:untypedAtomic(&quot;3&quot;) - 1.1) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-35">
    <description> A test whose essence is: `(1.1 - xs:untypedAtomic(&quot;3&quot;)) instance of xs:double`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1.1 - xs:untypedAtomic(&quot;3&quot;)) instance of xs:double</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-36">
    <description> Substracting zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (remove((current-time(), 1), 1) - 0)</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-37">
    <description> Adding zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (remove((current-time(), 1), 1) + 0)</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-NumericSubtract-38">
    <description> Adding zero, with complex operands. Implementations supporting the static typing feature may raise XPTY0004. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>1 eq (0 + remove((current-time(), 1), 1))</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K2-NumericSubtract-1">
    <description> Substract xs:double(0) from xs:integer(0). </description>
    <created by="Frans Englich" on="2007-12-28"/>
    <test>0 - xs:double(0)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="K2-NumericSubtract-2">
    <description> Substract xs:double(0) from xs:integer(0). </description>
    <created by="Frans Englich" on="2007-12-28"/>
    <test>0 - xs:float(0)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="op-numeric-subtract-1">
    <description> Check dynamic type of numeric subtract on arguments of union of numeric types and untypedAtomic. </description>
    <created by="Oliver Hallam" on="2010-03-16"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        for $x in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)) 
        for $y in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)) 
        return typeswitch ($x - $y) 
        case xs:integer return &quot;integer&quot; 
        case xs:decimal return &quot;decimal&quot; 
        case xs:float return &quot;float&quot; 
        case xs:double return &quot;double&quot; 
        default return error()</test>
    <result-string>xs:string('integer decimal float double double decimal decimal float double double float float float double double double double double double double double double double double double')</result-string>
    <result>
      <assert-string-value>integer decimal float double double decimal decimal float double double float float float double double double double double double double double double double double double</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-001">
    <description> test subtraction of large xs:decimal </description>
    <created by="Tim Mills" on="2008-05-14"/>
    <test>-79228162514264337593543950335.0 - 1.0 lt 0.0</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOAR0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-002">
    <description> test subtraction of large xs:integer </description>
    <created by="Tim Mills" on="2008-05-14"/>
    <test>-79228162514264337593543950335 - 1 lt 0</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOAR0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-003">
    <description> test subtraction of xs:decimal 0 </description>
    <created by="Tim Mills" on="2008-05-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:square($arg as xs:decimal) as xs:decimal { $arg * $arg }; 
      	local:square(7.5) - 0.0</test>
    <result-string>xs:string('56.25')</result-string>
    <result>
      <assert-string-value>56.25</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-004">
    <description> test subtraction of xs:integer 0 </description>
    <created by="Tim Mills" on="2008-05-14"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:square($arg as xs:integer) as xs:integer { $arg * $arg }; 
      	local:square(7) - 0</test>
    <result-string>xs:string('49')</result-string>
    <result>
      <assert-string-value>49</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-005">
    <description> ensure that subtracting xs:integers returns an xs:integer </description>
    <created by="Oliver Hallam" on="2008-05-29"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	(local:integer(2) - local:integer(2)) instance of xs:integer</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-006">
    <description> test subtraction of negated integers </description>
    <created by="Tim Mills" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	-(local:integer(2)) - -(local:integer(4))</test>
    <result-string>xs:string('2')</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-007">
    <description> test subtraction of negated integers </description>
    <created by="Tim Mills" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	local:integer(2) - -(local:integer(4))</test>
    <result-string>xs:string('6')</result-string>
    <result>
      <assert-string-value>6</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-numeric-subtract-008">
    <description> test subtraction of negated integers </description>
    <created by="Tim Mills" on="2008-07-01"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      	declare function local:integer($x as xs:decimal) { if ($x mod 1 eq 0) then xs:integer($x) else $x }; 
      	-(local:integer(2)) - local:integer(4)</test>
    <result-string>xs:string('-6')</result-string>
    <result>
      <assert-string-value>-6</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-numeric-subtract-big-01">
    <description> test subtraction of large xs:decimal </description>
    <created by="Andrew Eisenberg" on="2012-10-31"/>
    <modified by="Michael Kay" change="see bug 20473" on="2012-12-21"/>
    <test>(-79228162514264337593543950335.0 - 1.0) cast as xs:string</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>-79228162514264337593543950336</assert-string-value>
        <error code="FOAR0002"/>
      </any-of>
    </result>
  </test-case>
</test-set>