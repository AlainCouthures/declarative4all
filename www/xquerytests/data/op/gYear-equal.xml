<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="op-gYear-equal">
   <description>Tests for the gYear-equal() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-gYear-equal"/>
   <test-case name="op-gYear-equal2args-1">
      <description>
*******************************************************
Test: op-gYear-equal2args-1                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") eq xs:gYear("1970Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-2">
      <description>
*******************************************************
Test: op-gYear-equal2args-2                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(mid range)                            
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("2012Z") eq xs:gYear("1970Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-3">
      <description>
*******************************************************
Test: op-gYear-equal2args-3                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(upper bound)                          
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("2030Z") eq xs:gYear("1970Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-4">
      <description>
*******************************************************
Test: op-gYear-equal2args-4                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(mid range)                            
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") eq xs:gYear("2012Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-5">
      <description>
*******************************************************
Test: op-gYear-equal2args-5                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(upper bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") eq xs:gYear("2030Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-6">
      <description>
*******************************************************
Test: op-gYear-equal2args-6                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") ne xs:gYear("1970Z")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-7">
      <description>
*******************************************************
Test: op-gYear-equal2args-7                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(mid range)                            
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("2012Z") ne xs:gYear("1970Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-8">
      <description>
*******************************************************
Test: op-gYear-equal2args-8                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(upper bound)                          
$arg2 = xs:gYear(lower bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("2030Z") ne xs:gYear("1970Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-9">
      <description>
*******************************************************
Test: op-gYear-equal2args-9                             
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(mid range)                            
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") ne xs:gYear("2012Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal2args-10">
      <description>
*******************************************************
Test: op-gYear-equal2args-10                            
Written By: Carmelo Montanez                            
Date: Tue Apr 12 16:29:07 GMT-05:00 2005                
Purpose: Evaluates The "op:gYear-equal" operator       
 with the arguments set as follows:                    
$arg1 = xs:gYear(lower bound)                          
$arg2 = xs:gYear(upper bound)                          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>xs:gYear("1970Z") ne xs:gYear("2030Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-1">
      <description>
*******************************************************
Test: op-gYear-equal-1                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function          
As per example 1 (for this function)of the F&amp;O specs   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("2005-12:00") eq xs:gYear("2005+12:00"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-2">
      <description>
*******************************************************
Test: op-gYear-equal-2                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function          
As per example 2 (for this function) of the F&amp;O  specs 
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("1976-05:00") eq xs:gYear("1976-05:00"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-3">
      <description>
*******************************************************
Test: op-gYear-equal-3                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function that     
return true and used together with fn:not (eq operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not((xs:gYear("1995Z") eq xs:gYear("1995Z")))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-4">
      <description>
*******************************************************
Test: op-gYear-equal-4                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function that     
return true and used together with fn:not (ne operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYear("2005Z") ne xs:gYear("2006Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-5">
      <description>
*******************************************************
Test: op-gYear-equal-5                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function that     
return false and used together with fn:not (eq operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYear("2000Z") eq xs:gYear("2001Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-6">
      <description>
*******************************************************
Test: op-gYear-equal-6                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function that     
return false and used together with fn:not(ne operator)
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>fn:not(xs:gYear("2005Z") ne xs:gYear("2005Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-7">
      <description>
*******************************************************
Test: op-gYear-equal-7                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "and" expression (eq operator).          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("2000Z") eq xs:gYear("2000Z")) and (xs:gYear("2001Z") eq xs:gYear("2001Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-8">
      <description>
*******************************************************
Test: op-gYear-equal-8                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "and" expression (ne operator).          
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("2000Z") ne xs:gYear("2000Z")) and (xs:gYear("1975Z") ne xs:gYear("1975Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-9">
      <description>
*******************************************************
Test: op-gYear-equal-9                                 
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "or" expression (eq operator).           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("2000Z") eq xs:gYear("2000Z")) or (xs:gYear("1976Z") eq xs:gYear("1976Z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-10">
      <description>
*******************************************************
Test: op-gYear-equal-10                                
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "or" expression (ne operator).           
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("1976Z") ne xs:gYear("1976Z")) or (xs:gYear("1980Z") ne xs:gYear("1980Z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-11">
      <description>
*******************************************************
Test: op-gYear-equal-11                                
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "fn:true"/or expression (eq operator).   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:true())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equalNew-12">
      <description>
*******************************************************
Test: op-gYear-equal-12                                
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "fn:true"/or expression (ne operator).   
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("2000Z") ne xs:gYear("2000Z")) or (fn:true())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-13">
      <description>
*******************************************************
Test: op-gYear-equal-13                                
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "fn:false"/or expression (eq operator).  
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:false())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="op-gYear-equal-14">
      <description>
*******************************************************
Test: op-gYear-equal-14                                
Written By: Carmelo Montanez                           
Date: June 13, 2005                                    
Purpose: Evaluates The "gYear-equal" function used     
together with "fn:false"/or expression (ne operator).  
*******************************************************
</description>
      <created by="Carmelo Montanez" on="2005-06-13"/>
      <test>(xs:gYear("1980Z") ne xs:gYear("1980Z")) or (fn:false())</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-1">
      <description>
*******************************************************
 Test: K-gYearEQ-1                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:gYear, returning positive. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear(" 1956 ") eq xs:gYear("1956")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-2">
      <description>
*******************************************************
 Test: K-gYearEQ-2                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'eq' for xs:gYear.            
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:gYear("1956") eq xs:gYear("1958"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-3">
      <description>
*******************************************************
 Test: K-gYearEQ-3                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:gYear.            
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear("1956") ne xs:gYear("1958")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-4">
      <description>
*******************************************************
 Test: K-gYearEQ-4                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Simple test of 'ne' for xs:gYear.            
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>not(xs:gYear("1956") ne xs:gYear("1956"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-5">
      <description>
*******************************************************
 Test: K-gYearEQ-5                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to Z, in xs:gYear. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear("1956-00:00") eq xs:gYear("1956Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-6">
      <description>
*******************************************************
 Test: K-gYearEQ-6                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset +00:00 is equal to Z, in xs:gYear. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear("1956+00:00") eq xs:gYear("1956Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-7">
      <description>
*******************************************************
 Test: K-gYearEQ-7                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset Z is equal to Z, in xs:gYear. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear("1956Z") eq xs:gYear("1956Z")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K-gYearEQ-8">
      <description>
*******************************************************
 Test: K-gYearEQ-8                                     
 Written by: Frans Englich                             
 Date: 2007-11-22T11:31:21+01:00                       
 Purpose: Test that zone offset -00:00 is equal to +00:00, in xs:gYear. 
*******************************************************
</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>xs:gYear("1956-00:00") eq xs:gYear("1956+00:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   
   <test-case name="cbcl-gYear-equal-001">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($year as xs:integer) { xs:gYear(string(2000 + $year)) }; not(local:gYear(7) eq xs:gYear("2008"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-002">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008+09:01")
            else xs:gYear("2008") eq xs:gYear("2008+09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-003">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") eq xs:gYear("2008")
            else xs:gYear("2008+09:00") eq xs:gYear("2008")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="cbcl-gYear-equal-004">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008-09:01")
            else xs:gYear("2008") eq xs:gYear("2008-09:00")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-005">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") eq xs:gYear("2008")
            else xs:gYear("2008-09:00") eq xs:gYear("2008")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-006">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($year as xs:integer) { xs:gYear(string(2000 + $year)) }; not(local:gYear(7) ne xs:gYear("2008"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-007">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008+09:01")
            else xs:gYear("2008") ne xs:gYear("2008+09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-008">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") ne xs:gYear("2008")
            else xs:gYear("2008+09:00") ne xs:gYear("2008")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-009">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008-09:01")
            else xs:gYear("2008") ne xs:gYear("2008-09:00")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-010">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-16"/>
      <modified by="Tim Mills" on="2013-03-15" change="Bug 21222" />
      <test>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") ne xs:gYear("2008")
            else xs:gYear("2008-09:00") ne xs:gYear("2008")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-011">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($gYear as xs:gYear, $null as xs:boolean) { if ($null) then () else $gYear }; exists(local:gYear(xs:gYear("1972"), fn:true()) eq xs:gYear("1972"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-012">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($gYear as xs:gYear, $null as xs:boolean) { if ($null) then () else $gYear }; local:gYear(xs:gYear("1972"), fn:false()) ne xs:gYear("1972")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-013">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($gYear as xs:gYear, $null as xs:boolean) { if ($null) then () else $gYear }; exists(local:gYear(xs:gYear("1972"), fn:true()) ne xs:gYear("1972"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   

   <test-case name="cbcl-gYear-equal-014">
      <description> test comparison of gYear </description>
      <created by="Tim Mills" on="2008-05-21"/>
      <dependency type="spec" value="XQ10+"/>
      
      <test>declare function local:gYear($gYear as xs:gYear, $null as xs:boolean) { if ($null) then () else $gYear }; local:gYear(xs:gYear("1972"), fn:false()) ne xs:gYear("1972")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
</test-set>
