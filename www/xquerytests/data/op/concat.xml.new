<?xml version="1.0" encoding="UTF-8"?>
<test-set covers="concat-operator" name="op-concat" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the &quot;||&quot; concatenation operator (new in XPath 3.0). 
    Tests adapted from the fn:concat() tests by Michael Kay</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-concat" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <test-case name="op-concatint2args-1">
    <description>
*******************************************************
Test: concatint2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:int(lower bound)                            
$arg2 = xs:int(lower bound)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-2147483648&quot;)||xs:int(&quot;-2147483648&quot;)</test>
    <result-string>xs:string('-2147483648-2147483648')</result-string>
    <result>
      <assert-string-value>-2147483648-2147483648</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatint2args-2">
    <description>
*******************************************************
Test: concatint2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:int(mid range)                              
$arg2 = xs:int(lower bound)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;-1873914410&quot;)||xs:int(&quot;-2147483648&quot;)</test>
    <result-string>xs:string('-1873914410-2147483648')</result-string>
    <result>
      <assert-string-value>-1873914410-2147483648</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatint2args-3">
    <description>
*******************************************************
Test: concatint2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:int(upper bound)                            
$arg2 = xs:int(lower bound)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>xs:int(&quot;2147483647&quot;)||xs:int(&quot;-2147483648&quot;)</test>
    <result-string>xs:string('2147483647-2147483648')</result-string>
    <result>
      <assert-string-value>2147483647-2147483648</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatint2args-4">
    <description>
*******************************************************
Test: concatint2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:int(lower bound)                            
$arg2 = xs:int(mid range)                              
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:int(&quot;-2147483648&quot;)||xs:int(&quot;-1873914410&quot;))</test>
    <result-string>xs:string('-2147483648-1873914410')</result-string>
    <result>
      <assert-string-value>-2147483648-1873914410</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatint2args-5">
    <description>
*******************************************************
Test: concatint2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:int(lower bound)                            
$arg2 = xs:int(upper bound)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:int(&quot;-2147483648&quot;)||xs:int(&quot;2147483647&quot;))</test>
    <result-string>xs:string('-21474836482147483647')</result-string>
    <result>
      <assert-string-value>-21474836482147483647</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatintg2args-1">
    <description>
*******************************************************
Test: concatintg2args-1                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:integer(lower bound)                        
$arg2 = xs:integer(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:integer(&quot;-999999999999999999&quot;)||xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatintg2args-2">
    <description>
*******************************************************
Test: concatintg2args-2                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:integer(mid range)                          
$arg2 = xs:integer(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:integer(&quot;830993497117024304&quot;)||xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('830993497117024304-999999999999999999')</result-string>
    <result>
      <assert-string-value>830993497117024304-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatintg2args-3">
    <description>
*******************************************************
Test: concatintg2args-3                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:integer(upper bound)                        
$arg2 = xs:integer(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:integer(&quot;999999999999999999&quot;)||xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatintg2args-4">
    <description>
*******************************************************
Test: concatintg2args-4                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:integer(lower bound)                        
$arg2 = xs:integer(mid range)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:integer(&quot;-999999999999999999&quot;)||xs:integer(&quot;830993497117024304&quot;))</test>
    <result-string>xs:string('-999999999999999999830993497117024304')</result-string>
    <result>
      <assert-string-value>-999999999999999999830993497117024304</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatintg2args-5">
    <description>
*******************************************************
Test: concatintg2args-5                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:integer(lower bound)                        
$arg2 = xs:integer(upper bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:integer(&quot;-999999999999999999&quot;)||xs:integer(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdec2args-1">
    <description>
*******************************************************
Test: concatdec2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:decimal(lower bound)                        
$arg2 = xs:decimal(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:decimal(&quot;-999999999999999999&quot;)||xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdec2args-2">
    <description>
*******************************************************
Test: concatdec2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:decimal(mid range)                          
$arg2 = xs:decimal(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:decimal(&quot;617375191608514839&quot;)||xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('617375191608514839-999999999999999999')</result-string>
    <result>
      <assert-string-value>617375191608514839-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdec2args-3">
    <description>
*******************************************************
Test: concatdec2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:decimal(upper bound)                        
$arg2 = xs:decimal(lower bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:decimal(&quot;999999999999999999&quot;)||xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdec2args-4">
    <description>
*******************************************************
Test: concatdec2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:decimal(lower bound)                        
$arg2 = xs:decimal(mid range)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:decimal(&quot;-999999999999999999&quot;)||xs:decimal(&quot;617375191608514839&quot;))</test>
    <result-string>xs:string('-999999999999999999617375191608514839')</result-string>
    <result>
      <assert-string-value>-999999999999999999617375191608514839</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdec2args-5">
    <description>
*******************************************************
Test: concatdec2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:decimal(lower bound)                        
$arg2 = xs:decimal(upper bound)                        
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:decimal(&quot;-999999999999999999&quot;)||xs:decimal(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdbl2args-1">
    <description>
*******************************************************
Test: concatdbl2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:double(lower bound)                         
$arg2 = xs:double(lower bound)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:double(&quot;-1.7976931348623157E308&quot;)||xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('-1.7976931348623157E308-1.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>-1.7976931348623157E308-1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdbl2args-2">
    <description>
*******************************************************
Test: concatdbl2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:double(mid range)                           
$arg2 = xs:double(lower bound)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:double(&quot;0&quot;)||xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('0-1.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>0-1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdbl2args-3">
    <description>
*******************************************************
Test: concatdbl2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:double(upper bound)                         
$arg2 = xs:double(lower bound)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:double(&quot;1.7976931348623157E308&quot;)||xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('1.7976931348623157E308-1.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>1.7976931348623157E308-1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdbl2args-4">
    <description>
*******************************************************
Test: concatdbl2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:double(lower bound)                         
$arg2 = xs:double(mid range)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:double(&quot;-1.7976931348623157E308&quot;) || xs:double(&quot;0&quot;))</test>
    <result-string>xs:string('-1.7976931348623157E3080')</result-string>
    <result>
      <assert-string-value>-1.7976931348623157E3080</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatdbl2args-5">
    <description>
*******************************************************
Test: concatdbl2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:double(lower bound)                         
$arg2 = xs:double(upper bound)                         
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:double(&quot;-1.7976931348623157E308&quot;) || xs:double(&quot;1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('-1.7976931348623157E3081.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>-1.7976931348623157E3081.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatflt2args-1">
    <description>
*******************************************************
Test: concatflt2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:float(lower bound)                          
$arg2 = xs:float(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:float(&quot;-3.4028235E38&quot;) || xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:string('-3.4028235E38-3.4028235E38')</result-string>
    <result>
      <assert-string-value>-3.4028235E38-3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatflt2args-2">
    <description>
*******************************************************
Test: concatflt2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:float(mid range)                            
$arg2 = xs:float(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:float(&quot;0&quot;) || xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:string('0-3.4028235E38')</result-string>
    <result>
      <assert-string-value>0-3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatflt2args-3">
    <description>
*******************************************************
Test: concatflt2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:float(upper bound)                          
$arg2 = xs:float(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:float(&quot;3.4028235E38&quot;) || xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:string('3.4028235E38-3.4028235E38')</result-string>
    <result>
      <assert-string-value>3.4028235E38-3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatflt2args-4">
    <description>
*******************************************************
Test: concatflt2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:float(lower bound)                          
$arg2 = xs:float(mid range)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:float(&quot;-3.4028235E38&quot;) || xs:float(&quot;0&quot;))</test>
    <result-string>xs:string('-3.4028235E380')</result-string>
    <result>
      <assert-string-value>-3.4028235E380</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatflt2args-5">
    <description>
*******************************************************
Test: concatflt2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:float(lower bound)                          
$arg2 = xs:float(upper bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:float(&quot;-3.4028235E38&quot;) || xs:float(&quot;3.4028235E38&quot;))</test>
    <result-string>xs:string('-3.4028235E383.4028235E38')</result-string>
    <result>
      <assert-string-value>-3.4028235E383.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatlng2args-1">
    <description>
*******************************************************
Test: concatlng2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:long(lower bound)                           
$arg2 = xs:long(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:long(&quot;-92233720368547758&quot;) || xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:string('-92233720368547758-92233720368547758')</result-string>
    <result>
      <assert-string-value>-92233720368547758-92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatlng2args-2">
    <description>
*******************************************************
Test: concatlng2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:long(mid range)                             
$arg2 = xs:long(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:long(&quot;-47175562203048468&quot;) || xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:string('-47175562203048468-92233720368547758')</result-string>
    <result>
      <assert-string-value>-47175562203048468-92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatlng2args-3">
    <description>
*******************************************************
Test: concatlng2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:long(upper bound)                           
$arg2 = xs:long(lower bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:long(&quot;92233720368547758&quot;) || xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:string('92233720368547758-92233720368547758')</result-string>
    <result>
      <assert-string-value>92233720368547758-92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatlng2args-4">
    <description>
*******************************************************
Test: concatlng2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:long(lower bound)                           
$arg2 = xs:long(mid range)                             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:long(&quot;-92233720368547758&quot;) || xs:long(&quot;-47175562203048468&quot;))</test>
    <result-string>xs:string('-92233720368547758-47175562203048468')</result-string>
    <result>
      <assert-string-value>-92233720368547758-47175562203048468</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatlng2args-5">
    <description>
*******************************************************
Test: concatlng2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:long(lower bound)                           
$arg2 = xs:long(upper bound)                           
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:long(&quot;-92233720368547758&quot;) || xs:long(&quot;92233720368547758&quot;))</test>
    <result-string>xs:string('-9223372036854775892233720368547758')</result-string>
    <result>
      <assert-string-value>-9223372036854775892233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatusht2args-1">
    <description>
*******************************************************
Test: concatusht2args-1                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedShort(lower bound)                  
$arg2 = xs:unsignedShort(lower bound)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedShort(&quot;0&quot;) || xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:string('00')</result-string>
    <result>
      <assert-string-value>00</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatusht2args-2">
    <description>
*******************************************************
Test: concatusht2args-2                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedShort(mid range)                    
$arg2 = xs:unsignedShort(lower bound)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedShort(&quot;44633&quot;) || xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:string('446330')</result-string>
    <result>
      <assert-string-value>446330</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatusht2args-3">
    <description>
*******************************************************
Test: concatusht2args-3                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedShort(upper bound)                  
$arg2 = xs:unsignedShort(lower bound)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedShort(&quot;65535&quot;) || xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:string('655350')</result-string>
    <result>
      <assert-string-value>655350</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatusht2args-4">
    <description>
*******************************************************
Test: concatusht2args-4                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedShort(lower bound)                  
$arg2 = xs:unsignedShort(mid range)                    
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedShort(&quot;0&quot;) || xs:unsignedShort(&quot;44633&quot;))</test>
    <result-string>xs:string('044633')</result-string>
    <result>
      <assert-string-value>044633</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatusht2args-5">
    <description>
*******************************************************
Test: concatusht2args-5                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedShort(lower bound)                  
$arg2 = xs:unsignedShort(upper bound)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedShort(&quot;0&quot;) || xs:unsignedShort(&quot;65535&quot;))</test>
    <result-string>xs:string('065535')</result-string>
    <result>
      <assert-string-value>065535</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnint2args-1">
    <description>
*******************************************************
Test: concatnint2args-1                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:negativeInteger(lower bound)                
$arg2 = xs:negativeInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:negativeInteger(&quot;-999999999999999999&quot;) || xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnint2args-2">
    <description>
*******************************************************
Test: concatnint2args-2                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:negativeInteger(mid range)                  
$arg2 = xs:negativeInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:negativeInteger(&quot;-297014075999096793&quot;) || xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-297014075999096793-999999999999999999')</result-string>
    <result>
      <assert-string-value>-297014075999096793-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnint2args-3">
    <description>
*******************************************************
Test: concatnint2args-3                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:negativeInteger(upper bound)                
$arg2 = xs:negativeInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:negativeInteger(&quot;-1&quot;) || xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-1-999999999999999999')</result-string>
    <result>
      <assert-string-value>-1-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnint2args-4">
    <description>
*******************************************************
Test: concatnint2args-4                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:negativeInteger(lower bound)                
$arg2 = xs:negativeInteger(mid range)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:negativeInteger(&quot;-999999999999999999&quot;) || xs:negativeInteger(&quot;-297014075999096793&quot;))</test>
    <result-string>xs:string('-999999999999999999-297014075999096793')</result-string>
    <result>
      <assert-string-value>-999999999999999999-297014075999096793</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnint2args-5">
    <description>
*******************************************************
Test: concatnint2args-5                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:negativeInteger(lower bound)                
$arg2 = xs:negativeInteger(upper bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:negativeInteger(&quot;-999999999999999999&quot;) || xs:negativeInteger(&quot;-1&quot;))</test>
    <result-string>xs:string('-999999999999999999-1')</result-string>
    <result>
      <assert-string-value>-999999999999999999-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatpint2args-1">
    <description>
*******************************************************
Test: concatpint2args-1                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:positiveInteger(lower bound)                
$arg2 = xs:positiveInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:positiveInteger(&quot;1&quot;) || xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:string('11')</result-string>
    <result>
      <assert-string-value>11</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatpint2args-2">
    <description>
*******************************************************
Test: concatpint2args-2                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:positiveInteger(mid range)                  
$arg2 = xs:positiveInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:positiveInteger(&quot;52704602390610033&quot;) || xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:string('527046023906100331')</result-string>
    <result>
      <assert-string-value>527046023906100331</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatpint2args-3">
    <description>
*******************************************************
Test: concatpint2args-3                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:positiveInteger(upper bound)                
$arg2 = xs:positiveInteger(lower bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:positiveInteger(&quot;999999999999999999&quot;) || xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:string('9999999999999999991')</result-string>
    <result>
      <assert-string-value>9999999999999999991</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatpint2args-4">
    <description>
*******************************************************
Test: concatpint2args-4                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:positiveInteger(lower bound)                
$arg2 = xs:positiveInteger(mid range)                  
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:positiveInteger(&quot;1&quot;) || xs:positiveInteger(&quot;52704602390610033&quot;))</test>
    <result-string>xs:string('152704602390610033')</result-string>
    <result>
      <assert-string-value>152704602390610033</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatpint2args-5">
    <description>
*******************************************************
Test: concatpint2args-5                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:positiveInteger(lower bound)                
$arg2 = xs:positiveInteger(upper bound)                
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:positiveInteger(&quot;1&quot;) || xs:positiveInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('1999999999999999999')</result-string>
    <result>
      <assert-string-value>1999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatulng2args-1">
    <description>
*******************************************************
Test: concatulng2args-1                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedLong(lower bound)                   
$arg2 = xs:unsignedLong(lower bound)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedLong(&quot;0&quot;) || xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:string('00')</result-string>
    <result>
      <assert-string-value>00</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatulng2args-2">
    <description>
*******************************************************
Test: concatulng2args-2                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedLong(mid range)                     
$arg2 = xs:unsignedLong(lower bound)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedLong(&quot;130747108607674654&quot;) || xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:string('1307471086076746540')</result-string>
    <result>
      <assert-string-value>1307471086076746540</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatulng2args-3">
    <description>
*******************************************************
Test: concatulng2args-3                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedLong(upper bound)                   
$arg2 = xs:unsignedLong(lower bound)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedLong(&quot;184467440737095516&quot;) || xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:string('1844674407370955160')</result-string>
    <result>
      <assert-string-value>1844674407370955160</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatulng2args-4">
    <description>
*******************************************************
Test: concatulng2args-4                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedLong(lower bound)                   
$arg2 = xs:unsignedLong(mid range)                     
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedLong(&quot;0&quot;) || xs:unsignedLong(&quot;130747108607674654&quot;))</test>
    <result-string>xs:string('0130747108607674654')</result-string>
    <result>
      <assert-string-value>0130747108607674654</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatulng2args-5">
    <description>
*******************************************************
Test: concatulng2args-5                                 
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:unsignedLong(lower bound)                   
$arg2 = xs:unsignedLong(upper bound)                   
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:unsignedLong(&quot;0&quot;) || xs:unsignedLong(&quot;184467440737095516&quot;))</test>
    <result-string>xs:string('0184467440737095516')</result-string>
    <result>
      <assert-string-value>0184467440737095516</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnpi2args-1">
    <description>
*******************************************************
Test: concatnpi2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonPositiveInteger(lower bound)             
$arg2 = xs:nonPositiveInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonPositiveInteger(&quot;-999999999999999999&quot;) || xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnpi2args-2">
    <description>
*******************************************************
Test: concatnpi2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonPositiveInteger(mid range)               
$arg2 = xs:nonPositiveInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonPositiveInteger(&quot;-475688437271870490&quot;) || xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-475688437271870490-999999999999999999')</result-string>
    <result>
      <assert-string-value>-475688437271870490-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnpi2args-3">
    <description>
*******************************************************
Test: concatnpi2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonPositiveInteger(upper bound)             
$arg2 = xs:nonPositiveInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonPositiveInteger(&quot;0&quot;) || xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('0-999999999999999999')</result-string>
    <result>
      <assert-string-value>0-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnpi2args-4">
    <description>
*******************************************************
Test: concatnpi2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonPositiveInteger(lower bound)             
$arg2 = xs:nonPositiveInteger(mid range)               
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonPositiveInteger(&quot;-999999999999999999&quot;) || xs:nonPositiveInteger(&quot;-475688437271870490&quot;))</test>
    <result-string>xs:string('-999999999999999999-475688437271870490')</result-string>
    <result>
      <assert-string-value>-999999999999999999-475688437271870490</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnpi2args-5">
    <description>
*******************************************************
Test: concatnpi2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonPositiveInteger(lower bound)             
$arg2 = xs:nonPositiveInteger(upper bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonPositiveInteger(&quot;-999999999999999999&quot;) || xs:nonPositiveInteger(&quot;0&quot;))</test>
    <result-string>xs:string('-9999999999999999990')</result-string>
    <result>
      <assert-string-value>-9999999999999999990</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnni2args-1">
    <description>
*******************************************************
Test: concatnni2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonNegativeInteger(lower bound)             
$arg2 = xs:nonNegativeInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonNegativeInteger(&quot;0&quot;) || xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:string('00')</result-string>
    <result>
      <assert-string-value>00</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnni2args-2">
    <description>
*******************************************************
Test: concatnni2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonNegativeInteger(mid range)               
$arg2 = xs:nonNegativeInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonNegativeInteger(&quot;303884545991464527&quot;) || xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:string('3038845459914645270')</result-string>
    <result>
      <assert-string-value>3038845459914645270</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnni2args-3">
    <description>
*******************************************************
Test: concatnni2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonNegativeInteger(upper bound)             
$arg2 = xs:nonNegativeInteger(lower bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonNegativeInteger(&quot;999999999999999999&quot;) || xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:string('9999999999999999990')</result-string>
    <result>
      <assert-string-value>9999999999999999990</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnni2args-4">
    <description>
*******************************************************
Test: concatnni2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonNegativeInteger(lower bound)             
$arg2 = xs:nonNegativeInteger(mid range)               
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonNegativeInteger(&quot;0&quot;) || xs:nonNegativeInteger(&quot;303884545991464527&quot;))</test>
    <result-string>xs:string('0303884545991464527')</result-string>
    <result>
      <assert-string-value>0303884545991464527</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatnni2args-5">
    <description>
*******************************************************
Test: concatnni2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:nonNegativeInteger(lower bound)             
$arg2 = xs:nonNegativeInteger(upper bound)             
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:nonNegativeInteger(&quot;0&quot;) || xs:nonNegativeInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('0999999999999999999')</result-string>
    <result>
      <assert-string-value>0999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatsht2args-1">
    <description>
*******************************************************
Test: concatsht2args-1                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:short(lower bound)                          
$arg2 = xs:short(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:short(&quot;-32768&quot;) || xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:string('-32768-32768')</result-string>
    <result>
      <assert-string-value>-32768-32768</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatsht2args-2">
    <description>
*******************************************************
Test: concatsht2args-2                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:short(mid range)                            
$arg2 = xs:short(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:short(&quot;-5324&quot;) || xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:string('-5324-32768')</result-string>
    <result>
      <assert-string-value>-5324-32768</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatsht2args-3">
    <description>
*******************************************************
Test: concatsht2args-3                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:short(upper bound)                          
$arg2 = xs:short(lower bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:short(&quot;32767&quot;) || xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:string('32767-32768')</result-string>
    <result>
      <assert-string-value>32767-32768</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatsht2args-4">
    <description>
*******************************************************
Test: concatsht2args-4                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:short(lower bound)                          
$arg2 = xs:short(mid range)                            
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:short(&quot;-32768&quot;) || xs:short(&quot;-5324&quot;))</test>
    <result-string>xs:string('-32768-5324')</result-string>
    <result>
      <assert-string-value>-32768-5324</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concatsht2args-5">
    <description>
*******************************************************
Test: concatsht2args-5                                  
Written By: Carmelo Montanez                            
Date: Wed Dec 15 15:41:48 GMT-05:00 2004                
Purpose: Evaluates The &quot;concat&quot; function               
 with the arguments set as follows:                    
$arg1 = xs:short(lower bound)                          
$arg2 = xs:short(upper bound)                          
*******************************************************
</description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>(xs:short(&quot;-32768&quot;) || xs:short(&quot;32767&quot;))</test>
    <result-string>xs:string('-3276832767')</result-string>
    <result>
      <assert-string-value>-3276832767</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-1">
    <description>Evaluation of concat function as per example 1 (for this function) 
 from the FO specs.   
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>('un' ||  'grateful')</test>
    <result-string>xs:string('ungrateful')</result-string>
    <result>
      <assert-string-value>ungrateful</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-2">
    <description>Evaluation of concat function as per example 2 (for this function) 
 from the FO specs.   
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>('Thy ' ||  () ||  'old ' ||  &quot;groans&quot; ||  &quot;&quot; ||  ' ring' ||  ' yet' ||  ' in' ||  ' my' ||  ' ancient' || ' ears.')</test>
    <result-string>xs:string('Thy old groans ring yet in my ancient ears.')</result-string>
    <result>
      <assert-string-value>Thy old groans ring yet in my ancient ears.</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-3">
    <description>Evaluation of concat function as per example 3 (for this function) 
 from the FO specs.   
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>('Ciao!' || ())</test>
    <result-string>xs:string('Ciao!')</result-string>
    <result>
      <assert-string-value>Ciao!</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-4">
    <description>Evaluation of concat function as per example 4 (for this function) 
 from the FO specs.   
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>('Ingratitude, ' ||  'thou ' ||  'marble-hearted' ||  ' fiend!')</test>
    <result-string>xs:string('Ingratitude, thou marble-hearted fiend!')</result-string>
    <result>
      <assert-string-value>Ingratitude, thou marble-hearted fiend!</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-5">
    <description>Evaluation of concat function that uses only upper case letters as part of argument
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;AB&quot; || &quot;CD&quot;)</test>
    <result-string>xs:string('ABCD')</result-string>
    <result>
      <assert-string-value>ABCD</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-6">
    <description>Evaluation of concat function that uses only lower case letters as part of argument
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;abc&quot; || &quot;de&quot;)</test>
    <result-string>xs:string('abcde')</result-string>
    <result>
      <assert-string-value>abcde</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-7">
    <description>Evaluation of concat function that uses both upper and lower case letters as part of argument
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;ABCDE&quot; || &quot;abcde&quot;)</test>
    <result-string>xs:string('ABCDEabcde')</result-string>
    <result>
      <assert-string-value>ABCDEabcde</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-8">
    <description>Evaluation of concat function that uses the empty string as part of argument
 Uses &quot;fn:count&quot; to avoid the empty file  
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:count((&quot;&quot; || &quot;&quot;))</test>
    <result-string>xs:string('1')</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-9">
    <description>Evaluation of concat function that uses the &quot;upper-case&quot; function as part of argument
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(fn:upper-case(&quot;Abc&quot;) || fn:upper-case(&quot;DH&quot;))</test>
    <result-string>xs:string('ABCDH')</result-string>
    <result>
      <assert-string-value>ABCDH</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-10">
    <description>Evaluation of concat function with argument set to &quot;*****&quot;
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;**&quot; || &quot;***&quot;)</test>
    <result-string>xs:string('*****')</result-string>
    <result>
      <assert-string-value>*****</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-11">
    <description>Evaluation of concat function with argument that uses another concat function
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>((&quot;zzz&quot; || &quot;zz&quot;) || &quot;123&quot;)</test>
    <result-string>xs:string('zzzzz123')</result-string>
    <result>
      <assert-string-value>zzzzz123</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-12">
    <description>Evaluation of concat function as an argument to the &quot;fn:boolean&quot; function
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:boolean((&quot;ab&quot; || &quot;cde&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-concat-13">
    <description>Evaluation of concat function as an argument to the &quot;fn:string&quot; function
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string((&quot;abc&quot; || &quot;de&quot;))</test>
    <result-string>xs:string('abcde')</result-string>
    <result>
      <assert-string-value>abcde</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-14">
    <description>Evaluation of concat function as an argument to the &quot;fn:not&quot; function
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:not((&quot;ab&quot; || &quot;cde&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="op-concat-15">
    <description>Evaluation of concat function with argument set to &quot;%$&quot; || #@!&quot;
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;%$&quot; || &quot;#@!&quot;)</test>
    <result-string>xs:string('%$#@!')</result-string>
    <result>
      <assert-string-value>%$#@!</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-16">
    <description>Evaluation of concat function with argument set to &quot;concat&quot; || &quot;concat&quot;
</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;concat&quot; || &quot;concat&quot;)</test>
    <result-string>xs:string('concatconcat')</result-string>
    <result>
      <assert-string-value>concatconcat</assert-string-value>
    </result>
  </test-case>
  <test-case name="op-concat-17">
    <description>Evaluation of concat function as part of a boolean expression</description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>(&quot;abc&quot; || &quot;abc&quot;) and (&quot;abc&quot; || &quot;abc&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="op-concat-18">
    <description>Can't have a function item as an argument to concat</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <modified by="O'Neil Delpratt" change="Bug #19881 - Added HOF dependency" on="2012-11-08"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>(&quot;abc&quot; || &quot;abc&quot; ||  fn:concat#3)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOTY0013&quot;))</result-string>
    <result>
      <error code="FOTY0013"/>
    </result>
  </test-case>
  <test-case name="op-concat-19">
    <description>Concat operator has lower precedence than plus/minus</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>12 || 34 - 50</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;12-16&quot;</assert-eq>
        <assert-type>xs:string</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="op-concat-20">
    <description>Concat operator has higher precedence than eq</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>&quot;1234&quot; eq 12 || 34</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-3">
    <description>
 Purpose: A test whose essence is: `(&quot;ab&quot; ||  &quot;c&quot;) eq &quot;abc&quot;`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(&quot;ab&quot; ||  &quot;c&quot;) eq &quot;abc&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-4">
    <description>
 Purpose: A test whose essence is: `concat(&quot;ab&quot; ||  &quot;c&quot;) instance of xs:string`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(&quot;ab&quot; ||  &quot;c&quot;) instance of xs:string</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-5">
    <description>
 Purpose: A test whose essence is: `concat(() ||  ()) instance of xs:string`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(() ||  ()) instance of xs:string</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-6">
    <description>
 Purpose: A test whose essence is: `concat(() ||  ()) eq &quot;&quot;`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(() ||  ()) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-7">
    <description>
 Purpose: A test whose essence is: `('a' ||  'b' ||  'c' ||  () ||  'd' ||  'e' ||  'f' ||  'g' ||  'h' ||  ' ' ||  'i' ||  'j' ||  'k l') eq &quot;abcdefgh ijk l&quot;`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>('a' ||  'b' ||  'c' ||  () ||  'd' ||  'e' ||  'f' ||  'g' ||  'h' ||  ' ' ||  'i' ||  'j' ||  'k l') eq &quot;abcdefgh ijk l&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-8">
    <description>
 Purpose: A test whose essence is: `(1 ||  2 ||  3) eq &quot;123&quot;`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1 ||  2 ||  3) eq &quot;123&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-ConcatOp-9">
    <description>
 Purpose: A test whose essence is: `(1 ||  &quot;2&quot; ||  3) eq &quot;123&quot;`. 
</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1 ||  &quot;2&quot; ||  3) eq &quot;123&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>