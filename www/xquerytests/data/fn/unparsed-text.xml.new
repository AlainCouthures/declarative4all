<?xml version="1.0" encoding="UTF-8"?>
<test-set covers="fn-unparsed-text" name="fn-unparsed-text" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the unparsed-text() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-unparsed-text" type="spec"/>
  <dependency type="spec" value="XP30+ XQ30+"/>
  <environment name="unparsed-text">
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt">
      <description>UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8-bom.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8-bom.txt">
      <description>UTF-8 encoded plain text with byte order mark.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/text-plain-utf-16le-bom.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-16le-bom.txt">
      <description>Little Endian UTF-16 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/text-plain-utf-16be-bom.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-16be-bom.txt">
      <description>Big Endian UTF-16 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="iso-8859-1" file="unparsed-text/text-plain-iso-8859-1.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-iso-8859-1.txt">
      <description>ISO-8859-1 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8-bom-invalid.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8-invalid.txt">
      <description>A file wrongly claiming to be UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource file="unparsed-text/text-xml-utf-8.xml" media-type="text/xml" uri="http://www.w3.org/fots/unparsed-text/text-xml-utf-8.xml">
      <description>UTF-8 encoded XML.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/text-xml-utf-16.xml" media-type="text/xml" uri="http://www.w3.org/fots/unparsed-text/text-xml-utf-16.xml">
      <description>UTF-16 encoded XML.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="iso-8859" file="unparsed-text/text-xml-iso-8859-1.xml" media-type="text/xml" uri="http://www.w3.org/fots/unparsed-text/text-xml-iso-8859-1.xml">
      <description>ISO-8859-1 encoded XML.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource file="unparsed-text/non-xml-character.txt" uri="http://www.w3.org/fots/unparsed-text/non-xml-character.txt">
      <description>A file containing a non-XML character</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/invalid-xml.xml" media-type="text/xml" uri="http://www.w3.org/fots/unparsed-text/invalid-xml.xml">
      <description>Invalid XML.</description>
      <created by="Tim Mills" on="2012-01-05"/>
      <modified by="O'Neil Delpratt" change="Added the encoding attribute" on="2012-10-16"/>
    </resource>
    <resource file="unparsed-text/unknown-encoding.txt" uri="http://www.w3.org/fots/unparsed-text/unknown-encoding.txt">
      <description>A file with an unknown encoding.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8-lines.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8-lines.txt">
      <description>Multi-line UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8-bom-lines.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8-bom-lines.txt">
      <description>Multi-line UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/text-plain-utf-16le-bom-lines.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-16le-bom-lines.txt">
      <description>Multi-line UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
    <resource encoding="utf-16" file="unparsed-text/text-plain-utf-16be-bom-lines.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-16be-bom-lines.txt">
      <description>Multi-line UTF-16 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
  </environment>
  <environment name="unparsed-text-with-base-uri">
    <static-base-uri uri="http://www.w3.org/fots/unparsed-text/"/>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt">
      <description>UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
  </environment>
  <environment name="unparsed-text-with-base-uri-2">
    <static-base-uri uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt"/>
    <resource encoding="utf-8" file="unparsed-text/text-plain-utf-8.txt" media-type="text/plain" uri="http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt">
      <description>UTF-8 encoded plain text.</description>
      <created by="Tim Mills" on="2012-01-05"/>
    </resource>
  </environment>
  <test-case name="fn-unparsed-text-001">
    <description>Attempts to evaluate the &quot;unparsed-text&quot; function with no arguments.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-002">
    <description>Attempts to reference the &quot;unparsed-text&quot; function with arity zero.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text#0</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-003">
    <description>Attempts to reference the &quot;unparsed-text&quot; function with arity one.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="Tim Mills" change="Context-dependent functions can now be referenced without error." on="2012-05-01"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>fn:exists( fn:unparsed-text#1 )</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-004">
    <description>Attempts to reference the &quot;unparsed-text&quot; function with arity two.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="Tim Mills" change="Context-dependent functions can now be referenced without error." on="2012-05-01"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>fn:exists( fn:unparsed-text#2 )</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-005">
    <description>Attempts to evaluate the &quot;unparsed-text&quot; function with three arguments.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(static-base-uri(), &quot;utf-8&quot;, &quot;&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-006">
    <description>Attempts to reference the &quot;unparsed-text&quot; function with arity three.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text#3</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-007">
    <description>Tests the type checking of the $href argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="feature" value="staticTyping"/>
    <test>fn:unparsed-text( if ( fn:current-dateTime() eq
                                   fn:dateTime( fn:current-date(),
                                                fn:current-time() ))
                              then &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;
                              else 1 )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-008">
    <description>Tests the type checking of the $href argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>( fn:unparsed-text( if (current-date() eq xs:date('1900-01-01'))
                                then &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;
                                else 1 ),
              fn:unparsed-text( if (current-date() eq xs:date('1900-01-01'))
                                then 1
                                else &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;) )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-009">
    <description>Tests the type checking of the $encoding argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <dependency type="feature" value="staticTyping"/>
    <test>fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                              if ( fn:current-dateTime() eq
                                   fn:dateTime( fn:current-date(),
                                                fn:current-time() ))
                               then &quot;utf-8&quot;
                               else 1 )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-010">
    <description>Tests the type checking of the $encoding argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>( fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                                if (current-date() eq xs:date('1900-01-01'))
                                then &quot;utf-8&quot;
                                else 1 ),
              fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                                if (current-date() eq xs:date('1900-01-01'))
                                then 1
                                else &quot;utf-8&quot;) )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-011">
    <description>Tests the type checking of the $encoding argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <dependency type="feature" value="staticTyping"/>
    <test>fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                              if ( fn:current-dateTime() eq
                                   fn:dateTime( fn:current-date(),
                                                fn:current-time() ))
                               then &quot;utf-8&quot;
                               else () )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-012">
    <description>Tests the type checking of the $encoding argument.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>( fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                                if (current-date() eq xs:date('1900-01-01'))
                                then &quot;utf-8&quot;
                                else () ),
              fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;,
                                if (current-date() eq xs:date('1900-01-01'))
                                then ()
                                else &quot;utf-8&quot;) )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-013">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href contains a fragment identifier.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;http://www.example.org/#fragment&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-014">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href contains a fragment identifier.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;http://www.example.org/#fragment&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-015">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an invalid xs:anyURI.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;http://www.example.org/%gg&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-016">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an invalid xs:anyURI.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;http://www.example.org/%gg&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-017">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an invalid xs:anyURI.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;:/&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-018">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an invalid xs:anyURI.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;:/&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-019">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a non-existent file.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/does-not-exist.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-020">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a non-existent file.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text( &quot;http://www.w3.org/fots/unparsed-text/does-not-exist.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-021">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href uses a (probably) unsupported URI scheme.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;surely-nobody-supports-this:/path.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-022">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href uses a (probably) unsupported URI scheme.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <test>fn:unparsed-text(&quot;surely-nobody-supports-this:/path.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-023">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base URI undefined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="#UNDEFINED"/>
    </environment>
    <test>fn:unparsed-text(&quot;unparsed-text/text-plain-utf-8.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0001&quot;))</result-string>
    <result>
      <error code="XPST0001"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-024">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base URI undefined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="#UNDEFINED"/>
    </environment>
    <test>fn:unparsed-text(&quot;unparsed-text/text-plain-utf-8.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0001&quot;))</result-string>
    <result>
      <error code="XPST0001"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-025">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base is defined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/fots/unparsed-text/"/>
    </environment>
    <test>fn:unparsed-text(&quot;does-not-exist.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-026">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base is defined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/fots/unparsed-text/"/>
    </environment>
    <test>fn:unparsed-text(&quot;does-not-exist.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-027">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base is defined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri"/>
    <test>fn:unparsed-text(&quot;text-plain-utf-8.txt&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-028">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a relative URI, static base is defined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri"/>
    <test>fn:unparsed-text(&quot;text-plain-utf-8.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-029">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a Windows file path.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri"/>
    <test>fn:unparsed-text(&quot;C:\file-might-exist.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-030">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is a Windows file path.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri"/>
    <test>fn:unparsed-text(&quot;C:\file-might-exist.txt&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-031">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an empty string.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri-2"/>
    <test>fn:unparsed-text(&quot;&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-032">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an empty string.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text-with-base-uri-2"/>
    <test>fn:unparsed-text(&quot;&quot;, &quot;utf-8&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-033">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an empty string.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/fots/unparsed-text/does-not-exists.txt"/>
    </environment>
    <test>fn:unparsed-text(&quot;&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-034">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href is an empty string.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/fots/unparsed-text/does-not-exists.txt"/>
    </environment>
    <test>fn:unparsed-text(&quot;&quot;, &quot;utf-8&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1170&quot;))</result-string>
    <result>
      <error code="FOUT1170"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-035">
    <description>Test the effect of a call to fn:unparsed-text which need not be evaluated.   Since implementations are allowed to dereference the sources in any case, an error is allowed.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>(1, fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/does-not-exist.txt&quot;))[1]</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>1</assert-string-value>
        <error code="FOUT1170"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-036">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $encoding is invalid.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;, &quot;123&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1190&quot;))</result-string>
    <result>
      <error code="FOUT1190"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-037">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding cannot be determined.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <modified by="Michael Kay" change="added alternative error code as per bug 21885" on="2013-05-01"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/unknown-encoding.txt&quot;)</test>
    <result-string/>
    <result>
      <any-of>
        <error code="FOUT1200"/>
        <error code="FOUT1190"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-038">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is invalid for utf-8.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8-invalid.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1190&quot;))</result-string>
    <result>
      <error code="FOUT1190"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-039">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file which contains non-XML characters.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/non-xml-character.txt&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOUT1190&quot;))</result-string>
    <result>
      <error code="FOUT1190"/>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-040">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file which does not contain well-formed XML.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/invalid-xml.xml&quot;)</test>
    <result-string>xs:string('?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?texthelloworld')</result-string>
    <result>
      <assert-string-value>?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?texthelloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-041">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-8.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8.txt&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-042">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-8.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8-bom.txt&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-043">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-16.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-16le-bom.txt&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-044">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-16.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-16be-bom.txt&quot;)</test>
    <result-string>xs:string('helloworld')</result-string>
    <result>
      <assert-string-value>helloworld</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-045">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid iso-8859-1.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-iso-8859-1.txt&quot;)</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>helloworld</assert-string-value>
        <error code="FOUT1190"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-046">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-8.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-xml-utf-8.xml&quot;)</test>
    <result-string>xs:string('?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?texthelloworld/text')</result-string>
    <result>
      <assert-string-value>?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?texthelloworld/text</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-047">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid utf-16.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-xml-utf-16.xml&quot;)</test>
    <result-string>xs:string('?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?texthelloworld/text')</result-string>
    <result>
      <assert-string-value>?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?texthelloworld/text</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-048">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file whose encoding is valid iso-8859-1.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-xml-iso-8859-1.xml&quot;)</test>
    <result-string/>
    <result>
      <any-of>
        <assert-string-value>?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?texthelloworld/text</assert-string-value>
        <error code="FOUT1190"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-049">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file containing various line endings of the form 0A, x0D, and x0Dx0A.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>string-length(fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8-lines.txt&quot;))</test>
    <result-string>xs:string('400')</result-string>
    <result>
      <assert-string-value>400</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-050">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file containing various line endings of the form 0A, x0D, and x0Dx0A.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>string-length(fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-8-bom-lines.txt&quot;))</test>
    <result-string>xs:string('400')</result-string>
    <result>
      <assert-string-value>400</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-051">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file containing various line endings of the form 0A, x0D, and x0Dx0A.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>string-length(fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-16le-bom-lines.txt&quot;))</test>
    <result-string>xs:string('400')</result-string>
    <result>
      <assert-string-value>400</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-unparsed-text-052">
    <description>Evaluates the &quot;unparsed-text&quot; function with the argument set as follows: $href refers to a file containing various line endings of the form 0A, x0D, and x0Dx0A.</description>
    <created by="Tim Mills" on="2011-11-28"/>
    <environment ref="unparsed-text"/>
    <test>string-length(fn:unparsed-text(&quot;http://www.w3.org/fots/unparsed-text/text-plain-utf-16be-bom-lines.txt&quot;))</test>
    <result-string>xs:string('400')</result-string>
    <result>
      <assert-string-value>400</assert-string-value>
    </result>
  </test-case>
</test-set>