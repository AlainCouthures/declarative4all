<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-namespace-uri-for-prefix" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the namespace-uri-for-prefix() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-namespace-uri-for-prefix" type="spec"/>
  <test-case name="fn-namespace-uri-for-prefix-1">
    <description> Evaluation of fn:namespace-uri-for-prefix function, for which the element is defined 
        and namespace uri is set. Use a direct element. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[let $var := <anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement> 
      return string(fn:namespace-uri-for-prefix("p1",$var))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-2">
    <description> Evaluation of fn:namespace-uri-for-prefix function, for which the element is 
        defined and namespace uri is not set. Use a direct element. Use fn:count to avoid empty sequence. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        let $var := <anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement> 
        return fn:count(fn:namespace-uri-for-prefix("p2",$var))
      ]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="fn-namespace-uri-for-prefix-3">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        set to the zero length string and element is directly constructed. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default element namespace "http://www.example.com/defaultspace"; 
        let $var := <anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement> 
        return fn:string(fn:namespace-uri-for-prefix("",$var))]]>
    </test>
    <result-string>xs:string("http://www.example.com/defaultspace")</result-string>
    <result>
      <assert-string-value>http://www.example.com/defaultspace</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="fn-namespace-uri-for-prefix-4">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        set to the empty sequence and element is directly constructed. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        declare default element namespace "http://www.example.com/defaultspace"; 
        let $var := <anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement> 
        return fn:string(fn:namespace-uri-for-prefix((), $var))]]>
    </test>
    <result-string>xs:string("http://www.example.com/defaultspace")</result-string>
    <result>
      <assert-string-value>http://www.example.com/defaultspace</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-5">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        set to the prefix of a directly constructed element given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix("p1",<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-6">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        set to a non existent prefix of a directly constructed element given as argument. Use fn:count to avaoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:count(fn:namespace-uri-for-prefix("p2",<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-7">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the xs:string function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(xs:string("p1"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-8">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:string function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:string("p1"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-9">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:upper-case function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:upper-case("p1"),<anElement xmlns:P1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-10">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:lower-case function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:lower-case("P1"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-11">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:substring function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:substring("abcp1",4),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-12">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:concat function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:concat("p","1"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-13">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) uses 
        the fn:string-join function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:string-join(("p","1"),""),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-14">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:substring-before function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:substring-before("p1abc","abc"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-15">
    <description> Evaluation of fn:namespace-uri-for-prefix function,with the first argument (prefix) 
        uses the fn:substring-after function. Element is directly constructed and given as argument. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:string(fn:namespace-uri-for-prefix(fn:substring-after("abcp1","abc"),<anElement xmlns:p1 = "http://www.example.com/examples">some context</anElement>))]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-16">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element 
        is directly constructed and given as argument with no namespace. Use fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default element namespace "http://www.example.com/defaultnamespace"; 
        fn:count(fn:namespace-uri-for-prefix("p1",<anElement>some context</anElement>))]]>
    </test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-17">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element is computed and given as argument with no namespace. Use fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare default element namespace "http://www.example.com/defaultnamespace"; 
        fn:count(fn:namespace-uri-for-prefix("p1",element anElement {"some content"}))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-18">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element is computed as variable (via let) with no namespace. Use fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare default element namespace "http://www.example.com/defaultnamespace"; 
        let $var := element anElement {"some content"} 
        return fn:count(fn:namespace-uri-for-prefix("p1",$var))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-19">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element is computed 
        as variable (via for) with no namespace. Use fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare default element namespace "http://www.example.com/defaultnamespace"; 
        for $var in (element anElement {"some content"}) 
        return fn:count(fn:namespace-uri-for-prefix("p1",$var))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-20">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element is computed 
        as variable (via declare variable) with no namespace. Use fn:count to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>declare default element namespace "http://www.example.com/defaultnamespace"; 
        for $var in element anElement {"some content"} 
        return fn:count(fn:namespace-uri-for-prefix("p1",$var))</test>
    <result-string>xs:integer("0")</result-string>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-namespace-uri-for-prefix-21">
    <description> Evaluation of fn:namespace-uri-for-prefix function for which the element is directly constructed 
        and have multiple namespaces. Use fn:string. </description>
    <created by="Carmelo Montanez" on="2005-11-21"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
        fn:string(fn:namespace-uri-for-prefix("p1",
                    <anElement xmlns:p1="http://www.example.com/examples" xmlns:p2="http://www.someotherns.com/namespace">some content"</anElement>
                  ))
      ]]>
    </test>
    <result-string>xs:string("http://www.example.com/examples")</result-string>
    <result>
      <assert-string-value>http://www.example.com/examples</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="fn-namespace-uri-for-prefix-22">
    <description> 
           Evaluation of fn:namespace-uri-for-prefix function for which the prefix is the empty string and the element has no default namespace. 
           The expected behavior for this case was clarified in 3.0.  See bugs 11590, 12554.  
      </description>
    <created by="Josh Spiegel" on="2012-10-02"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:namespace-uri-for-prefix("", <e/>)]]>
    </test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="fn-namespace-uri-for-prefix-23">
    <description> 
           Evaluation of fn:namespace-uri-for-prefix function for which the prefix is the empty sequence and the element has no default namespace. 
           The expected behavior for this case was clarified in 3.0.  See bugs 11590, 12554.  
      </description>
    <created by="Josh Spiegel" on="2012-10-02"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[fn:namespace-uri-for-prefix((), <e/>)]]>
    </test>
    <result-string>()</result-string>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIForPrefixFunc-1">
    <description> A test whose essence is: `namespace-uri-for-prefix()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-for-prefix()</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-NamespaceURIForPrefixFunc-2">
    <description> A test whose essence is: `namespace-uri-for-prefix("string", (), "wrong param")`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>namespace-uri-for-prefix("string", (), "wrong param")</test>
    <result-string>fn:error(fn:QName("http://www.w3.org/2005/xqt-errors", "XPST0017"))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="K2-NamespaceURIForPrefixFunc-1">
    <description> Test that the correct default namespace is picked up. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare namespace p = "http://www.example.com/B"; namespace-uri-for-prefix("", <e xmlns="http://www.example.com/A" xmlns:A="http://www.example.com/C"> <b xmlns:B="http://www.example.com/C" xmlns="http://www.example.com/B"/> </e>/p:b)]]>
    </test>
    <result-string>xs:string("http://www.example.com/B")</result-string>
    <result>
      <assert-string-value>http://www.example.com/B</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="K2-NamespaceURIForPrefixFunc-2">
    <description> Test that the correct default namespace is picked up(#2). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[namespace-uri-for-prefix("", exactly-one(
                      <e xmlns="http://www.example.com/A" xmlns:A="http://www.example.com/C"> <b xmlns:B="http://www.example.com/C" xmlns=""/> </e>/b)
                      )]]>
    </test>
    <result-string>xs:string("")</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="K2-NamespaceURIForPrefixFunc-3">
    <description> Test that the correct default namespace is picked up(#3). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare namespace p = "http://www.example.com/A"; namespace-uri-for-prefix("", <e xmlns="http://www.example.com/A" xmlns:A="http://www.example.com/C"> <b xmlns:B="http://www.example.com/C" /> </e>/p:b)]]>
    </test>
    <result-string>xs:string("http://www.example.com/A")</result-string>
    <result>
      <assert-string-value>http://www.example.com/A</assert-string-value>
    </result>
  </test-case>
  <test-case covers="fn-namespace-uri-for-prefix" name="cbcl-namespace-uri-for-prefix-001">
    <description> Test EBV of fn:namespace-uri-for-prefix </description>
    <created by="Tim Mills" on="2008-05-02"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	fn:boolean(fn:namespace-uri-for-prefix('', <a />))
      ]]>
    </test>
    <result-string>xs:boolean("false")</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
</test-set>