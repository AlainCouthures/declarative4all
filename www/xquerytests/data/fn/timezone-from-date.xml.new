<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-timezone-from-date" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the timezone-from-date() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-timezone-from-date" type="spec"/>
  <test-case name="fn-timezone-from-date-1">
    <description> Evaluates The &quot;timezone-from-date&quot; function As per example 1 of the FO specs </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1999-05-31-05:00&quot;))</test>
    <result-string>xs:string('-PT5H')</result-string>
    <result>
      <assert-string-value>-PT5H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-2">
    <description> Evaluates The &quot;timezone-from-date&quot; function As per example 2 of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;2000-06-12Z&quot;))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-3">
    <description> Evaluates The &quot;timezone-from-date&quot; function involving a &quot;numeric-less-than&quot; operation (lt operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1999-12-31+05:00&quot;)) lt fn:timezone-from-date(xs:date(&quot;1999-12-31+06:00&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-4">
    <description> Evaluates The &quot;timezone-from-date&quot; function involving a &quot;numeric-less-than&quot; operation (le operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1999-12-31+01:00&quot;)) le fn:timezone-from-date(xs:date(&quot;1999-12-31+01:00&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-5">
    <description> Evaluates The &quot;timezone-from-date&quot; function using the empty sequence as an argument. Use count function to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:count(fn:timezone-from-date(()))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-6">
    <description> Evaluates The &quot;timezone-from-date&quot; function that returns a dayTimeDuration of 0. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1999-05-31+00:00&quot;))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-7">
    <description> Evaluates The &quot;timezone-from-date&quot; function that uses a timezone of -0. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1999-12-31-00:00&quot;))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-8">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;+&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-01+08:00&quot;)) + fn:timezone-from-date(xs:date(&quot;1970-01-01+03:00&quot;))</test>
    <result-string>xs:string('PT11H')</result-string>
    <result>
      <assert-string-value>PT11H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-9">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;-&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-01+09:00&quot;)) - fn:timezone-from-date(xs:date(&quot;1970-01-01+10:00&quot;))</test>
    <result-string>xs:string('-PT1H')</result-string>
    <result>
      <assert-string-value>-PT1H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-10">
    <description> Evaluates The &quot;timezone-from-date&quot; function as as an argument to the &quot;not&quot; function. Uses the &quot;fn:string&quot; function to account for new EBV rules. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:not(fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-03+02:00&quot;))))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-11">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;div&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-02+10:00&quot;)) div fn:timezone-from-date(xs:date(&quot;1970-01-01+05:00&quot;))</test>
    <result-string>xs:string('2')</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-12">
    <description> Evaluates The &quot;timezone-from-date&quot; function as an argument to the fn:number function. returns &quot;NaN&quot;. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:number(fn:timezone-from-date(xs:date(&quot;1970-01-02+10:00&quot;)))</test>
    <result-string>xs:string('NaN')</result-string>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-13">
    <description> Evaluates The &quot;timezone-from-date&quot; function as an argument to the &quot;fn:boolean&quot; function. Uses the &quot;fn:string&quot; function to account for new EBV rules. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:boolean(fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-02+10:00&quot;))))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-14">
    <description> Evaluates The &quot;timezone-from-date&quot; function as argument to the &quot;fn:string&quot; function. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-01Z&quot;)))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-15">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of an &quot;and&quot; expression. Uses the &quot;fn:string&quot; function to account for new EBV rules. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-01Z&quot;))) and fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-01Z&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-16">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;numeric-equal&quot; expression (eq operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-02+10:00&quot;)) eq fn:timezone-from-date(xs:date(&quot;1970-01-01+10:00&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-17">
    <description> Evaluates The &quot;month-from-date&quot; function as part of a &quot;numeric-equal&quot; expression (ne operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:month-from-date(xs:date(&quot;1970-01-01+05:00&quot;)) ne fn:month-from-date(xs:date(&quot;1970-01-03+03:00&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-18">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;numeric-equal&quot; expression (le operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-01+04:00&quot;)) le fn:timezone-from-date(xs:date(&quot;1970-01-02+02:00&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-19">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of a &quot;numeric-equal&quot; expression (ge operator) </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:timezone-from-date(xs:date(&quot;1970-01-03+02:00&quot;)) ge fn:timezone-from-date(xs:date(&quot;1970-01-01+01:00&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-timezone-from-date-20">
    <description> Evaluates The &quot;timezone-from-date&quot; function as part of an &quot;or&quot; expression. Uses the &quot;fn:string&quot; function to account for new EBV rules. </description>
    <created by="Carmelo Montanez" on="2005-06-27"/>
    <test>fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-01Z&quot;))) or fn:string(fn:timezone-from-date(xs:date(&quot;1970-01-01Z&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-1">
    <description> A test whose essence is: `timezone-from-date()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-date()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-2">
    <description> A test whose essence is: `timezone-from-date((), &quot;Wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-date((), &quot;Wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-3">
    <description> A test whose essence is: `empty(timezone-from-date(()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(timezone-from-date(()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-4">
    <description> A test whose essence is: `timezone-from-date(()) instance of xs:dayTimeDuration?`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-date(()) instance of xs:dayTimeDuration?</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-5">
    <description> A test whose essence is: `timezone-from-date(xs:date(&quot;2004-10-12Z&quot;)) eq xs:dayTimeDuration(&quot;PT0S&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-date(xs:date(&quot;2004-10-12Z&quot;)) eq xs:dayTimeDuration(&quot;PT0S&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-6">
    <description> A test whose essence is: `timezone-from-date(xs:date(&quot;2004-10-12-08:23&quot;)) eq xs:dayTimeDuration(&quot;-PT8H23M&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-date(xs:date(&quot;2004-10-12-08:23&quot;)) eq xs:dayTimeDuration(&quot;-PT8H23M&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-TimezoneFromDateFunc-7">
    <description> A test whose essence is: `empty(timezone-from-date(xs:date(&quot;2004-10-12&quot;)))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(timezone-from-date(xs:date(&quot;2004-10-12&quot;)))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-001">
    <description> test fn:timezone-from-date on fn:adjust-date-to-timezone </description>
    <created by="Oliver Hallam" on="2008-04-22"/>
    <test>
      timezone-from-date(adjust-date-to-timezone(xs:date(&quot;1997-01-01&quot;))) = implicit-timezone()
   </test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-002">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:timezone($arg as xs:integer) { if ($arg gt 0) then xs:dayTimeDuration(concat('PT', $arg, 'H')) else if ($arg lt 0) then xs:dayTimeDuration(concat('-PT', -$arg, 'H')) else xs:dayTimeDuration('PT0H') };
        timezone-from-date( adjust-date-to-timezone( fn:current-date(), local:timezone(15)))</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODT0003&quot;))</result-string>
    <result>
      <error code="FODT0003"/>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-003">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:timezone($arg as xs:integer) { if ($arg gt 0) then xs:dayTimeDuration(concat('PT', $arg, 'H')) else if ($arg lt 0) then xs:dayTimeDuration(concat('-PT', -$arg, 'H')) else xs:dayTimeDuration('PT0H') };
        timezone-from-date( adjust-date-to-timezone( fn:current-date(), local:timezone(14)))</test>
    <result-string>xs:string('PT14H')</result-string>
    <result>
      <assert-string-value>PT14H</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-004">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:timezone($arg as xs:integer) { if ($arg gt 0) then xs:dayTimeDuration(concat('PT', $arg, 'H')) else if ($arg lt 0) then xs:dayTimeDuration(concat('-PT', -$arg, 'H')) else xs:dayTimeDuration('PT0H') };
        timezone-from-date( adjust-date-to-timezone( fn:current-date(), timezone-from-date( adjust-date-to-timezone( xs:date('1970-01-01'), local:timezone(-12)))))</test>
    <result-string>xs:string('-PT12H')</result-string>
    <result>
      <assert-string-value>-PT12H</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-005">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:date($arg as xs:boolean) { if ($arg) then xs:date('1970-01-01Z') else fn:current-date() };
        timezone-from-date( adjust-date-to-timezone( xs:date('2008-08-01'), timezone-from-date(local:date(true()))))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-006">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:dateTime($arg as xs:boolean) { if ($arg) then xs:dateTime('1970-01-01T00:00:00Z') else fn:current-dateTime() };
        timezone-from-date( adjust-date-to-timezone( xs:date('2008-08-01'), timezone-from-dateTime(local:dateTime(true()))))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-timezone-from-date-007">
    <description> test fn:timezone-from-date </description>
    <created by="Tim Mills" on="2008-06-30"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:time($arg as xs:boolean) { if ($arg) then xs:time('12:00:00Z') else fn:current-time() };
        timezone-from-date( adjust-date-to-timezone( xs:date('2008-08-01'), timezone-from-time(local:time(true()))))</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
</test-set>