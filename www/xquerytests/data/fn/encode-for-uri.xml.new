<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-encode-for-uri" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the encode-for-uri() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-encode-uri" type="spec"/>
  <test-case name="fn-encode-for-uri1args-1">
    <description>Test encode-for-uri from example defined in functions and operators specification </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>fn:encode-for-uri (&quot;http://www.example.com/00/Weather/CA/Los%20Angeles#ocean&quot;)</test>
    <result-string>xs:string(&quot;http%3A%2F%2Fwww.example.com%2F00%2FWeather%2FCA%2FLos%2520Angeles%23ocean&quot;)</result-string>
    <result>
      <assert-string-value>http%3A%2F%2Fwww.example.com%2F00%2FWeather%2FCA%2FLos%2520Angeles%23ocean</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-2">
    <description>Test encode-for-uri from example defined in functions and operators specification </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri(&quot;~bb&quot;)</test>
    <result-string>xs:string(&quot;~b%C3%A9b%C3%A9&quot;)</result-string>
    <result>
      <assert-string-value>~b%C3%A9b%C3%A9</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-3">
    <description>Test encode-for-uri from example defined in functions and operators specification </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri(&quot;100% organic&quot;)</test>
    <result-string>xs:string(&quot;100%25%20organic&quot;)</result-string>
    <result>
      <assert-string-value>100%25%20organic</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-4">
    <description>Test encode-for-uri with zero-length string argument </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri('')</test>
    <result-string>xs:string(&quot;&quot;)</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-5">
    <description>Test encode-for-uri with empty sequence argument </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri(())</test>
    <result-string>xs:string(&quot;&quot;)</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-6">
    <description>Test encode-for-uri with invalid argument type </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri(12)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri1args-7">
    <description>Test encode-for-uri with incorrect arity </description>
    <created by="Joanne Tong" on="2005-09-29"/>
    <test>encode-for-uri('',())</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-1">
    <description> Evaluation of fn-encode-for-uri function with argument thast ha nothing to encode. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;example&quot;))</test>
    <result-string>xs:string(&quot;example&quot;)</result-string>
    <result>
      <assert-string-value>example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-2">
    <description> Examines that fn-encode-for-uri function does escape the &quot;#&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples#example&quot;))</test>
    <result-string>xs:string(&quot;examples%23example&quot;)</result-string>
    <result>
      <assert-string-value>examples%23example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-3">
    <description> Examines that fn-encode-for-uri function does not escape the &quot;-&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples-example&quot;))</test>
    <result-string>xs:string(&quot;examples-example&quot;)</result-string>
    <result>
      <assert-string-value>examples-example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-4">
    <description> Examines that fn-encode-for-uri function does not escape the &quot;_&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples_example&quot;))</test>
    <result-string>xs:string(&quot;examples_example&quot;)</result-string>
    <result>
      <assert-string-value>examples_example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-5">
    <description> Examines that fn-encode-for-uri function does not escape the &quot;.&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples.example&quot;))</test>
    <result-string>xs:string(&quot;examples.example&quot;)</result-string>
    <result>
      <assert-string-value>examples.example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-6">
    <description> Examines that fn-encode-for-uri function does escapes the &quot;!&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples!example&quot;))</test>
    <result-string>xs:string(&quot;examples%21example&quot;)</result-string>
    <result>
      <assert-string-value>examples%21example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-7">
    <description> Examines that fn-encode-for-uri function does not escape the &quot;~&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples~example&quot;))</test>
    <result-string>xs:string(&quot;examples~example&quot;)</result-string>
    <result>
      <assert-string-value>examples~example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-8">
    <description> Examines that fn-encode-for-uri function does escape the &quot;*&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples*example&quot;))</test>
    <result-string>xs:string(&quot;examples%2Aexample&quot;)</result-string>
    <result>
      <assert-string-value>examples%2Aexample</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-9">
    <description> Examines that fn-encode-for-uri function does escape the &quot;'&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples'example&quot;))</test>
    <result-string>xs:string(&quot;examples%27example&quot;)</result-string>
    <result>
      <assert-string-value>examples%27example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-10">
    <description> Examines that fn-encode-for-uri function does escape the &quot;(&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples(example&quot;))</test>
    <result-string>xs:string(&quot;examples%28example&quot;)</result-string>
    <result>
      <assert-string-value>examples%28example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-11">
    <description> Examines that fn-encode-for-uri function does escape the &quot;)&quot; symbol. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples)example&quot;))</test>
    <result-string>xs:string(&quot;examples%29example&quot;)</result-string>
    <result>
      <assert-string-value>examples%29example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-12">
    <description> Examines that fn-encode-for-uri function does not escape numbers. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples0123456789example&quot;))</test>
    <result-string>xs:string(&quot;examples0123456789example&quot;)</result-string>
    <result>
      <assert-string-value>examples0123456789example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-13">
    <description> Examines that fn-encode-for-uri function escapes the space. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples example&quot;))</test>
    <result-string>xs:string(&quot;examples%20example&quot;)</result-string>
    <result>
      <assert-string-value>examples%20example</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-14">
    <description> Examines that fn-encode-for-uri function escapes the &quot;/&quot; character. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;examples/example&quot;))</test>
    <result-string>xs:string(&quot;examples%2Fexample&quot;)</result-string>
    <result>
      <assert-string-value>examples%2Fexample</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-15">
    <description> Examines that fn-encode-for-uri function escapes the &quot;:&quot; character. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;http:examples&quot;))</test>
    <result-string>xs:string(&quot;http%3Aexamples&quot;)</result-string>
    <result>
      <assert-string-value>http%3Aexamples</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-encode-for-uri-16">
    <description> Examines that fn-encode-for-uri function escapes the &quot;%&quot; character. </description>
    <created by="Carmelo Montanez" on="2005-11-23"/>
    <test>(fn:encode-for-uri(&quot;http%20examples&quot;))</test>
    <result-string>xs:string(&quot;http%2520examples&quot;)</result-string>
    <result>
      <assert-string-value>http%2520examples</assert-string-value>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-1">
    <description> A test whose essence is: `encode-for-uri()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>encode-for-uri()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-2">
    <description> A test whose essence is: `encode-for-uri(&quot;http://example.com/&quot;, &quot;wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>encode-for-uri(&quot;http://example.com/&quot;, &quot;wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-3">
    <description> A test whose essence is: `encode-for-uri(()) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>encode-for-uri(()) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-4">
    <description> Combine fn:concat and fn:encode-for-uri. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>concat(&quot;http://www.example.com/&quot;, encode-for-uri(&quot;~bb&quot;)) eq &quot;http://www.example.com/~b%C3%A9b%C3%A9&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-5">
    <description> Combine fn:concat and fn:encode-for-uri. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>concat(&quot;http://www.example.com/&quot;, encode-for-uri(&quot;100% organic&quot;)) eq &quot;http://www.example.com/100%25%20organic&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-EncodeURIfunc-6">
    <description> Invoke fn:normalize-space() on the return value of fn:encode-for-uri(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>normalize-space(encode-for-uri((&quot;some string&quot;, current-time())[1] treat as xs:string))</test>
    <result-string>xs:string(&quot;some%20string&quot;)</result-string>
    <result>
      <assert-string-value>some%20string</assert-string-value>
    </result>
  </test-case>
</test-set>