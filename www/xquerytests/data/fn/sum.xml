<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-sum">
   <description>Tests for the sum() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-sum"/>

   <test-case name="fn-sumint1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-2147483648")))</test>
      <result>
         <assert-eq>-2147483648</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-1873914410")))</test>
      <result>
         <assert-eq>-1873914410</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("2147483647")))</test>
      <result>
         <assert-eq>2147483647</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("830993497117024304")))</test>
      <result>
         <assert-eq>830993497117024304</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("617375191608514839")))</test>
      <result>
         <assert-eq>617375191608514839</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("1.7976931348623157E308")))</test>
      <result>
         <assert-eq>1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("3.4028235E38")))</test>
      <result>
         <assert-eq>xs:float("3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-92233720368547758")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-47175562203048468")))</test>
      <result>
         <assert-eq>-47175562203048468</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("92233720368547758")))</test>
      <result>
         <assert-eq>92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("44633")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("65535")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-297014075999096793")))</test>
      <result>
         <assert-eq>-297014075999096793</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-1")))</test>
      <result>
         <assert-eq>-1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("52704602390610033")))</test>
      <result>
         <assert-eq>52704602390610033</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("130747108607674654")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("184467440737095516")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-475688437271870490")))</test>
      <result>
         <assert-eq>-475688437271870490</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("303884545991464527")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht1args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-32768")))</test>
      <result>
         <assert-eq>-32768</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht1args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-5324")))</test>
      <result>
         <assert-eq>-5324</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht1args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("32767")))</test>
      <result>
         <assert-eq>32767</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(mid range) $zero = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-1873914410"),xs:int("-273569238")))</test>
      <result>
         <assert-eq>-2147483648</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(upper bound) $zero = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("2147483647"),xs:int("-2147483648")))</test>
      <result>
         <assert-eq>-1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(lower bound) $zero = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-273569238"),xs:int("-1873914410")))</test>
      <result>
         <assert-eq>-2147483648</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:int(lower bound) $zero = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-2147483648"),xs:int("2147483647")))</test>
      <result>
         <assert-eq>-1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(mid range) $zero = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</test>
      <result>
         <assert-eq>-169006502882975695</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(upper bound) $zero = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(lower bound) $zero = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</test>
      <result>
         <assert-eq>-169006502882975695</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:integer(lower bound) $zero = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(mid range) $zero = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</test>
      <result>
         <assert-eq>-382624808391485160</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(upper bound) $zero = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(lower bound) $zero = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</test>
      <result>
         <assert-eq>-382624808391485160</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:decimal(lower bound) $zero = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(mid range) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(upper bound) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(lower bound) $zero = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:double(lower bound) $zero = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(mid range) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("0"),xs:float("-3.4028235E38")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(upper bound) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(lower bound) $zero = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38"),xs:float("0")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:float(lower bound) $zero = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(mid range) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(upper bound) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(lower bound) $zero = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:long(lower bound) $zero = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(mid range) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht2args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(mid range) $zero = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) $zero = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-1000000000000000000</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) $zero = xs:negativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-297014075999096793")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) $zero = xs:negativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</test>
      <result>
         <assert-eq>-1000000000000000000</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(mid range) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>52704602390610034</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</test>
      <result>
         <assert-eq>52704602390610034</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint2args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(mid range) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng2args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni2args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht2args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(mid range) $zero = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-5324"),xs:short("-27444")))</test>
      <result>
         <assert-eq>-32768</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht2args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(upper bound) $zero = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("32767"),xs:short("-32768")))</test>
      <result>
         <assert-eq>-1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht2args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(lower bound) $zero = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-27444"),xs:short("-5324")))</test>
      <result>
         <assert-eq>-32768</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht2args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg = xs:short(lower bound) $zero = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-32768"),xs:short("32767")))</test>
      <result>
         <assert-eq>-1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:int(mid range) $arg2 = xs:int(lower bound) $zero = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-1873914410"),xs:int("-273569238"),xs:int("-273569238")))</test>
      <result>
         <assert-eq>-2421052886</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(mid range) $zero = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("-273569238"),xs:int("-1873914410"),xs:int("0")))</test>
      <result>
         <assert-eq>-2147483648</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(lower bound) $zero = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("0"),xs:int("0"),xs:int("-1873914410")))</test>
      <result>
         <assert-eq>-1873914410</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumint3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:int(lower bound) $arg2 = xs:int(lower bound) $zero = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:int("0"),xs:int("0"),xs:int("2147483647")))</test>
      <result>
         <assert-eq>2147483647</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:integer(upper bound) $arg2 = xs:integer(lower bound) $zero = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(upper bound) $zero = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(lower bound) $zero = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("0"),xs:integer("0"),xs:integer("830993497117024304")))</test>
      <result>
         <assert-eq>830993497117024304</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumintg3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:integer(lower bound) $arg2 = xs:integer(lower bound) $zero = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:integer("-999999999999999999"),xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:decimal(upper bound) $arg2 = xs:decimal(lower bound) $zero = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(upper bound) $zero = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(lower bound) $zero = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("0"),xs:decimal("0"),xs:decimal("617375191608514839")))</test>
      <result>
         <assert-eq>617375191608514839</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdec3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:decimal(lower bound) $arg2 = xs:decimal(lower bound) $zero = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(mid range) $arg2 = xs:double(lower bound) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</test>
      <result>
         <any-of>
            <assert-string-value>-INF</assert-string-value>
            <error code="FOAR0002"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(upper bound) $arg2 = xs:double(lower bound) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(mid range) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0"),xs:double("0")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(upper bound) $zero = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</test>
      <result>
         <assert-eq>-1.7976931348623157E308</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(lower bound) $zero = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("0"),xs:double("0"),xs:double("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumdbl3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:double(lower bound) $arg2 = xs:double(lower bound) $zero = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</test>
      <result>
         <any-of>
            <assert-string-value>-INF</assert-string-value>
            <assert-eq>-1.7976931348623157E308</assert-eq>
            <error code="FOAR0002"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(mid range) $arg2 = xs:float(lower bound) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("0"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</test>
      <result>
         <any-of>
            <assert-string-value>-INF</assert-string-value>
            <error code="FOAR0002"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(upper bound) $arg2 = xs:float(lower bound) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(mid range) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38"),xs:float("0"),xs:float("0")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(upper bound) $zero = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</test>
      <result>
         <assert-eq>xs:float("-3.4028235E38")</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(lower bound) $zero = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("0"),xs:float("0"),xs:float("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumflt3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:float(lower bound) $arg2 = xs:float(lower bound) $zero = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:float("-3.4028235E38"),xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</test>
      <result>
         <any-of>
            <assert-string-value>-INF</assert-string-value>
            <assert-eq>xs:float("-3.4028235E38")</assert-eq>
            <error code="FOAR0002"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(mid range) $arg2 = xs:long(lower bound) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290"),xs:long("-45058158165499290")))</test>
      <result>
         <assert-eq>-137291878534047048</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(upper bound) $arg2 = xs:long(lower bound) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758"),xs:long("-92233720368547758")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(mid range) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468"),xs:long("0")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(upper bound) $zero = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758"),xs:long("-92233720368547758")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(lower bound) $zero = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("0"),xs:long("0"),xs:long("-47175562203048468")))</test>
      <result>
         <assert-eq>-47175562203048468</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumlng3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:long(lower bound) $arg2 = xs:long(lower bound) $zero = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:long("-92233720368547758"),xs:long("-92233720368547758"),xs:long("92233720368547758")))</test>
      <result>
         <assert-eq>-92233720368547758</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(mid range) $arg2 = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(upper bound) $arg2 = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(mid range) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(upper bound) $zero = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535"),xs:unsignedShort("0")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("44633")))</test>
      <result>
         <assert-eq>44633</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumusht3args-7">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedShort(lower bound) $arg2 = xs:unsignedShort(lower bound) $zero = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("65535")))</test>
      <result>
         <assert-eq>65535</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:negativeInteger(mid range) $arg2 = xs:negativeInteger(lower bound) $zero = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-702985924000903206")))</test>
      <result>
         <assert-eq>-1702985924000903205</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnint3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:negativeInteger(upper bound) $arg2 = xs:negativeInteger(lower bound) $zero = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-1999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(mid range) $arg2 = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>52704602390610035</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(upper bound) $arg2 = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>1000000000000000000</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(mid range) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>52704602390610035</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(upper bound) $zero = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</test>
      <result>
         <assert-eq>1000000000000000000</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</test>
      <result>
         <assert-eq>52704602390610035</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumpint3args-7">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:positiveInteger(lower bound) $arg2 = xs:positiveInteger(lower bound) $zero = xs:positiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</test>
      <result>
         <assert-eq>1000000000000000000</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(mid range) $arg2 = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(upper bound) $arg2 = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(mid range) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(upper bound) $zero = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</test>
      <result>
         <assert-eq>130747108607674654</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumulng3args-7">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:unsignedLong(lower bound) $arg2 = xs:unsignedLong(lower bound) $zero = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</test>
      <result>
         <assert-eq>184467440737095516</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(mid range) $arg2 = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-524311562728129509")))</test>
      <result>
         <assert-eq>-1524311562728129508</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(upper bound) $arg2 = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</test>
      <result>
         <assert-eq>-1999999999999999998</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(mid range) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("0")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(upper bound) $zero = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</test>
      <result>
         <assert-eq>-999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-475688437271870490")))</test>
      <result>
         <assert-eq>-475688437271870490</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnpi3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonPositiveInteger(lower bound) $arg2 = xs:nonPositiveInteger(lower bound) $zero = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(mid range) $arg2 = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(upper bound) $arg2 = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(mid range) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-5">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(upper bound) $zero = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-6">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</test>
      <result>
         <assert-eq>303884545991464527</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumnni3args-7">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:nonNegativeInteger(lower bound) $arg2 = xs:nonNegativeInteger(lower bound) $zero = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</test>
      <result>
         <assert-eq>999999999999999999</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht3args-1">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:short(mid range) $arg2 = xs:short(lower bound) $zero = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-5324"),xs:short("-27444"),xs:short("-27444")))</test>
      <result>
         <assert-eq>-60212</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht3args-2">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(mid range) $zero = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("-27444"),xs:short("-5324"),xs:short("0")))</test>
      <result>
         <assert-eq>-32768</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht3args-3">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(lower bound) $zero = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("0"),xs:short("0"),xs:short("-5324")))</test>
      <result>
         <assert-eq>-5324</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-sumsht3args-4">
      <description> Evaluates The "sum" function with the arguments set as follows: $arg1 = xs:short(lower bound) $arg2 = xs:short(lower bound) $zero = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:sum((xs:short("0"),xs:short("0"),xs:short("32767")))</test>
      <result>
         <assert-eq>32767</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-1">
      <description> A test whose essence is: `sum()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-2">
      <description> A test whose essence is: `sum(1, 1, "wrong param")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(1, 1, "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-3">
      <description> A test whose essence is: `sum((), 3) eq 3`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((), 3) eq 3</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-4">
      <description> A test whose essence is: `sum((), 3) instance of xs:integer`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((), 3) instance of xs:integer</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-5">
      <description> A test whose essence is: `empty(sum((), ()))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(sum((), ()))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-6">
      <description> A test whose essence is: `sum((), 0.0) instance of xs:decimal`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((), 0.0) instance of xs:decimal</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-7">
      <description> A test whose essence is: `sum((), 0.0) eq 0.0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((), 0.0) eq 0.0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-8">
      <description> A test whose essence is: `sum(()) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(()) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-9">
      <description> A test whose essence is: `sum(()) instance of xs:integer`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(()) instance of xs:integer</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-10">
      <description> A test whose essence is: `sum((-5, -0, -3, -6)) eq -14`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((-5, -0, -3, -6)) eq -14</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-11">
      <description> A test whose essence is: `string(sum((1, 2, 3, xs:float("NaN")))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((1, 2, 3, xs:float("NaN")))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-12">
      <description> A test whose essence is: `string(sum((1, 2, 3, xs:double("NaN")))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((1, 2, 3, xs:double("NaN")))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-13">
      <description> A test whose essence is: `string(sum((xs:double("NaN"), 1, 2, 3))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((xs:double("NaN"), 1, 2, 3))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-14">
      <description> A test whose essence is: `string(sum((xs:float("NaN"), 1, 2, 3))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((xs:float("NaN"), 1, 2, 3))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-15">
      <description> A test whose essence is: `string(sum((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-16">
      <description> A test whose essence is: `string(sum((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>string(sum((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-17">
      <description> A test whose essence is: `sum(xs:untypedAtomic("3")) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(xs:untypedAtomic("3")) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-18">
      <description> A test whose essence is: `sum((1, 2, xs:untypedAtomic("3"))) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((1, 2, xs:untypedAtomic("3"))) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-19">
      <description> A test whose essence is: `sum((1, 2, xs:untypedAtomic("3"))) eq 6`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((1, 2, xs:untypedAtomic("3"))) eq 6</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-20">
      <description> A test whose essence is: `sum((xs:float(1), 2, xs:untypedAtomic("3"))) eq 6`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:float(1), 2, xs:untypedAtomic("3"))) eq 6</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-21">
      <description> A test whose essence is: `sum((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-22">
      <description> fn:sum() having an input sequence whose static type is xs:anyAtomicType. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(remove((1.0, xs:float(1), 2, xs:untypedAtomic("3")), 1)) eq 6</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-23">
      <description> A test whose essence is: `sum("a string")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum("a string")</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-24">
      <description> A test whose essence is: `sum(xs:anyURI("a string"))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(xs:anyURI("a string"))</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-25">
      <description> A test whose essence is: `sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-26">
      <description> A test whose essence is: `sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")), 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")), 3)</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-27">
      <description> A test whose essence is: `sum(((),())) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(((),())) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-28">
      <description> A test whose essence is: `sum(()) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(()) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-29">
      <description> A test whose essence is: `sum((3, 4, 5)) eq 12`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((3, 4, 5)) eq 12</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-30">
      <description> A test whose essence is: `sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P250M")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P250M")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-31">
      <description> A test whose essence is: `sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M")) [. &lt; xs:yearMonthDuration("P3M")], xs:yearMonthDuration("P0M")) eq xs:yearMonthDuration("P0M")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test><![CDATA[sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M")) [. < xs:yearMonthDuration("P3M")], xs:yearMonthDuration("P0M")) eq xs:yearMonthDuration("P0M")]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-32">
      <description> A test whose essence is: `sum((1 to 100)[. &lt; 0], 0) eq 0`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test><![CDATA[sum((1 to 100)[. < 0], 0) eq 0]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqSUMFunc-33">
      <description> A test whose essence is: `sum((xs:yearMonthDuration("P20Y"), (3, 4, 5)))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="K2-SeqSUMFunc-1">
      <description> Pass in an empty sequence as zero. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((), ())</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="K2-SeqSUMFunc-2">
      <description> Ensure the return type is correct when type promotion is required. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-SeqSUMFunc-3">
      <description> Ensure the return type is correct when type promotion is required(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-SeqSUMFunc-4">
      <description> Ensure the return type is properly inferred. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>sum(xs:unsignedShort("1")) instance of xs:unsignedShort</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-sum-1">
      <description> Test fn:sum on a sequence of xs:dayTimeDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT1H"))) instance of xs:dayTimeDuration</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-sum-2">
      <description> Test fn:sum on a sequence of xs:dayTimeDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((), xs:dayTimeDuration("PT0S"))</test>
      <result>
         <assert-string-value>PT0S</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-sum-3">
      <description> Test fn:sum on a sequence of xs:dayTimeDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</test>
      <result>
         <assert-string-value>P2DT7H</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-sum-4">
      <description> Test fn:sum on a sequence of xs:yearMonthDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-sum-5">
      <description> Test fn:sum on a sequence of xs:yearMonthDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((), xs:yearMonthDuration("P0M"))</test>
      <result>
         <assert-string-value>P0M</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-sum-6">
      <description> Test fn:sum on a sequence of xs:yearMonthDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</test>
      <result>
         <assert-string-value>P4Y7M</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-sum-7">
      <description> Test fn:sum on a sequence of xs:yearMonthDuration and xs:dayTimeDuration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</test>
      <result>
         <any-of>
            <error code="FORG0006"/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sum-8">
      <description> Test fn:sum with $zero as xs:duration </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum((), xs:duration("P0M"))</test>
      <result>
         <assert-string-value>PT0S</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-sum-9">
      <description> Test fn:sum on a sequence of xs:duration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum(xs:duration("P1Y1M1D"))</test>
      <result>
         <any-of>
            <error code="FORG0006"/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-sum-10">
      <description> Test fn:sum on a sequence of xs:duration arguments </description>
      <created by="Oliver Hallam" on="2010-03-15"/>
      <test>sum(xs:duration("P1Y1M1D"), xs:duration("PT0S"))</test>
      <result>
         <any-of>
            <error code="FORG0006"/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>
   
   
   <test-case name="cbcl-sum-func-001">
      <description> Test sum(1 to 10) </description>
      <created by="Nick Jones" on="2008-06-10"/>
      <test>sum(1 to 10)</test>
      <result>
         <assert-string-value>55</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-sum-func-002">
      <description> Test sum(foreach) </description>
      <created by="Nick Jones" on="2008-06-10"/>
      <test>sum(for $x in 1 to 10 return 5)</test>
      <result>
         <assert-string-value>50</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-sum-func-003">
      <description> Test sum($x to $y) </description>
      <created by="Nick Jones" on="2008-06-10"/>
      <test>
        for $x in 1 to 10, $y in 1 to 10 return concat('sum(',$x,' to ',$y,') = ',sum($x to $y))
      </test>
      <result>
         <assert-string-value>sum(1 to 1) = 1 sum(1 to 2) = 3 sum(1 to 3) = 6 sum(1 to 4) = 10 sum(1 to 5) = 15 sum(1 to 6) = 21 sum(1 to 7) = 28 sum(1 to 8) = 36 sum(1 to 9) = 45 sum(1 to 10) = 55 sum(2 to 1) = 0 sum(2 to 2) = 2 sum(2 to 3) = 5 sum(2 to 4) = 9 sum(2 to 5) = 14 sum(2 to 6) = 20 sum(2 to 7) = 27 sum(2 to 8) = 35 sum(2 to 9) = 44 sum(2 to 10) = 54 sum(3 to 1) = 0 sum(3 to 2) = 0 sum(3 to 3) = 3 sum(3 to 4) = 7 sum(3 to 5) = 12 sum(3 to 6) = 18 sum(3 to 7) = 25 sum(3 to 8) = 33 sum(3 to 9) = 42 sum(3 to 10) = 52 sum(4 to 1) = 0 sum(4 to 2) = 0 sum(4 to 3) = 0 sum(4 to 4) = 4 sum(4 to 5) = 9 sum(4 to 6) = 15 sum(4 to 7) = 22 sum(4 to 8) = 30 sum(4 to 9) = 39 sum(4 to 10) = 49 sum(5 to 1) = 0 sum(5 to 2) = 0 sum(5 to 3) = 0 sum(5 to 4) = 0 sum(5 to 5) = 5 sum(5 to 6) = 11 sum(5 to 7) = 18 sum(5 to 8) = 26 sum(5 to 9) = 35 sum(5 to 10) = 45 sum(6 to 1) = 0 sum(6 to 2) = 0 sum(6 to 3) = 0 sum(6 to 4) = 0 sum(6 to 5) = 0 sum(6 to 6) = 6 sum(6 to 7) = 13 sum(6 to 8) = 21 sum(6 to 9) = 30 sum(6 to 10) = 40 sum(7 to 1) = 0 sum(7 to 2) = 0 sum(7 to 3) = 0 sum(7 to 4) = 0 sum(7 to 5) = 0 sum(7 to 6) = 0 sum(7 to 7) = 7 sum(7 to 8) = 15 sum(7 to 9) = 24 sum(7 to 10) = 34 sum(8 to 1) = 0 sum(8 to 2) = 0 sum(8 to 3) = 0 sum(8 to 4) = 0 sum(8 to 5) = 0 sum(8 to 6) = 0 sum(8 to 7) = 0 sum(8 to 8) = 8 sum(8 to 9) = 17 sum(8 to 10) = 27 sum(9 to 1) = 0 sum(9 to 2) = 0 sum(9 to 3) = 0 sum(9 to 4) = 0 sum(9 to 5) = 0 sum(9 to 6) = 0 sum(9 to 7) = 0 sum(9 to 8) = 0 sum(9 to 9) = 9 sum(9 to 10) = 19 sum(10 to 1) = 0 sum(10 to 2) = 0 sum(10 to 3) = 0 sum(10 to 4) = 0 sum(10 to 5) = 0 sum(10 to 6) = 0 sum(10 to 7) = 0 sum(10 to 8) = 0 sum(10 to 9) = 0 sum(10 to 10) = 10</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-sum-func-004">
      <description> Tests boolean call to sum </description>
      <created by="Nick Jones" on="2008-06-17"/>
      <test>boolean(sum((1 to 10)[. mod 2 = 0]))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="cbcl-sum-func-005">
      <description> Tests sum of a sum </description>
      <created by="Nick Jones" on="2008-06-17"/>
      <test>sum(sum((1 to 10)[. mod 2 = 0],()))</test>
      <result>
         <assert-string-value>30</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-sum-func-006">
      <description> Tests sum of two integer converts to plus </description>
      <created by="Nick Jones" on="2008-06-17"/>
      <test>sum((1,exactly-one((1 to 10)[. div 2 = 2])))</test>
      <result>
         <assert-string-value>5</assert-string-value>
      </result>
   </test-case>
</test-set>