<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-local-name">
   <description/>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/" idref="func-local-name"/>

   <test-case name="fn-local-name-1">
      <description> Evaluation of the fn:local-name function with an undefined context node and no argument. </description>
      <created by="Carmelo Montanez" on="2005-09-20"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare namespace eg = "http://example.org"; 
        declare function eg:noContextFunction() { fn:local-name() }; 
        eg:noContextFunction()
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-1a">
      <description> Name: fn-local-name-1 Description: Evaluation of the fn:local-name function with
         an undefined context node and no argument. </description>
      <created by="Carmelo Montanez" on="2005-09-20"/>
      <environment ref="empty"/>
      <test>fn:local-name()</test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-2">
      <description> Name: fn-local-name-2 Description: Evaluation of the fn:local-name function with
         context item not a node. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <test>(1 to 100)[fn:local-name()]</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-3">
      <description> Name: fn-local-name-3 Description: Evaluation of the fn:local-name function with
         incorrect arity. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:local-name(/*, /*)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-4">
      <description> Name: fn-local-name-4 Description: Evaluation of the fn:local-name function
         argument set to empty sequence. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:local-name(())</test>
      <result>
         <assert-eq>""</assert-eq>
      </result>
   </test-case>
   <test-case name="fn-local-name-5">
      <description> Name: fn-local-name-5 Description: Evaluation of the fn:local-name function
         argument set to a text node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:local-name((//text())[1])</test>
      <result>
         <assert-eq>""</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-6">
      <description> Evaluation of the fn:local-name function argument set computed comment node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:local-name((comment {"A Comment Node"})))</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-local-name-7">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed comment node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:count(fn:local-name(<!-- A Comment Node -->))]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-8">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed Document node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:count(fn:local-name(document {<aDocument>some content</aDocument>}))]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-local-name-8a">
      <description> Name: fn-local-name-8 Description: Evaluation of the fn:local-name function
         argument set to a Document node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:count(fn:local-name(/))</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-9">
      <description> Evaluation of the fn:local-name function argument set to a computed element node with no prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:string(fn:local-name(element anElement {"Some content"}))</test>
      <result>
         <assert-string-value>anElement</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-10">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with no prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:string(fn:local-name(<anElement>Some content</anElement>))]]></test>
      <result>
         <assert-string-value>anElement</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-11">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with a prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:string(fn:local-name(<p1:anElement xmlns:p1="http://example.com">Some content</p1:anElement>))]]></test>
      <result>
         <assert-string-value>anElement</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-11a">
      <description> Name: fn-local-name-11 Description: Evaluation of the fn:local-name function
         argument set to an element node with a prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:local-name(/*)</test>
      <result>
         <assert-string-value>root</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-12">
      <description> Evaluation of the fn:local-name function argument set to a computed attribute node with no prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:string(fn:local-name(attribute anAttribute {"Attribute Value"}))</test>
      <result>
         <assert-string-value>anAttribute</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-13">
      <description> Evaluation of the fn:local-name function argument set to a computed attribute node with a prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>declare namespace p1 = "http://example.org"; 
        fn:string(fn:local-name(attribute p1:anAttribute {"Attribute Value"}))</test>
      <result>
         <assert-string-value>anAttribute</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-13a">
      <description> Name: fn-local-name-13 Description: Evaluation of the fn:local-name function
         argument set to an attribute node with a prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <environment ref="atomic"/>
      <test>fn:local-name((//@*:attr)[1])</test>
      <result>
         <assert-string-value>attr</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="fn-local-name-14">
      <description> Evaluation of the fn:local-name function argument set to a computed PI node with no prefix. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:string(fn:local-name(processing-instruction PITarget {"PIcontent"}))</test>
      <result>
         <assert-string-value>PITarget</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-15">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed PI node. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:string(fn:local-name(<?format role="output" ?>))]]></test>
      <result>
         <assert-string-value>format</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-16">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with prefix and a declare namespace declaration. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare namespace p1 = "http://example.org"; fn:string(fn:local-name(<p1:anElement>Some content</p1:anElement>))]]></test>
      <result>
         <assert-string-value>anElement</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-17">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with no prefix used as argument to string-length function. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:string-length(fn:string(fn:local-name(<anElement>Some content</anElement>)))]]></test>
      <result>
         <assert-eq>9</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-local-name-18">
      <description> Evaluation of the fn:local-name function argument set to a computed element node with prefix and a declare namespace declaration. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare namespace p1 = "http://example.org"; 
        fn:string(fn:local-name(element p1:anElement{"Some content"}))
      </test>
      <result>
         <assert-string-value>anElement</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-19">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with no prefix used as argument to upper-case function. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:upper-case(fn:string(fn:local-name(<anElement>Some content</anElement>)))]]></test>
      <result>
         <assert-string-value>ANELEMENT</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-20">
      <description> Evaluation of the fn:local-name function argument set to a directly constructed element node with no prefix used as argument to lower-case function. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:lower-case(fn:string(fn:local-name(<anElement>Some content</anElement>)))]]></test>
      <result>
         <assert-string-value>anelement</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-21">
      <description> Evaluation of the fn:local-name function argument set to a computed attribite node with no prefix used as argument to upper-case function. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:upper-case(fn:string(fn:local-name(attribute anAttribute {"Some content"})))</test>
      <result>
         <assert-string-value>ANATTRIBUTE</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-22">
      <description> Evaluation of the fn:local-name function argument set to a computed attribite node with no prefix used as argument to lower-case function. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2005-11-22"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:lower-case(fn:string(fn:local-name(attribute anAttribute {"Some content"})))</test>
      <result>
         <assert-string-value>anattribute</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-local-name-23">
      <description> Evaluation of the fn:local-name function with second argument set to "." and no context node set. Use fn:string. </description>
      <created by="Carmelo Montanez" on="2006-02-07"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare namespace eg = "http://example.org"; 
        declare function eg:noContextFunction() { fn:local-name(.) }; 
        eg:noContextFunction()
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>


   <test-case name="fn-local-name-51">
      <description> Name: fn-local-name-51 Description: Evaluation of the fn:local-name function
         with the argument set to the empty sequence. Uses the fn:string-length function to avoid
         empty file. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="empty"/>
      <test>fn:string-length(fn:local-name(()))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   <test-case name="fn-local-name-52">
      <description> Name: fn-local-name-52 Description: Evaluation of the fn:local-name function
         with the argument set to an element node. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>(fn:local-name(./works[1]/employee[1]))</test>
      <result>
         <assert-string-value>employee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-53">
      <description> Name: fn-local-name-53 Description: Evaluation of the fn:local-name function
         with the argument set to an attribute node. insert-start insert-end </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>(fn:local-name(./works[1]/employee[1]/@name))</test>
      <result>
         <assert-string-value>name</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-54">
      <description> Name: fn-local-name-54 Description: Evaluation of the fn:local-name function
         with the argument set to a document node. Use of "fn:string-length" to avoid empty file.
         insert-start insert-end </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>fn:string-length(fn:local-name(.))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   <test-case name="fn-local-name-55">
      <description> Name: fn-local-name-55 Description: Evaluation of the fn:local-name function
         with the argument set to a non existing element. Use of "fn:string-length" to avoid empty
         file. insert-start insert-end </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>fn:string-length(fn:local-name(./works[1]/nonexistent[1]))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   <test-case name="fn-local-name-56">
      <description> Name: fn-local-name-56 Description: Evaluation of the fn:local-name function
         with the argument set to a non existing element. Use of "fn:string-length" to avoid empty
         file. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in ./works[1]/employee[2] return
         fn:string-length(fn:local-name($h/child::text()[last()]))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   <test-case name="fn-local-name-57">
      <description> Name: fn-local-name-57 Description: Evaluation of the fn:local-name function
         with an undefined context node. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="empty"/>
      <test>fn:local-name()</test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   <test-case name="fn-local-name-58">
      <description> Name: fn-local-name-58 Description: Evaluation of the fn:local-name function
         used as an argument to the fn:upper-case function </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:upper-case(fn:local-name($h))</test>
      <result>
         <assert-string-value>EMPLOYEE</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-59">
      <description> Name: fn-local-name-59 Description: Evaluation of the fn:local-name function
         used as an argument to the fn:lower-case function </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:lower-case(fn:local-name($h))</test>
      <result>
         <assert-string-value>employee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-60">
      <description> Name: fn-local-name-60 Description: Evaluation of the fn:local-name function
         with argument that uses the "parent" axes </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:local-name($h/parent::node())</test>
      <result>
         <assert-string-value>works</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-61">
      <description> Name: fn-local-name-61 Description: Evaluation of the fn:local-name function
         with argument that uses the "descendant" axes </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:local-name($h/descendant::empnum[position() =
         1])</test>
      <result>
         <assert-string-value>empnum</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-62">
      <description> Name: fn-local-name-62 Description: Evaluation of the fn:local-name function
         with argument that uses the "descendant-or-self" axes </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return
         fn:local-name($h/descendant-or-self::empnum[position() = 1])</test>
      <result>
         <assert-string-value>empnum</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-63">
      <description> Name: fn-local-name-63 Description: Evaluation of the fn:local-name function
         used as argument to the fn-subtstring function. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:substring(fn:local-name($h),2)</test>
      <result>
         <assert-string-value>mployee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-64">
      <description> Name: fn-local-name-64 Description: Evaluation of the fn:local-name function
         used as argument to the fn:concat function. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (/works/employee[2]) return fn:concat(fn:local-name($h),"A String")</test>
      <result>
         <assert-string-value>employeeA String</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-65">
      <description> Name: fn-local-name-65 Description: Evaluation of the fn:local-name function
         with argument that uses the "self" axes. Returns a string </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:local-name($h/self::employee)</test>
      <result>
         <assert-string-value>employee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-66">
      <description> Name: fn-local-name-66 Description: Evaluation of the fn:local-name function
         with argument that uses the "self" axes. Returns a empty sequence Uses fn:count to avoid
         empty file. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>for $h in (./works/employee[2]) return fn:count(fn:local-name($h/self::div))</test>
      <result>
         <any-of>
            <assert-string-value>1</assert-string-value>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="fn-local-name-67">
      <description> Name: fn-local-name-67 Description: Evaluation of the fn:local-name function
         with argument that uses the "parent::node()". The context node is an attribute node. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test> for $h in (/works/employee[2]/@name) return fn:local-name($h/parent::node())</test>
      <result>
         <assert-string-value>employee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-68">
      <description> Name: fn-local-name-68 Description: Evaluation of the fn:local-name function as
         an argument to the string-length function. The context node is an attribute node. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>fn:string-length(fn:local-name(./works[1]/employee[2]/@name))</test>
      <result>
         <assert-string-value>4</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-71">
      <description> Name: fn-local-name-71 Description: Evaluation of the fn:local-name function
         used as part of a sequence. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>string-join((fn:local-name(./works[1]/employee[1]),fn:local-name(./works[1]/employee[2])),
         ' ')</test>
      <result>
         <assert-string-value>employee employee</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-72">
      <description> Name: fn-local-name-72 Description: Evaluation of the fn:local-name function as
         argument to fn:count. </description>
      <created by="Carmelo Montanez" on="2005-09-07"/>
      <environment ref="works-mod"/>
      <test>fn:count(((fn:local-name(/works[1]/employee[1]),fn:local-name(/works[1]/employee[2]))))</test>
      <result>
         <assert-string-value>2</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-73">
      <description> Name: fn-local-name-73 Description: Evaluation of the fn:local-name function
         with an undefined context node and argument set to ".". </description>
      <created by="Carmelo Montanez" on="2006-02-08"/>
      <environment ref="empty"/>
      <test>fn:local-name(.)</test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   <test-case name="fn-local-name-74">
      <description> Name: fn-local-name-74 Description: Get the name of an element in a namespace. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name(/*)</test>
      <result>
         <assert-string-value>ma:AuctionWatchList</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-75">
      <description> Name: fn-local-name-75 Description: Get the name of an attribute in a namespace. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//*:Start)[1]/@*)</test>
      <result>
         <assert-string-value>ma:currency</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-76">
      <description> Name: fn-local-name-76 Description: Get the name of the xml:lang attribute. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//@xml:*)[1])</test>
      <result>
         <assert-string-value>xml:lang</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-77">
      <description> Description: Get the name of a namespace node. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <dependency type="feature" value="namespace-axis"/>
      <dependency type="spec" value="XP20+"/>
      <test>name((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</test>
      <result>
         <assert-string-value>xlink</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-78">
      <description> Get the name of a processing-instruction node. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//processing-instruction())[1])</test>
      <result>
         <assert-string-value>xml-stylesheet</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-79">
      <description> Get the name of an element in a default but non-null namespace. </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//*[.='1983'])[1])</test>
      <result>
         <assert-string-value>recorded</assert-string-value>
      </result>
   </test-case>
   <test-case name="fn-local-name-80">
      <description> Get the name of a comment node </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//comment())[1]) = ''</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="fn-local-name-81">
      <description> Get the name of a text node </description>
      <created by="Michael Kay" on="2010-12-10"/>
      <environment ref="auction"/>
      <test>name((//text())[1]) = ''</test>
      <result>
         <assert-true/>
      </result>
   </test-case>


   <test-case name="K-NodeLocalNameFunc-1">
      <description> A test whose essence is: `local-name((), "wrong param")`.</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>local-name((), "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   <test-case name="K-NodeLocalNameFunc-2">
      <description>A test whose essence is: `if(false()) then local-name() else true()`.</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>if(false()) then local-name() else true()</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPDY0002"/>
         </any-of>
      </result>
   </test-case>
   <test-case name="K-NodeLocalNameFunc-3">
      <description>A test whose essence is: `local-name(()) eq ""`.</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <test>local-name(()) eq ""</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   <test-case name="K2-NodeLocalNameFunc-1">
      <description> Call fn:local-name() on an attribute node.</description>
      <created by="Frans Englich" on="2007-11-26+01:00"/>
      <environment ref="works-mod"/>
      <test>local-name(/works/employee[1]/@name)</test>
      <result>
         <assert-string-value>name</assert-string-value>
      </result>
   </test-case>
</test-set>