<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-idref" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the idref() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-idref" type="spec"/>
  <environment name="id-idref-dtd">
    <source file="id/iddtd.xml" role=".">
      <description>A DTD validated xml file, that contains data for the ID/IDREF function tests.</description>
      <created by="Carmelo Montanez" on="2000-01-01"/>
    </source>
  </environment>
  <environment name="functx_book">
    <source file="../app/FunctxFn/functx_book.xml" role=".">
      <description/>
      <created by="Frans Englich" on="2008-06-25"/>
    </source>
  </environment>
  <test-case name="fn-idref-1">
    <description>Evaluation of fn:idref with incorrect arity.</description>
    <created by="Carmelo Montanez" on="2005-11-28"/>
    <environment ref="id-idref-dtd"/>
    <test>fn:idref(&quot;argument 1&quot;, / ,&quot;Argument 3&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="fn-idref-2">
    <description> Evaluation of fn:idref with context item not a node. </description>
    <created by="Carmelo Montanez" on="2005-11-28"/>
    <modified by="O'Neil Delpratt" change="Error code in the result" on="2011-09-09"/>
    <test>(1 to 10)[fn:idref(&quot;argument1&quot;)]</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-idref-3">
    <description> Evaluation of fn:idref with second argument not a node. </description>
    <created by="Carmelo Montanez" on="2005-11-28"/>
    <test>fn:idref(&quot;argument1&quot;, &quot;A&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-idref-4">
    <description> Evaluation of fn:idref with node not being from document where root is the document element. </description>
    <created by="Carmelo Montanez" on="2005-11-28"/>
    <modified by="Michael Kay" change="remove dependency on special fots:copy() function" on="2011-08-10"/>
    <environment ref="works-mod"/>
    <module file="id/copy.xq" uri="http://www.w3.org/QT3/copy"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        import module namespace copy=&quot;http://www.w3.org/QT3/copy&quot;;
        let $var := copy:copy(/*) return fn:idref(&quot;argument1&quot;, $var)
      </test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODC0001&quot;))</result-string>
    <result>
      <error code="FODC0001"/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-5">
    <description> Evaluation of fn:idref with given ID matching a single element. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(&quot;id1&quot;,/IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-6">
    <description> Evaluation of fn:idref with given ID not matching a single element. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <environment ref="id-idref-dtd"/>
    <test>fn:idref(&quot;nomatchingid&quot;, /IDS[1])</test>
    <result-string/>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-7">
    <description> Evaluation of fn:idref with given ID matching multiple elements. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(&quot;id4&quot;, /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-4')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-4</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-8">
    <description> Evaluation of fn:idref function, which attempts to create element with two attributes with same name. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="spec" value="XQ10+"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>
      <![CDATA[<results>{fn:idref(("id1", "id2"), /IDS[1])}</results>]]>
    </test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQDY0025&quot;))</result-string>
    <result>
      <error code="XQDY0025"/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-9">
    <description> Evaluation of fn:idref with multiple ID, but only one matching one element. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref((&quot;id1&quot;, &quot;nomatching&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-10">
    <description> Evaluation of fn:idref with multiple ID, but none matching one element. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <environment ref="id-idref-dtd"/>
    <test>fn:count(fn:idref(&quot;nomatching1 nomatching2&quot;, /IDS[1]))</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-11">
    <description> Evaluation of fn:idref with ID set to empty string. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <environment ref="id-idref-dtd"/>
    <test>fn:count(fn:idref(&quot;&quot;, /IDS[1]))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-12">
    <description> Evaluation of fn:idref used as an argument to function fn:node-name() </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:node-name(fn:idref(&quot;id2&quot;, /IDS[1]))</test>
    <result-string>xs:string('anIdRef')</result-string>
    <result>
      <assert-string-value>anIdRef</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-13">
    <description> Evaluation of fn:idref used as part of a node expression (&quot;is&quot; operand). Compare same elements. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>(fn:idref(&quot;id1&quot;, /IDS[1])) is (fn:idref(&quot;id1&quot;, /IDS[1]))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-14">
    <description> Evaluation of fn:idref used as part of a node expression (&quot;is&quot; operand). Compare different elements. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>(fn:idref(&quot;id1&quot;, /IDS[1])) is (fn:idref(&quot;id2&quot;, /IDS[1]))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-15">
    <description> Evaluation of fn:idref for which ID list have the same value for all its members. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>count(fn:idref((&quot;id1&quot;,&quot;id1&quot;), /IDS[1]))</test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-16">
    <description> Evaluation of fn:idref for which ID list have the same value for all its members but different case. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>count(fn:idref((&quot;id1&quot;,&quot;ID1&quot;), /IDS[1]))</test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-17">
    <description> Evaluation of fn:idref for which ID uses the fn lower case function. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(fn:lower-case(&quot;ID1&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-18">
    <description> Evaluation of fn:idref for which ID uses the fn:upper-case function. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(fn:upper-case(&quot;id5&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-6')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-6</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-19">
    <description> Evaluation of fn:idref for which $arg uses the fn:concat function. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(fn:concat(&quot;i&quot;,&quot;d1&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-20">
    <description> Evaluation of fn:idref for which $arg uses the xs:string function. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(xs:string(&quot;id1&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-21">
    <description> Evaluation of fn:idref for which $arg uses the fn:string-join function. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(fn:string-join((&quot;id&quot;,&quot;1&quot;),&quot;&quot;), /IDS[1])/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-idref-22">
    <description> Evaluation of fn:idref with context item not a node and second argument set to &quot;.&quot;. </description>
    <created by="Carmelo Montanez" on="2006-02-08"/>
    <environment ref="empty"/>
    <test>fn:idref(&quot;argument1&quot;,.)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPDY0002&quot;))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-23">
    <description> Evaluation of fn:idref with declare ordering. </description>
    <created by="Carmelo Montanez" on="2006-06-23"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="spec" value="XQ30+"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>
      <![CDATA[declare ordering ordered;  
        <results>{fn:idref("id4", /IDS[1])}</results>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<results anIdRef="id4"/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-24">
    <description> Evaluation of fn:idref, where an IDREFS node contains multiple IDREFs. For errata FO.E29. </description>
    <created by="Bogdan Butnaru" on="2009-11-18"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="functx_book"/>
    <dependency type="spec" value="XQ10+"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>
      <![CDATA[<results>{fn:idref("language", /)}</results>]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<results refs='context language'/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="fn-idref-dtd-25">
    <description>Evaluation of fn:idref with no second argument.</description>
    <created by="Michael Kay" on="2011-06-30"/>
    <modified by="Michael Kay" change="add dependency as per bug 21414" on="2013-05-01"/>
    <environment ref="id-idref-dtd"/>
    <dependency type="feature" value="infoset-dtd"/>
    <test>fn:idref(&quot;id1&quot;)/name(..)</test>
    <result-string>xs:string('elementwithidrefattr-1')</result-string>
    <result>
      <assert-string-value>elementwithidrefattr-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="K2-SeqIDREFFunc-1">
    <description> Wrong arguments to fn:idref(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>idref((), ())</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K2-SeqIDREFFunc-2">
    <description> Wrong arguments to fn:idref(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, 3)[idref(&quot;ncname&quot;, .)]</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K2-SeqIDREFFunc-3">
    <description> Wrong arguments to fn:idref(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(1, 2, 3)[idref(&quot;ncname&quot;)]</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="cbcl-idref-001">
    <description> test fn:idref on the empty sequence </description>
    <created by="Tim Mills" on="2008-04-15"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	declare function local:generate($arg as xs:integer?) as xs:string* { if ($arg = 0) then () else 'id1', 'id2' }; 
      	let $doc := document { <root /> } return fn:empty( fn:idref( local:generate(0), $doc) )
      ]]>
    </test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-idref-002">
    <description> test fn:idref on the empty sequence </description>
    <created by="Tim Mills" on="2008-04-15"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	let $doc := document { <root /> } return fn:empty( fn:idref( (), $doc) )
      ]]>
    </test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPST0005"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="cbcl-idref-003">
    <description> test fn:idref in an axis expression </description>
    <created by="Tim Mills" on="2008-04-15"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[
      	declare function local:generate($arg as xs:integer?) as xs:string* { if ($arg = 0) then () else 'id1', 'id2' }; 
      	let $doc := document { <root /> } return fn:empty( $doc/fn:idref( local:generate(0)) )
      ]]>
    </test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>