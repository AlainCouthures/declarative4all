<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-remove">
   <description>Tests for the remove() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-remove"/>

   <test-case name="fn-remove-mix-args-001">
      <description> arg1: sequence of string, arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove ( ("a", "b", "c"), 1)</test>
      <result>
         <assert-deep-eq>"b", "c"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-002">
      <description> arg1: sequence of string, arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove ( ("a", "b", "c"), 0)</test>
      <result>
         <assert-deep-eq>"a", "b", "c"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-003">
      <description> arg1: sequence of string, arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove ( ("a", "b", "c", true()), 3)</test>
      <result>
         <assert-deep-eq>"a", "b", true()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-004">
      <description> arg1: sequence of string, arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove ( (xs:string("xyz"), (), (), "a" , "b"), 2)</test>
      <result>
         <assert-deep-eq>"xyz", "b"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-005">
      <description> arg1: sequence of string,anyURI,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 2)</test>
      <result>
         <assert-deep-eq>"www.example.com", "", "b"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-006">
      <description> arg1: sequence of string,anyURI,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 10)</test>
      <result>
         <assert-deep-eq>"www.example.com", "a", "",  "b"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-007">
      <description> arg1: sequence of string,anyURI,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), -20)</test>
      <result>
         <assert-deep-eq>"www.example.com", "a", "",  "b"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-008">
      <description> arg1:sequence of string,integer,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:integer("100"), xs:string("abc")), 1)</test>
      <result>
         <assert-eq>"abc"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-009">
      <description> arg1: sequence of decimal, integer, anyURI arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com")),3)</test>
      <result>
         <assert-deep-eq>1.01, 12</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-010">
      <description> arg1: sequence of string,float ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:float("1.01"), xs:string("a")), 2)</test>
      <result>
         <assert-eq>1.01</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-011">
      <description> arg1: sequence of float,integer,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:float("NaN"), 100, (), 2), 2)</test>
      <result>
         <assert-deep-eq>xs:float('NaN'), 2</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-012">
      <description> arg1: sequence of string,float, decimal arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:float("-INF"), xs:decimal("2.34"), "abc"), 2)</test>
      <result>
         <assert-deep-eq>xs:float("-INF"), "abc"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-013">
      <description> arg1: sequence of double,float,boolean ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:double("1.34"), xs:float("INF"), true()), 1)</test>
      <result>
         <assert-deep-eq>xs:float("INF"), true()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-014">
      <description> arg1: sequence of double, integer ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:double("INF"), 2, 3), 2)</test>
      <result>
         <assert-deep-eq>xs:double("INF"), 3</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-015">
      <description> arg1: sequence of string,double ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:double("NaN"), "a", "b"), 3)</test>
      <result>
         <assert-deep-eq>xs:double("NaN"), "a"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-016">
      <description> arg1: sequence of string,boolean, double ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:boolean("1"), xs:double("-INF"), "s"), 3)</test>
      <result>
         <assert-deep-eq>true(), xs:double("-INF")</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-017">
      <description> arg1: sequence of boolean ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:boolean("0")), 2 )</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-018">
      <description> arg1: sequence of string,boolean, date ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a"),3)</test>
      <result>
         <assert-deep-eq>true(), xs:date('1993-03-31'), "a"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-019">
      <description> arg1: sequence of string,dateTime,boolean ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ,3)</test>
      <result>
         <assert-deep-eq>xs:dateTime("1972-12-31T00:00:00"), false()</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="fn-remove-mix-args-020">
      <description> arg1: sequence of time,decimal, integer ,arg2: integer </description>
      <created by="Pulkita Tyagi" on="2005-05-26"/>
      <test>fn:remove( (xs:time("12:30:00"), xs:decimal("2.000003"), 2), 2)</test>
      <result>
         <assert-deep-eq>xs:time("12:30:00"), 2</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-1">
      <description> A test whose essence is: `remove()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-2">
      <description> A test whose essence is: `remove(1, 2, "wrong param")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove(1, 2, "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-3">
      <description> A test whose essence is: `count(remove((1, 2, 3), 0)) eq 3`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove((1, 2, 3), 0)) eq 3</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-4">
      <description> A test whose essence is: `count(remove((1, 2, 3), -4)) eq 3`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove((1, 2, 3), -4)) eq 3</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-5">
      <description> A test whose essence is: `empty(remove((), 4))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(remove((), 4))</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-6">
      <description> A test whose essence is: `remove(("one", 2, 3), 1) instance of xs:integer+`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove(("one", 2, 3), 1) instance of xs:integer+</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-7">
      <description> A test whose essence is: `remove((1, "two", 3), 2) instance of xs:integer+`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((1, "two", 3), 2) instance of xs:integer+</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-8">
      <description> A test whose essence is: `remove((1, 2, "three"), 3) instance of xs:integer+`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((1, 2, "three"), 3) instance of xs:integer+</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-9">
      <description> A test whose essence is: `count(remove(("one", 2, 3), 1)) eq 2`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove(("one", 2, 3), 1)) eq 2</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-10">
      <description> A test whose essence is: `count(remove((1, "two", 3), 2)) eq 2`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove((1, "two", 3), 2)) eq 2</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-11">
      <description> A test whose essence is: `count(remove((1, 2, "three"), 3)) eq 2`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove((1, 2, "three"), 3)) eq 2</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-12">
      <description> A test whose essence is: `remove((3.1, "four"), 1)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((3.1, "four"), 1)</test>
      <result>
         <assert-eq>"four"</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-13">
      <description> A test whose essence is: `remove(error(), 1)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove(error(), 1)</test>
      <result>
         <any-of>
            <error code="FOER0000"/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-14">
      <description> Combine fn:remove() with operator 'eq'. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((5, 1e0), 2) eq 5</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-15">
      <description> Combine fn:remove() with operator 'eq'. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>5 eq remove((5, 1e0), 2)</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPTY0004"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-16">
      <description> Combine remove(), with a predicate and the 'eq' operator. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>deep-equal((1, 2), (1, 2)[remove((true(), "a string"), 2)]) eq 0</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-17">
      <description> Combine fn:remove() with operator 'eq'. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((4, xs:untypedAtomic("4")), 1) eq 4</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-18">
      <description> Combine fn:remove() with operator 'eq'. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>4 eq remove((4, xs:untypedAtomic("1")), 1)</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-19">
      <description> An expression involving the eq operator that trigger certain optimization paths in some implementations. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(remove(current-time(), 1)) eq 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-20">
      <description> An expression involving the eq operator that trigger certain optimization paths in some implementations. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(remove(current-time(), 1))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-21">
      <description> Apply a predicate to the result of fn:remove(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((1, 2, 3, current-time()), 4)[last()]</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-22">
      <description> Apply a predicate to the result of fn:remove(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((1, 2, 3, current-time()), 4)[last() - 1]</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-23">
      <description> Apply a predicate to the result of fn:remove(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>remove((1, 2, 3, current-time()), 9)[last() - 1]</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SeqRemoveFunc-24">
      <description> Apply a predicate to the result of fn:remove(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(remove((1, 2, 3, current-time()), 9)[last() - 10])</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="cbcl-fn-remove-001">
      <description> Tests with non-value position </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>remove(1 to 10,exactly-one((1 to 10)[. div 2 = 2]))</test>
      <result>
         <assert-string-value>1 2 3 5 6 7 8 9 10</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-fn-remove-002">
      <description> Tests removal from range value </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>remove(1 to 10,4)</test>
      <result>
         <assert-string-value>1 2 3 5 6 7 8 9 10</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-fn-remove-003">
      <description> Tests removal from non-range value </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>remove((1 to 10)[. mod 2 = 0],4)</test>
      <result>
         <assert-string-value>2 4 6 10</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-fn-remove-004">
      <description> Tests removal from a sequence of values </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>
        remove(((1 to 10)[. mod 2 = 0],"blah",(1 to 10)[. mod 2 = 0]),4)
      </test>
      <result>
         <assert-string-value>2 4 6 10 blah 2 4 6 8 10</assert-string-value>
      </result>
   </test-case>
</test-set>