<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-tail" covers="fn-tail">
   <description>Tests for the tail() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-head"/>
   <dependency type="spec" value="XP30+ XQ30+"/>

   <test-case name="tail-001">
      <description> tail() of a simple sequence </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <test>tail(12 to 15)</test>
      <result>
         <assert-deep-eq>13, 14, 15</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="tail-002">
      <description> tail() of a simple sequence </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <test>tail(("a", "b", "c"))</test>
      <result>
         <assert-deep-eq>"b", "c"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="tail-003">
      <description> tail() of a singleton sequence </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <test>count(tail("a"))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="tail-004">
      <description> tail() of an empty sequence </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <environment ref="works-mod"/>
      <test>let $a := /works/employee return count(tail($a/z))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="tail-005">
      <description> tail() of a node sequence </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <environment ref="works-mod"/>
      <test>let $a := /works/employee[@gender='female']/@name return tail($a)/string()</test>
      <result>
         <assert-deep-eq>"Jane Doe 3", "Jane Doe 5", "Jane Doe 7", "Jane Doe 9", "Jane Doe 11", "Jane Doe 13"</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="tail-006">
      <description> head/tail recursion </description>
      <created by="Michael Kay" on="2010-02-18"/>
      <dependency type="spec" value="XQ30+"/>
      <test>declare function local:sum($n) { if (empty($n)) then 0 else head($n) + local:sum(tail($n)) }; 
            local:sum(1 to 5)</test>
      <result>
         <all-of>
            <assert-eq>15</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
</test-set>