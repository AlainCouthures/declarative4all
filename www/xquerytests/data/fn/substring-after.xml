<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-substring-after">
   <description/>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-substring-after"/>

   <test-case name="fn-substring-after-1">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "" $arg2 = "" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("","")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-2">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "" $arg2 = "A Character String" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("","A Character String")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-3">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "" $arg2 = "A Character String" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("A Character String","")</test>
      <result>
         <all-of>
            <assert-eq>"A Character String"</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-4">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = () $arg2 = "" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after((),"")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-5">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "" $arg2 = () </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("",())</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-6">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "A Character String" $arg2 = () </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("A Character String",())</test>
      <result>
         <all-of>
            <assert-eq>"A Character String"</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-7">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = () $arg2 = "A Character String" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after((),"A Character String")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-8">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "AAAAABBBBBCCCCC" $arg2 = "BBBBB" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("AAAAABBBBBCCCCC","BBBBB")</test>
      <result>
         <assert-string-value>CCCCC</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-substring-after-9">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "AAAAABBBBB" $arg2 = " " </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("AAAAABBBBB"," ")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-10">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = " " $arg2 = " AAAAABBBBB" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after(" ","AAAAABBBBB")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-11">
      <description> Evaluates The "substring-after" function using it as a argument of a fn:not - returns true </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:not(fn:substring-after("A","A"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-substring-after-12">
      <description> Evaluates The "substring-after" function using it as a argument of a fn:not - returns true </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:not(fn:substring-after("A","B"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-substring-after-13">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = xs:string("A") $arg2 = "A" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after(xs:string("A"),"A")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-14">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "A" $arg2 = xs:string("A") </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("A",xs:string("A"))</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-15">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "A" $arg2 = "a" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("A","a")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-16">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "a" $arg2 = "A" </description>
      <created by="Carmelo Montanez" on="2005-05-27"/>
      <test>fn:substring-after("a","A")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-17">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "substring-after" $arg2 = "substring-after" </description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
      <test>fn:substring-after("substring-after","substring-after")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-18">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "substring-aftersubstring-after" $arg2 = "substring-after" </description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
      <test>fn:substring-after("substring-aftersubstring-after","substring-after")</test>
      <result>
         <assert-string-value>substring-after</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-substring-after-19">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "****" $arg2 = "***" </description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
      <test>fn:substring-after("****","***")</test>
      <result>
         <assert-string-value>*</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-substring-after-20">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "12345" $arg2 = "1234" </description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
      <test>fn:substring-after("12345","1234")</test>
      <result>
         <assert-string-value>5</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-substring-after-21">
      <description> Evaluates The "substring-after" function with the arguments set as follows: $arg1 = "substring-after $arg2 = "refta-gnirtsbus ("substring-after" backwards) </description>
      <created by="Carmelo Montanez" on="2005-06-01"/>
      <test>fn:substring-after("substring-after","refta-gnirtsbus")</test>
      <result>
         <all-of>
            <assert-eq>""</assert-eq>
            <assert-count>1</assert-count>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-substring-after-22">
      <description>Use absolute collation URI</description>
      <created by="Michael Kay" on="2011-06-28"/>
      <test>substring-after("banana", "a", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</test>
      <result>
         <assert-eq>"nana"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-substring-after-23">
      <description>Use relative collation URI</description>
      <created by="Michael Kay" on="2011-06-28"/>
      <environment>
         <static-base-uri uri="http://www.w3.org/2005/xpath-functions/"/>
      </environment>
      <test>substring-after("banana", "a", "collation/codepoint")</test>
      <result>
         <assert-eq>"nana"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-substring-after-24">
      <description>Use case-blind collation (if supported)</description>
      <created by="Michael Kay" on="2011-06-28"/>
      <environment>
         <collation uri="http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind"/>
      </environment>
      <test>substring-after("banana", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</test>
      <result>
         <assert-eq>"nana"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-substring-after-25">
      <description>Use non-BMP characters</description>
      <created by="Michael Kay" on="2011-06-28"/>
      <test>substring-after("&#65537;&#65538;&#65539;", "&#65538;")</test>
      <result>
         <assert-eq>"&#65539;"</assert-eq>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-1">
      <description> A test whose essence is: `substring-after()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-2">
      <description> A test whose essence is: `substring-after(())`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after(())</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-3">
      <description> A test whose essence is: `substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-4">
      <description> A test whose essence is: `substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</test>
      <result>
         <error code="FOCH0002"/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-5">
      <description> A test whose essence is: `substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-6">
      <description> A test whose essence is: `substring-after("tattoo", "tat") eq "too"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("tattoo", "tat") eq "too"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-7">
      <description> A test whose essence is: `substring-after("tattoo", "tattoo") eq ""`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("tattoo", "tattoo") eq ""</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-8">
      <description> A test whose essence is: `substring-after("abcdefgedij", "def") eq "gedij"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("abcdefgedij", "def") eq "gedij"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-9">
      <description> A test whose essence is: `substring-after((), ()) eq ""`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after((), ()) eq ""</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-10">
      <description> A test whose essence is: `substring-after("a string", ()) eq "a string"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("a string", ()) eq "a string"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SubstringAfterFunc-11">
      <description> A test whose essence is: `substring-after("a string", "not in other") eq ""`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>substring-after("a string", "not in other") eq ""</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="cbcl-substring-after-001">
      <description> test fn:substring-after with collation and empty string </description>
      <created by="Tim Mills" on="2008-04-11"/>
      <test>
        fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
</test-set>