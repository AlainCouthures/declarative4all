<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-exactly-one">
   <description>Tests for the exactly-one() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-exactly-one"/>

   <test-case name="fn-exactly-oneint1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:int("-2147483648"))</test>
      <result>
         <assert-string-value>-2147483648</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneint1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:int("-1873914410"))</test>
      <result>
         <assert-string-value>-1873914410</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneint1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:int("2147483647"))</test>
      <result>
         <assert-string-value>2147483647</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneintg1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:integer("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneintg1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:integer("830993497117024304"))</test>
      <result>
         <assert-string-value>830993497117024304</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneintg1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:integer("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedec1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:decimal("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedec1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:decimal("617375191608514839"))</test>
      <result>
         <assert-string-value>617375191608514839</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedec1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:decimal("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedbl1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:double("-1.7976931348623157E308"))</test>
      <result>
         <assert-string-value>-1.7976931348623157E308</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedbl1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:double("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onedbl1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:double("1.7976931348623157E308"))</test>
      <result>
         <assert-string-value>1.7976931348623157E308</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneflt1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:float("-3.4028235E38"))</test>
      <result>
         <assert-string-value>-3.4028235E38</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneflt1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:float("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneflt1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:float("3.4028235E38"))</test>
      <result>
         <assert-string-value>3.4028235E38</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onelng1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:long("-92233720368547758"))</test>
      <result>
         <assert-string-value>-92233720368547758</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onelng1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:long("-47175562203048468"))</test>
      <result>
         <assert-string-value>-47175562203048468</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onelng1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:long("92233720368547758"))</test>
      <result>
         <assert-string-value>92233720368547758</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneusht1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedShort("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneusht1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedShort("44633"))</test>
      <result>
         <assert-string-value>44633</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneusht1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedShort("65535"))</test>
      <result>
         <assert-string-value>65535</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenint1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:negativeInteger("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenint1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:negativeInteger("-297014075999096793"))</test>
      <result>
         <assert-string-value>-297014075999096793</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenint1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:negativeInteger("-1"))</test>
      <result>
         <assert-string-value>-1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onepint1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:positiveInteger("1"))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onepint1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:positiveInteger("52704602390610033"))</test>
      <result>
         <assert-string-value>52704602390610033</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onepint1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:positiveInteger("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneulng1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedLong("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneulng1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedLong("130747108607674654"))</test>
      <result>
         <assert-string-value>130747108607674654</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-oneulng1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:unsignedLong("184467440737095516"))</test>
      <result>
         <assert-string-value>184467440737095516</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenpi1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonPositiveInteger("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenpi1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonPositiveInteger("-475688437271870490"))</test>
      <result>
         <assert-string-value>-475688437271870490</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenpi1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonPositiveInteger("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenni1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonNegativeInteger("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenni1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonNegativeInteger("303884545991464527"))</test>
      <result>
         <assert-string-value>303884545991464527</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onenni1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:nonNegativeInteger("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onesht1args-1">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:short("-32768"))</test>
      <result>
         <assert-string-value>-32768</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onesht1args-2">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:short("-5324"))</test>
      <result>
         <assert-string-value>-5324</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-onesht1args-3">
      <description> Evaluates The "exactly-one" function with the arguments set as follows: $arg = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:exactly-one(xs:short("32767"))</test>
      <result>
         <assert-string-value>32767</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-exactly-one-1">
      <description> Evaluation of the fn:exactly-one function with argument to sequence with two arguments. </description>
      <created by="Carmelo Montanez" on="2005-09-20"/>
      <test>fn:exactly-one((1,2))</test>
      <result>
         <error code="FORG0005"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-1">
      <description> A test whose essence is: `exactly-one(1, 2)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one(1, 2)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-2">
      <description> A test whose essence is: `exactly-one()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-3">
      <description> A test whose essence is: `exactly-one( (1, 2, 3) )`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one( (1, 2, 3) )</test>
      <result>
         <error code="FORG0005"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-4">
      <description> A test whose essence is: `exactly-one("one") eq "one"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one("one") eq "one"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-5">
      <description> A test whose essence is: `count(exactly-one( "one" )) eq 1`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(exactly-one( "one" )) eq 1</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-6">
      <description> A test whose essence is: `exactly-one(error())`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one(error())</test>
      <result>
         <error code="FOER0000"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-7">
      <description> A test whose essence is: `exactly-one((true(), error()))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one((true(), error()))</test>
      <result>
         <error code="FOER0000"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-8">
      <description> A test whose essence is: `exactly-one(( error(), true()))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one(( error(), true()))</test>
      <result>
         <error code="FOER0000"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-9">
      <description> A test whose essence is: `exactly-one( () )`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exactly-one( () )</test>
      <result>
         <error code="FORG0005"/>
      </result>
   </test-case>

   <test-case name="K-SeqExactlyOneFunc-10">
      <description> No function by name zero-or-more exists. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>zero-or-more(1)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   
   <test-case name="cbcl-exactly-one-001">
      <description> Test fn:boolean(fn:exactly-one). </description>
      <created by="Tim Mills" on="2008-04-10"/>
      
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[boolean( exactly-one( remove( (<a/>, 1), 1 ) ) )]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   

   <test-case name="cbcl-exactly-one-002">
      <description> test fn:exactly-one on a count-preserving function </description>
      <created by="Tim Mills" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:generate($arg as xs:integer) { if ($arg = 0) then (1, 2, 3) else $arg }; 
      	fn:exactly-one(fn:unordered( local:generate(1) ))
      </test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-exactly-one-003">
      <description> test fn:exactly-one on a sequence of one-or-more items </description>
      <created by="Tim Mills" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:generate($arg as xs:integer?) { if ($arg = 0) then () else if ($arg = 1) then $arg else ($arg, $arg) }; 
      	1 + fn:exactly-one(fn:one-or-more( local:generate( 1 ) ))
      </test>
      <result>
         <assert-string-value>2</assert-string-value>
      </result>
   </test-case>
   

   <test-case name="cbcl-exactly-one-004">
      <description> test fn:exactly-one on a sequence of zero-or-one items </description>
      <created by="Tim Mills" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>      
      <test>
      	declare function local:generate($arg as xs:integer?) { if ($arg = 0) then () else if ($arg = 1) then $arg else ($arg, $arg) }; 
      	1 + fn:exactly-one(fn:zero-or-one( local:generate( 1 ) ))
      </test>
      <result>
         <assert-string-value>2</assert-string-value>
      </result>
   </test-case>
</test-set>
