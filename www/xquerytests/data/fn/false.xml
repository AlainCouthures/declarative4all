<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-false">
   <description>Tests for the function false()</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-false"/>

   <test-case name="fn-false-1">
      <description> Simple call to an "fn:false" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false()</test>
      <result>
         <all-of>
            <assert-false/>
            <assert-type>xs:boolean</assert-type>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-false-2">
      <description> Evaliation of "fn:false" function as argument to fn:not function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:not(fn:false())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-3">
      <description> Evaluation of a "false" function with a logical expression involving the "and" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() and fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-4">
      <description> Evaluation of a "fn:false" function with a logical expression involving the "or" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() or fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-5">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "eq" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() eq fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-6">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "ne" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() ne fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-7">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "lt" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() lt fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-8">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "le" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() le fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-9">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "gt" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() gt fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-10">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "ge" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() ge fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-11">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "=" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() = fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-12">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "!=" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() != fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-13">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "&lt;" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test><![CDATA[fn:false() < fn:false()]]></test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-14">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "&lt;=" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test><![CDATA[fn:false() <= fn:false()]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-15">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "&gt;" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() &gt; fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-16">
      <description> Evaluation of an "fn:false" function with a comparison expression involving the "&gt;=" operator. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:false() &gt;= fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-17">
      <description> Evaluation of an "fn:false" function as an argument to an "xs:boolean" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>xs:boolean(fn:false())</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="fn-false-18">
      <description> Evaluation of an "fn:false" function as an argument to an "fn:string" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:string(fn:false())</test>
      <result>
         <assert-eq>"false"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-false-19">
      <description> Evaluation of an "fn:false" function as arguments to an "fn:concat" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:concat(xs:string(fn:false()),xs:string(fn:false()))</test>
      <result>
         <assert-string-value>falsefalse</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-false-20">
      <description> Evaluation of an "fn:false" function as arguments to an "fn:contains" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:contains(xs:string(fn:false()),xs:string(fn:false()))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="fn-false-21">
      <description> Evaluation of an "fn:false" function as an argument to an "fn:string-length" function. </description>
      <created by="Carmelo Montanez" on="2005-08-17"/>
      <test>fn:string-length(xs:string(fn:false()))</test>
      <result>
         <assert-string-value>5</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-false-22" covers="named-function-ref">
      <description>false() as a function item</description>
      <created by="Michael Kay" on="2011-06-27"/>
      <dependency type="spec" value="XP30+ XQ30+"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>let $f := false#0 return 3[$f()]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="K-FalseFunc-1">
      <description> A test whose essence is: `false(1)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>false(1)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FalseFunc-2">
      <description> A test whose essence is: `false() eq false()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>false() eq false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-FalseFunc-3">
      <description> A test whose essence is: `not(false())`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>not(false())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
</test-set>