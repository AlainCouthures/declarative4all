<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-floor" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the fn:floor() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-11/" idref="func-floor" type="spec"/>
  <environment name="emptydoc"/>
  <environment name="e0">
    <source file="abs/e0.xml" role=".">
      <description>A simple file containing e0/e</description>
      <created by="Michael Kay" on="2010-12-08"/>
    </source>
  </environment>
  <environment name="e1">
    <source file="abs/e1.xml" role=".">
      <description>A simple file containing e1/e</description>
      <created by="Michael Kay" on="2010-12-08"/>
    </source>
  </environment>
  <environment name="e-1">
    <source file="abs/e-1.xml" role=".">
      <description>A simple file containing e-1/e</description>
      <created by="Michael Kay" on="2010-12-08"/>
    </source>
  </environment>
  <test-case name="fn-floorint1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:int(&quot;-2147483648&quot;))</test>
    <result-string>xs:string(&quot;-2147483648&quot;)</result-string>
    <result>
      <assert-string-value>-2147483648</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorint1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:int(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:int(&quot;-1873914410&quot;))</test>
    <result-string>xs:string(&quot;-1873914410&quot;)</result-string>
    <result>
      <assert-string-value>-1873914410</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorint1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:int(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:int(&quot;2147483647&quot;))</test>
    <result-string>xs:string(&quot;2147483647&quot;)</result-string>
    <result>
      <assert-string-value>2147483647</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorintg1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorintg1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:integer(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:integer(&quot;830993497117024304&quot;))</test>
    <result-string>xs:string(&quot;830993497117024304&quot;)</result-string>
    <result>
      <assert-string-value>830993497117024304</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorintg1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:integer(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:integer(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordec1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordec1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:decimal(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:decimal(&quot;617375191608514839&quot;))</test>
    <result-string>xs:string(&quot;617375191608514839&quot;)</result-string>
    <result>
      <assert-string-value>617375191608514839</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordec1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:decimal(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordbl1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:string(&quot;-1.7976931348623157E308&quot;)</result-string>
    <result>
      <assert-string-value>-1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordbl1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:double(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:double(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floordbl1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:double(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:double(&quot;1.7976931348623157E308&quot;))</test>
    <result-string>xs:string(&quot;1.7976931348623157E308&quot;)</result-string>
    <result>
      <assert-string-value>1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorflt1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:string(&quot;-3.4028235E38&quot;)</result-string>
    <result>
      <assert-string-value>-3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorflt1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:float(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:float(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorflt1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:float(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:float(&quot;3.4028235E38&quot;))</test>
    <result-string>xs:string(&quot;3.4028235E38&quot;)</result-string>
    <result>
      <assert-string-value>3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorlng1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:string(&quot;-92233720368547758&quot;)</result-string>
    <result>
      <assert-string-value>-92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorlng1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:long(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:long(&quot;-47175562203048468&quot;))</test>
    <result-string>xs:string(&quot;-47175562203048468&quot;)</result-string>
    <result>
      <assert-string-value>-47175562203048468</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorlng1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:long(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:long(&quot;92233720368547758&quot;))</test>
    <result-string>xs:string(&quot;92233720368547758&quot;)</result-string>
    <result>
      <assert-string-value>92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorusht1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorusht1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedShort(&quot;44633&quot;))</test>
    <result-string>xs:string(&quot;44633&quot;)</result-string>
    <result>
      <assert-string-value>44633</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorusht1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedShort(&quot;65535&quot;))</test>
    <result-string>xs:string(&quot;65535&quot;)</result-string>
    <result>
      <assert-string-value>65535</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornint1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornint1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:negativeInteger(&quot;-297014075999096793&quot;))</test>
    <result-string>xs:string(&quot;-297014075999096793&quot;)</result-string>
    <result>
      <assert-string-value>-297014075999096793</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornint1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:negativeInteger(&quot;-1&quot;))</test>
    <result-string>xs:string(&quot;-1&quot;)</result-string>
    <result>
      <assert-string-value>-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorpint1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorpint1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:positiveInteger(&quot;52704602390610033&quot;))</test>
    <result-string>xs:string(&quot;52704602390610033&quot;)</result-string>
    <result>
      <assert-string-value>52704602390610033</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorpint1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:positiveInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorulng1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorulng1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedLong(&quot;130747108607674654&quot;))</test>
    <result-string>xs:string(&quot;130747108607674654&quot;)</result-string>
    <result>
      <assert-string-value>130747108607674654</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorulng1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:unsignedLong(&quot;184467440737095516&quot;))</test>
    <result-string>xs:string(&quot;184467440737095516&quot;)</result-string>
    <result>
      <assert-string-value>184467440737095516</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornpi1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;-999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornpi1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonPositiveInteger(&quot;-475688437271870490&quot;))</test>
    <result-string>xs:string(&quot;-475688437271870490&quot;)</result-string>
    <result>
      <assert-string-value>-475688437271870490</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornpi1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonPositiveInteger(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornni1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:string(&quot;0&quot;)</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornni1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonNegativeInteger(&quot;303884545991464527&quot;))</test>
    <result-string>xs:string(&quot;303884545991464527&quot;)</result-string>
    <result>
      <assert-string-value>303884545991464527</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floornni1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:nonNegativeInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string(&quot;999999999999999999&quot;)</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorsht1args-1">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:string(&quot;-32768&quot;)</result-string>
    <result>
      <assert-string-value>-32768</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorsht1args-2">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:short(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:short(&quot;-5324&quot;))</test>
    <result-string>xs:string(&quot;-5324&quot;)</result-string>
    <result>
      <assert-string-value>-5324</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-floorsht1args-3">
    <description> Evaluates The &quot;floor&quot; function with the arguments set as follows: $arg = xs:short(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <environment ref="emptydoc"/>
    <test>fn:floor(xs:short(&quot;32767&quot;))</test>
    <result-string>xs:string(&quot;32767&quot;)</result-string>
    <result>
      <assert-string-value>32767</assert-string-value>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-1">
    <description> A test whose essence is: `floor()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>floor()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-2">
    <description> A test whose essence is: `floor(1, 2)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>floor(1, 2)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-3">
    <description> A test whose essence is: `empty(floor(()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>empty(floor(()))</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-4">
    <description> A test whose essence is: `floor(10.5) eq 10`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>floor(10.5) eq 10</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-5">
    <description> A test whose essence is: `floor(-10.5) eq -11`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>floor(-10.5) eq -11</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-FloorFunc-6">
    <description> A test whose essence is: `floor(&quot;a string&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="emptydoc"/>
    <test>floor(&quot;a string&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-1">
    <description> Ensure the return type is properly inferred. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e1"/>
    <test>floor(xs:unsignedShort(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-2">
    <description> Ensure the return type is properly inferred for unsignedShort. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:unsignedShort(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-3">
    <description> Ensure the return type is properly inferred for unsignedLong. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:unsignedLong(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-4">
    <description> Ensure the return type is properly inferred for unsignedInt. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:unsignedInt(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-5">
    <description> Ensure the return type is properly inferred for unsignedByte. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:unsignedByte(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-6">
    <description> Ensure the return type is properly inferred for positiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e1"/>
    <test>floor(xs:positiveInteger(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-7">
    <description> Ensure the return type is properly inferred for nonPositiveInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:nonPositiveInteger(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-8">
    <description> Ensure the return type is properly inferred for nonNegativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:nonNegativeInteger(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-9">
    <description> Ensure the return type is properly inferred for negativeInteger. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e-1"/>
    <test>floor(xs:negativeInteger(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-10">
    <description> Ensure the return type is properly inferred for long. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:long(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-11">
    <description> Ensure the return type is properly inferred for int. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:int(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-12">
    <description> Ensure the return type is properly inferred for short. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:short(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K2-FloorFunc-13">
    <description> Ensure the return type is properly inferred for byte. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <environment ref="e0"/>
    <test>floor(xs:byte(.)) instance of xs:integer</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-floor-1">
    <description> check dynamic type of fn:floor on argument of union of numeric types. </description>
    <created by="Oliver Hallam" on="2010-03-15"/>
    <test>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((floor($x)) instance of xs:integer) then &quot;integer&quot; 
           else if ((floor($x)) instance of xs:decimal) then &quot;decimal&quot; 
           else if ((floor($x)) instance of xs:float) then &quot;float&quot;
           else if ((floor($x)) instance of xs:double) then &quot;double&quot; 
           else error()
        </test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;integer&quot;, &quot;decimal&quot;, &quot;float&quot;, &quot;double&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-1">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(12.5)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-2">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(12.9)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-3">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(0.000000001)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-4">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(0.0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-5">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-0.1)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-6">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-12345678.567890)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-12345679</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-decimal-7">
    <description>Basic test of floor(decimal)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-1234567891234567.2)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1234567891234568.0</assert-eq>
        <assert-type>xs:decimal</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-1">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(12.5e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-2">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(12.9e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-3">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(0.000000001e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-4">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(0.0e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-5">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-0.1e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-6">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-12345678.567890e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-12345679e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-7">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(-1234567891234567.2e0)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1234567891234568.0e0</assert-eq>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-8">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:double('NaN'))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>NaN</assert-string-value>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-9">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:double('INF'))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>INF</assert-string-value>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-10">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:double('-INF'))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>-INF</assert-string-value>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-double-11">
    <description>Basic test of floor(double)</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:double('-0'))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>-0</assert-string-value>
        <assert-type>xs:double</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-1">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(12.5e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-2">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(12.9e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>12.0e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-3">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(0.000000001e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-4">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(0.0e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0.0e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-5">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(-0.1e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1.0e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-6">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(-12345678.567890e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-12345679e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-7">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(-1234567.2e0))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>-1234568e0</assert-eq>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-8">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(xs:float('NaN')))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>NaN</assert-string-value>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-9">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(xs:float('INF')))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>INF</assert-string-value>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-10">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(xs:float('-INF')))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>-INF</assert-string-value>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-floor-float-11">
    <description>Basic test of floor(float))</description>
    <created by="Michael Kay" on="2011-06-24"/>
    <test>floor(xs:float(xs:float('-0')))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value>-0</assert-string-value>
        <assert-type>xs:float</assert-type>
      </all-of>
    </result>
  </test-case>
</test-set>