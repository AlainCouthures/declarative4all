<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-translate">
   <description/>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-translate"/>

   <test-case name="fn-translate3args-1">
      <description>Test simple translate expression </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('---abcABCxyz---','-abcABCxyz','1ABCabcXYZ')</test>
      <result>
         <assert-string-value>111ABCabcXYZ111</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate3args-2">
      <description>Test translate on space, tab, and newline </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('newline
tab	space ','
	 ','123')</test>
      <result>
         <assert-string-value>newline1tab2space3</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate3args-3">
      <description>Test translate with zero-length string argument </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('','-','x')</test>
      <result>
         <assert-string-value/>
      </result>
   </test-case>

   <test-case name="fn-translate3args-4">
      <description>Test translate with an empty sequence argument </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate((),'-','x')</test>
      <result>
         <assert-string-value/>
      </result>
   </test-case>

   <test-case name="fn-translate3args-5">
      <description>Test translate with invalid type in 1st argument </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate(1,'-','x')</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="fn-translate3args-6">
      <description>Test translate with invalid type in 2nd argument </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('abc',1,'x')</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="fn-translate3args-7">
      <description>Test translate with invalid type in 3rd argument </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('abc','x',1)</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="fn-translate3args-8">
      <description>Test translate with incorrect arity </description>
      <created by="Joanne Tong" on="2005-09-23"/>
      <test>translate('abc')</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="fn-translate-1">
      <description> Simple test of translate function as per example one for this function from the F andO specs. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("bar","abc","ABC")</test>
      <result>
         <assert-string-value>BAr</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-2">
      <description> Simple test of translate function as per example two for this function from the F andO specs. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("--aaa--","abc-","ABC")</test>
      <result>
         <assert-string-value>AAA</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-3">
      <description> Simple test of translate function as per example three for this function from the F andO specs. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("abcdabc", "abc", "AB")</test>
      <result>
         <assert-string-value>ABdAB</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-4">
      <description> Evaluation of translate function. Translate lower case letters to upper case letters. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("acdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ")</test>
      <result>
         <assert-string-value>ACDEFGHIJKLMNOPQRSTUVWXYZ</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-5">
      <description> Evaluation of translate function. Translate upper case letters to lower case letters. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("ABCDEFGHIJKLMNOPQRSTUVWXYZ","ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")</test>
      <result>
         <assert-string-value>abcdefghijklmnopqrstuvwxyz</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-6">
      <description> Evaluation of translate function, where all three arguments are the zero length string. Use fn;count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:count(fn:translate("","",""))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-7">
      <description> Evaluation of translate function, where the first and third arguments are the same (letters). </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("ABC", "ABC", "ABC")</test>
      <result>
         <assert-string-value>ABC</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-8">
      <description> Evaluation of translate function, where all arguments are the same (numbers). </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("123", "123", "123")</test>
      <result>
         <assert-string-value>123</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-9">
      <description> Evaluation of translate function, there is a mixture of numbers and letters. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate("123ABC", "123ABC", "123ABC")</test>
      <result>
         <assert-string-value>123ABC</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-10">
      <description> Evaluation of translate function, where all three arguments are an invocation to "fn:string". </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:translate(fn:string("ABC"), fn:string("ABC"), fn:string("ABC"))</test>
      <result>
         <assert-string-value>ABC</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-11">
      <description> Evaluation of translate function as an argument to the "fn:string" function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:string(fn:translate("ABC", "ABC", "ABC"))</test>
      <result>
         <assert-string-value>ABC</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-12">
      <description> Evaluation of translate function as an argument to the "fn:string-length" function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>fn:string-length(fn:translate("ABC","ABC","ABC"))</test>
      <result>
         <assert-string-value>3</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-13">
      <description> Evaluation of translate function as an argument to the "xs:decimal" constructor function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>xs:decimal(fn:translate("123","123","123"))</test>
      <result>
         <assert-string-value>123</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-14">
      <description> Evaluation of translate function as an argument to the "xs:integer" constructor function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>xs:integer(fn:translate("123","123","123"))</test>
      <result>
         <assert-string-value>123</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-15">
      <description> Evaluation of translate function as an argument to the "xs:float" constructor function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>xs:float(fn:translate("123","123","123"))</test>
      <result>
         <assert-string-value>123</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-16">
      <description> Evaluation of translate function as an argument to the "xs:double" constructor function. </description>
      <created by="Carmelo Montanez" on="2005-10-06"/>
      <test>xs:double(fn:translate("123","123","123"))</test>
      <result>
         <assert-string-value>123</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-translate-17">
      <description>Evaluation of translate function using non-BMP characters.</description>
      <created by="Michael Kay" on="2011-06-25"/>
      <test>translate("abcd", "&#65537;a", "xy")</test>
      <result>
         <assert-eq>"ybcd"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-translate-18">
      <description>Evaluation of translate function using non-BMP characters.</description>
      <created by="Michael Kay" on="2011-06-25"/>
      <test>translate("abcd", "xa", "&#65537;y")</test>
      <result>
         <assert-eq>"ybcd"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-translate-19">
      <description>Evaluation of translate function using non-BMP characters.</description>
      <created by="Michael Kay" on="2011-06-25"/>
      <test>translate("abcd&#65540;e", "a&#65540;e", "XYZ")</test>
      <result>
         <assert-eq>"XbcdYZ"</assert-eq>
      </result>
   </test-case>

   <test-case name="fn-translate-20">
      <description>Evaluation of translate function using non-BMP characters.</description>
      <created by="Michael Kay" on="2011-06-25"/>
      <test>translate("abcd&#65540;e", "a&#65540;e", "&#65542;YZ")</test>
      <result>
         <assert-eq>"&#65542;bcdYZ"</assert-eq>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-1">
      <description> A test whose essence is: `translate()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-2">
      <description> A test whose essence is: `translate("string", "map string")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("string", "map string")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-3">
      <description> A test whose essence is: `translate("arg", "map string", "transString", "wrong param")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("arg", "map string", "transString", "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-4">
      <description> A test whose essence is: `translate("--aaa--","-","") eq "aaa"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("--aaa--","-","") eq "aaa"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-5">
      <description> A test whose essence is: `translate("--aaa--","bbb++","") eq "--aaa--"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("--aaa--","bbb++","") eq "--aaa--"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-6">
      <description> A test whose essence is: `translate("argstr", "", "matrs") eq "argstr"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("argstr", "", "matrs") eq "argstr"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-7">
      <description> A test whose essence is: `translate((), "map", "trans") eq ""`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate((), "map", "trans") eq ""</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-8">
      <description> A test whose essence is: `translate("abcdabc", "abc", "AB") eq "ABdAB"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("abcdabc", "abc", "AB") eq "ABdAB"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-9">
      <description> A test whose essence is: `translate("bar","abc","ABC") eq "BAr"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("bar","abc","ABC") eq "BAr"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-TranslateFunc-10">
      <description> A test whose essence is: `translate("--aaa--","abc-","ABC") eq "AAA"`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>translate("--aaa--","abc-","ABC") eq "AAA"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-TranslateFunc-1">
      <description> The second argument to fn:translate() cannot be the empty sequence. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>fn:translate("arg", (), "transString")</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K2-TranslateFunc-2">
      <description> The third argument to fn:translate() cannot be the empty sequence. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>fn:translate("arg", "mapString", ())</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="cbcl-fn-translate-001">
      <description> Tests EffectiveBooleanValue on fn:translate </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>
      boolean(translate(string-join(for $x in 1 to 10 return "blah","-"),exactly-one(("--","==")[position() mod 2 = 0]),"__"))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="cbcl-fn-translate-002">
      <description> Tests with surrogates </description>
      <created by="Nick Jones" on="2008-06-16"/>
      <test>
      translate(codepoints-to-string(65536 to 65537),codepoints-to-string(65536 to 65537),"l")
      </test>
      <result>
         <assert-string-value>l</assert-string-value>
      </result>
   </test-case>
</test-set>