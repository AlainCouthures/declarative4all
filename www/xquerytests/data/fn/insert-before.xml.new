<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-insert-before" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the insert-before() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-insert-before" type="spec"/>
  <test-case name="fn-insert-before-mix-args-001">
    <description> arg1: Sequence of string, arg2:integer, arg3: string </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),1, &quot;z&quot;)</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;z&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-002">
    <description> arg1: Sequence of string, arg2:integer, arg3: empty sequence </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),0, ())</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-003">
    <description> arg1: Sequence of string, arg2:integer, arg3: empty sequence </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, ())</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-004">
    <description> arg1: Sequence of string, arg2:integer, arg3: string </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:string(&quot; &quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot; &quot;, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-005">
    <description> arg1: Sequence of string, arg2:integer, arg3: anyURI </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:anyURI(&quot;www.example.com&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;www.example.com&quot;, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-006">
    <description> arg1: Sequence of string, arg2:integer, arg3: integer </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:integer(&quot;100&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, 100, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-007">
    <description> arg1: Sequence of string, arg2:integer, arg3: decimal </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:decimal(&quot;1.1&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, 1.1, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-008">
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:float(&quot;1.1&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, 1.1, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-009">
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:float(&quot;NaN&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, xs:float('NaN'), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-010">
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:float(&quot;-0&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, 0, &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-011">
    <description> arg1: Sequence of string, arg2:integer, arg3: float </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:float(&quot;-INF&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, xs:float('-INF'), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-012">
    <description> arg1: Sequence of string, arg2:integer, arg3: double </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:double(&quot;NaN&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, xs:double('NaN'),  &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-013">
    <description> arg1: Sequence of string, arg2:integer, arg3: double </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:double(&quot;INF&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, xs:double('INF'), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-014">
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:boolean(&quot;1&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, true(), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-015">
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:boolean(&quot;0&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, false(), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-016">
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:boolean(&quot;true&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, true(), &quot;b&quot;, &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-017">
    <description> arg1: Sequence of string, arg2:integer, arg3: boolean </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),2, xs:boolean(&quot;false&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, false(),  &quot;b&quot;,  &quot;c&quot;</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-018">
    <description> arg1: Sequence of string, arg2:integer, arg3: date </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),4, xs:date(&quot;1993-03-31&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, xs:date('1993-03-31')</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-019">
    <description> arg1: Sequence of string, arg2:integer, arg3: dateTime </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),4, xs:dateTime(&quot;1972-12-31T00:00:00&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, xs:dateTime('1972-12-31T00:00:00')</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="fn-insert-before-mix-args-020">
    <description> arg1: Sequence of string, arg2:integer, arg3: time </description>
    <created by="Pulkita Tyagi" on="2005-05-25"/>
    <test>fn:insert-before( (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),4, xs:time(&quot;12:30:00&quot;))</test>
    <result-string/>
    <result>
      <assert-deep-eq>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, xs:time('12:30:00')</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-1">
    <description> A test whose essence is: `insert-before()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-2">
    <description> A test whose essence is: `insert-before(&quot;wrong params&quot;, 2)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before(&quot;wrong params&quot;, 2)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-3">
    <description> A test whose essence is: `insert-before(&quot;wrong params&quot;, 2, 3, 4)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before(&quot;wrong params&quot;, 2, 3, 4)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-4">
    <description> The second argument to fn:insert-before cannot be the empty sequence. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), (), &quot;a string&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-5">
    <description> A test whose essence is: `insert-before((), -31, &quot;a string&quot;) eq &quot;a string&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), -31, &quot;a string&quot;) eq &quot;a string&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-6">
    <description> A test whose essence is: `count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-7">
    <description> A test whose essence is: `insert-before((), 1, 3) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 1, 3) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-8">
    <description> A test whose essence is: `insert-before((), 1, &quot;a string&quot;) eq &quot;a string&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 1, &quot;a string&quot;) eq &quot;a string&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-9">
    <description> A test whose essence is: `count(insert-before((), 1, (1, 2, 3))) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((), 1, (1, 2, 3))) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-10">
    <description> A test whose essence is: `insert-before((), 30, 7) eq 7`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before((), 30, 7) eq 7</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-11">
    <description> A test whose essence is: `count(insert-before((1, 2, 3, 4), 30, ())) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3, 4), 30, ())) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-12">
    <description> A test whose essence is: `insert-before(9, 30, ()) eq 9`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>insert-before(9, 30, ()) eq 9</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-13">
    <description> A test whose essence is: `count(insert-before((1, 2, 3, 4), 1, ())) eq 4`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3, 4), 1, ())) eq 4</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-14">
    <description> A test whose essence is: `count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-15">
    <description> A test whose essence is: `count(insert-before((), 30, (1, 2, 3))) eq 3`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((), 30, (1, 2, 3))) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-16">
    <description> A test whose essence is: `count(insert-before((error(), 1), 1, (1, &quot;two&quot;, 3)))  1`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(insert-before((error(), 1), 1, (1, &quot;two&quot;, 3)))  1</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="FOER0000"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-17">
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 1, (4, 5, 6))[last()] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-18">
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last()] treat as xs:integer) eq 6</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-19">
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last() - 3] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-20">
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>(insert-before((1, current-time(), 3), 10, ())[last()] treat as xs:integer) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqInsertBeforeFunc-21">
    <description> Apply a predicate to the result of fn:insert-before(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(insert-before((1, current-time(), 3), 0, (4, 5, 6))[last() - 10])</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-fn-insert-before-001">
    <description> tests insert-before at known positions </description>
    <created by="Nick Jones" on="2008-06-13"/>
    <test>insert-before(1 to 10,5,20 to 30)</test>
    <result-string>xs:string('1 2 3 4 20 21 22 23 24 25 26 27 28 29 30 5 6 7 8 9 10')</result-string>
    <result>
      <assert-string-value>1 2 3 4 20 21 22 23 24 25 26 27 28 29 30 5 6 7 8 9 10</assert-string-value>
    </result>
  </test-case>
  <test-case name="cbcl-fn-insert-before-002">
    <description> Tests insert-before for known positions </description>
    <created by="Nick Jones" on="2008-06-13"/>
    <test>
        insert-before((1 to 10,(20 to 30)[. mod 2 = 0],30 to 40),12,&quot;blah&quot;)
      </test>
    <result-string>xs:string('1 2 3 4 5 6 7 8 9 10 20 blah 22 24 26 28 30 30 31 32 33 34 35 36 37 38 39 40')</result-string>
    <result>
      <assert-string-value>1 2 3 4 5 6 7 8 9 10 20 blah 22 24 26 28 30 30 31 32 33 34 35 36 37 38 39 40</assert-string-value>
    </result>
  </test-case>
</test-set>