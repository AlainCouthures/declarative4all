<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-substring-before" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description/>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-substring-before" type="spec"/>
  <test-case name="fn-substring-before-1">
    <description>fn-substring-before-1 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;&quot;,&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-2">
    <description>fn-substring-before-2 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;&quot;,&quot;A Character String&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-3">
    <description>fn-substring-before-3 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;A Character String&quot;,&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-4">
    <description>fn-substring-before-4 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = () $arg2 = &quot;&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before((),&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-5">
    <description>fn-substring-before-5 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = () </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;&quot;,())</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-6">
    <description>fn-substring-before-6 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;A Character String&quot; $arg2 = () </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;A Character String&quot;,())</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-7">
    <description>fn-substring-before-7 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = () $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before((),&quot;A Character String&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-8">
    <description>fn-substring-before-8 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;AAAAABBBBBCCCCC&quot; $arg2 = &quot;BBBBB&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;AAAAABBBBBCCCCC&quot;,&quot;BBBBB&quot;)</test>
    <result-string>xs:string('AAAAA')</result-string>
    <result>
      <assert-string-value>AAAAA</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-before-9">
    <description>fn-substring-before-9 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;AAAAABBBBB&quot; $arg2 = &quot; &quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;AAAAABBBBB&quot;,&quot; &quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-10">
    <description>fn-substring-before-10 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot; &quot; $arg2 = &quot; AAAAABBBBB&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot; &quot;,&quot;AAAAABBBBB&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-11">
    <description>fn-substring-before-11 Evaluates The &quot;substring-before&quot; function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:not(fn:substring-before(&quot;A&quot;,&quot;A&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-before-12">
    <description>fn-substring-before-12 Evaluates The &quot;substring-before&quot; function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:not(fn:substring-before(&quot;A&quot;,&quot;B&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-before-13">
    <description>fn-substring-before-13 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = xs:string(&quot;A&quot;) $arg2 = &quot;A&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(xs:string(&quot;A&quot;),&quot;A&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-14">
    <description>fn-substring-before-14 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;A&quot; $arg2 = xs:string(&quot;A&quot;) </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;A&quot;,xs:string(&quot;A&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-15">
    <description>fn-substring-before-15 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;A&quot; $arg2 = &quot;a&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;A&quot;,&quot;a&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-16">
    <description>fn-substring-before-16 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;a&quot; $arg2 = &quot;A&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-before(&quot;a&quot;,&quot;A&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-17">
    <description>fn-substring-before-17 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;substring-before&quot; $arg2 = &quot;substring-before&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-before(&quot;substring-before&quot;,&quot;substring-before&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-18">
    <description>fn-substring-before-18 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;substring-beforesubstring-before&quot; $arg2 = &quot;substring-before&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-before(&quot;substring-beforesubstring-before&quot;,&quot;substring-before&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-19">
    <description>fn-substring-before-19 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;****&quot; $arg2 = &quot;***&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-before(&quot;****&quot;,&quot;***&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-20">
    <description>fn-substring-before-20 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;12345&quot; $arg2 = &quot;2345&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-before(&quot;12345&quot;,&quot;2345&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;1&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-21">
    <description>fn-substring-before-21 Evaluates The &quot;substring-before&quot; function with the arguments set as follows: $arg1 = &quot;substring-before $arg2 = &quot;erofeb-gnirtsbus (&quot;substring-before&quot; backwards) </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-before(&quot;substring-before&quot;,&quot;erofeb-gnirtsbus&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-before-22">
    <description>Use absolute collation URI</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <test>substring-before(&quot;banana&quot;, &quot;a&quot;,
         &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;b&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-before-23">
    <description>Use relative collation URI</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/2005/xpath-functions/"/>
    </environment>
    <test>substring-before(&quot;banana&quot;, &quot;a&quot;, &quot;collation/codepoint&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;b&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-before-24">
    <description>Use case-blind collation (if supported)</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <environment>
      <collation uri="http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind"/>
    </environment>
    <test>substring-before(&quot;banana&quot;, &quot;A&quot;,
         &quot;http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;b&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-before-25">
    <description>Use non-BMP characters</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <test>substring-before(&quot;&quot;, &quot;&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-1">
    <description>K-SubstringBeforeFunc-1  A test whose essence is: `substring-before()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-2">
    <description>K-SubstringBeforeFunc-2  A test whose essence is: `substring-before(())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(())</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-3">
    <description>K-SubstringBeforeFunc-3  A test whose essence is: `substring-before((), (), &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;, &quot;wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before((), (), &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;,
         &quot;wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-4">
    <description>K-SubstringBeforeFunc-4  A test whose essence is: `substring-before(&quot;a string&quot;, &quot;a string&quot;, &quot;http://www.example.com/COLLATION/NOT/SUPPORTED&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;a string&quot;, &quot;a string&quot;,
         &quot;http://www.example.com/COLLATION/NOT/SUPPORTED&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOCH0002&quot;))</result-string>
    <result>
      <error code="FOCH0002"/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-5">
    <description>K-SubstringBeforeFunc-5  A test whose essence is: `substring-before(&quot;foo&quot;, &quot;oo&quot;, &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;) eq &quot;f&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;foo&quot;, &quot;oo&quot;,
         &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;) eq &quot;f&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-6">
    <description>K-SubstringBeforeFunc-6  A test whose essence is: `substring-before(&quot;tattoo&quot;, &quot;attoo&quot;) eq &quot;t&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;tattoo&quot;, &quot;attoo&quot;) eq &quot;t&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-7">
    <description>K-SubstringBeforeFunc-7  A test whose essence is: `substring-before(&quot;tattoo&quot;, &quot;tatto&quot;) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;tattoo&quot;, &quot;tatto&quot;) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-8">
    <description>K-SubstringBeforeFunc-8  A test whose essence is: `substring-before((), ()) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before((), ()) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-9">
    <description>K-SubstringBeforeFunc-9  A test whose essence is: `substring-before(&quot;a string&quot;, &quot;&quot;) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;a string&quot;, &quot;&quot;) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringBeforeFunc-10">
    <description>K-SubstringBeforeFunc-10  A test whose essence is: `substring-before(&quot;a string&quot;, &quot;not in other&quot;) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-before(&quot;a string&quot;, &quot;not in other&quot;) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-substring-before-001">
    <description> test fn:substring-before with collation and empty string </description>
    <created by="Tim Mills" on="2008-04-11"/>
    <test>
        fn:boolean(fn:substring-before('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))
      </test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
</test-set>