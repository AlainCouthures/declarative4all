<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-substring" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the fn:substring() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-substring" type="spec"/>
  <environment name="concepts">
    <source file="substring/concepts.xml" role=".">
      <description>A simple file used by one of the substring tests</description>
      <created by="Michael Kay" on="2011-06-27"/>
    </source>
  </environment>
  <test-case name="fn-substring-1">
    <description>Evaluation of substring function as per example 1 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;motor car&quot;, 6)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-string-value> car</assert-string-value>
        <assert-type>xs:string</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-2">
    <description>Evaluation of substring function as per example 2 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;metadata&quot;, 4, 3)</test>
    <result-string>xs:string(&quot;ada&quot;)</result-string>
    <result>
      <assert-string-value>ada</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-3">
    <description>Evaluation of substring function as per example 3 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;12345&quot;, 1.5, 2.6)</test>
    <result-string>xs:string(&quot;234&quot;)</result-string>
    <result>
      <assert-string-value>234</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-4">
    <description>Evaluation of substring function as per example 4 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;12345&quot;, 0, 3)</test>
    <result-string>xs:string(&quot;12&quot;)</result-string>
    <result>
      <assert-string-value>12</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-5">
    <description>Evaluation of substring function as per example 5 (for this function) from the FO specs. Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring(&quot;12345&quot;, 5, -3))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-6">
    <description>Evaluation of substring function as per example 6 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;12345&quot;, -3, 5)</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-7">
    <description>Evaluation of substring function as per example 7 (for this function) from the FO specs. Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring(&quot;12345&quot;, 0 div 0E0, 3))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-8">
    <description>Evaluation of substring function as per example 8 (for this function) from the FO specs. Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring(&quot;12345&quot;, 1, 0 div 0E0))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-9">
    <description>Evaluation of substring function as per example 9 (for this function) from the FO specs. Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring((), 1, 3))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-10">
    <description>Evaluation of substring function as per example 10 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;12345&quot;, -42, 1 div 0E0)</test>
    <result-string>xs:string(&quot;12345&quot;)</result-string>
    <result>
      <assert-string-value>12345</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-11">
    <description>Evaluation of substring function as per example 11 (for this function) from the FO specs. Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring(&quot;12345&quot;, -1 div 0E0, 1 div 0E0))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-12">
    <description>Evaluation of substring function, where the source string is the empty string Use &quot;fn:count&quot; to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:count(fn:substring(&quot;&quot;,0))</test>
    <result-string>xs:string(&quot;1&quot;)</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-13">
    <description>Evaluation of substring function, as an argument to an &quot;fn:boolean&quot; function&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:boolean(fn:substring(&quot;ABC&quot;,1))</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-14">
    <description>Evaluation of substring function, as an argument to an &quot;fn:not&quot; function&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:not(fn:substring(&quot;ABC&quot;,1))</test>
    <result-string>xs:boolean(&quot;false&quot;)</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-substring-15">
    <description>Evaluation of substring function, as an argument to another &quot;fn:substring&quot; function&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(fn:substring(&quot;ABCDE&quot;,1),1)</test>
    <result-string>xs:string(&quot;ABCDE&quot;)</result-string>
    <result>
      <assert-string-value>ABCDE</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-16">
    <description>Evaluation of substring function, where the source string is the string &quot;substring&quot;. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;substring&quot;,1)</test>
    <result-string>xs:string(&quot;substring&quot;)</result-string>
    <result>
      <assert-string-value>substring</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-17">
    <description>Evaluation of substring function as an argument to a concat function. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:concat(fn:substring(&quot;ABC&quot;,1),&quot;DEF&quot;)</test>
    <result-string>xs:string(&quot;ABCDEF&quot;)</result-string>
    <result>
      <assert-string-value>ABCDEF</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-18">
    <description>Evaluation of substring function as an argument to a contains function. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:contains(fn:substring(&quot;ABCDEF&quot;,1),&quot;DEF&quot;)</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-19">
    <description>Evaluation of substring function using the special chracter &quot;!@#$%^*()&quot;. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;!@#$%^*()&quot;,1)</test>
    <result-string>xs:string(&quot;!@#$%^*()&quot;)</result-string>
    <result>
      <assert-string-value>!@#$%^*()</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-20">
    <description>Evaluation of substring function, where the start location uses a &quot;double&quot; constructor. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;ABCD&quot;,xs:double(1))</test>
    <result-string>xs:string(&quot;ABCD&quot;)</result-string>
    <result>
      <assert-string-value>ABCD</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-21">
    <description>Evaluation of substring function, where the starting locatin is an addition expression. </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <test>fn:substring(&quot;ABCDE&quot;,1+1)</test>
    <result-string>xs:string(&quot;BCDE&quot;)</result-string>
    <result>
      <assert-string-value>BCDE</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-22">
    <description>Evaluation of substring function, where start0 and (start+len)0 </description>
    <created by="Carmelo Montanez" on="2005-08-16"/>
    <environment ref="concepts"/>
    <test>concat('#', fn:substring(./concepts/@id, string-length(./concepts/@id) - 18, 1), '#')</test>
    <result-string>xs:string(&quot;##&quot;)</result-string>
    <result>
      <assert-string-value>##</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-23">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2011-06-27"/>
    <test>substring(&quot;abcdefgh&quot;, 6)</test>
    <result-string>xs:string(&quot;&quot;efgh&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;efgh&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-24">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2011-06-27"/>
    <test>substring(&quot;abcdefgh&quot;, 5, 2)</test>
    <result-string>xs:string(&quot;&quot;e&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;e&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-25">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 1, 2)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-26">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 2, 1)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-27">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 0, 2)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-28">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 0, 3)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-29">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 3)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-30">
    <description>substring() of a string containing non-BMP characters</description>
    <created by="Michael Kay" on="2013-04-23"/>
    <test>substring(&quot;&quot;, 0)</test>
    <result-string>xs:string(&quot;&quot;&quot;&quot;)</result-string>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-31">
    <description> start is a double less than zero </description>
    <created by="Michael Kay" on="2013-05-01"/>
    <test>substring(&quot;12345&quot;, -3.1e0, 5.2e0) eq &quot;1&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-1">
    <description> A test whose essence is: `sub-string(&quot;a string&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>sub-string(&quot;a string&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-2">
    <description> A test whose essence is: `sub-string(&quot;a string&quot;, 1, 2, &quot;wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>sub-string(&quot;a string&quot;, 1, 2, &quot;wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-3">
    <description> A test whose essence is: `substring((), 1, 2) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring((), 1, 2) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-4">
    <description> A test whose essence is: `substring((), 1) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring((), 1) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-5">
    <description> A test whose essence is: `substring(&quot;12345&quot;, 1.5, 2.6) eq &quot;234&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, 1.5, 2.6) eq &quot;234&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-6">
    <description> A test whose essence is: `substring((), 1, 3) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring((), 1, 3) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-7">
    <description> A test whose essence is: `substring(&quot;motor car&quot;, 6) eq &quot; car&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;motor car&quot;, 6) eq &quot; car&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-8">
    <description> A test whose essence is: `substring(&quot;12345&quot;, 0, 3) eq &quot;12&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, 0, 3) eq &quot;12&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-9">
    <description> A test whose essence is: `substring(&quot;metadata&quot;, 4, 3) eq &quot;ada&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;metadata&quot;, 4, 3) eq &quot;ada&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-10">
    <description> A test whose essence is: `substring(&quot;12345&quot;, 0 div 0E0, 3) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, 0 div 0E0, 3) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-11">
    <description> A test whose essence is: `substring(&quot;12345&quot;, 1, 0 div 0E0) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, 1, 0 div 0E0) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-12">
    <description> A test whose essence is: `substring(&quot;12345&quot;, -3, 5) eq &quot;1&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, -3, 5) eq &quot;1&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-13">
    <description> A test whose essence is: `substring(&quot;12345&quot;, -42, 1 div 0E0) eq &quot;12345&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, -42, 1 div 0E0) eq &quot;12345&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-14">
    <description> A test whose essence is: `substring(&quot;12345&quot;, -1 div 0E0, 1 div 0E0) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, -1 div 0E0, 1 div 0E0) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringFunc-15">
    <description> A test whose essence is: `substring(&quot;12345&quot;, 5, -3) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring(&quot;12345&quot;, 5, -3) eq &quot;&quot;</test>
    <result-string>xs:boolean(&quot;true&quot;)</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-substring-001">
    <description> test fn:substring empty string </description>
    <created by="Tim Mills" on="2008-04-11"/>
    <test>fn:boolean(fn:substring('', 1, 1))</test>
    <result-string>xs:boolean(&quot;false&quot;)</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="cbcl-substring-002">
    <description> test fn:substring with index past end of string </description>
    <created by="Tim Mills" on="2008-04-11"/>
    <test>fn:boolean(fn:substring('five', 5, 1))</test>
    <result-string>xs:boolean(&quot;false&quot;)</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
</test-set>