<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-string-length" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the string-length() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-string-length" type="spec"/>
  <test-case name="fn-string-length1args-1">
    <description> Evaluates The &quot;string-length&quot; function with the arguments set as follows: $arg = xs:string(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-length(xs:string(&quot;This is a characte&quot;))</test>
    <result-string/>
    <result>
      <assert-eq>18</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length1args-2">
    <description> Evaluates The &quot;string-length&quot; function with the arguments set as follows: $arg = xs:string(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-length(xs:string(&quot;This is a characte&quot;))</test>
    <result-string/>
    <result>
      <assert-eq>18</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length1args-3">
    <description> Evaluates The &quot;string-length&quot; function with the arguments set as follows: $arg = xs:string(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:string-length(xs:string(&quot;This is a characte&quot;))</test>
    <result-string/>
    <result>
      <assert-eq>18</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-1">
    <description> Evaluation of string-length function as per example 1 (for this function) from the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;Harp not on that string, madam; that is past.&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>45</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-2">
    <description> Evaluation of string-length function using the empty sequence </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(())</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-3">
    <description> Evaluation of string-length function that uses only numbers as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;12345&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-4">
    <description> Evaluation of string-length function that uses both numbers and letters as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;12345abcd&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>9</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-5">
    <description> Evaluation of string-length function that uses only upper case letters as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;ABCD&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-6">
    <description> Evaluation of string-length function that uses only lower case letters as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;abcde&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-7">
    <description> Evaluation of string-length function that uses both upper and lower case letters as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;ABCDEabcde&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>10</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-8">
    <description> Evaluation of string-length function that uses the empty string as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-9">
    <description> Evaluation of string-length function that uses the &quot;string&quot; as part of argument </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(fn:string(&quot;AbcDH&quot;))</test>
    <result-string/>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-10">
    <description> Evaluation of string-length function with argument set to &quot;*****&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;*****&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-11">
    <description> Evaluation of string-length function as part of an addition operation </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;zzzzz&quot;) + fn:string-length(&quot;zzzzz&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>10</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-12">
    <description> Evaluation of string-length function as an argument to the &quot;fn:boolean&quot; function </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:boolean(fn:string-length(&quot;abcde&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-string-length-13">
    <description> Evaluation of string-length function as an argument to the &quot;fn:concat&quot; function </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:concat(fn:string-length(&quot;abcde&quot;), fn:string-length(&quot;fghi&quot;))</test>
    <result-string/>
    <result>
      <assert-eq>&quot;54&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-14">
    <description> Evaluation of string-length function as an argument to the &quot;fn:not&quot; function </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:not(fn:string-length(&quot;abcde&quot;))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-string-length-15">
    <description> Evaluation of string-length function with argument set to &quot;%$#@!&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;%$#@!&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>5</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-16">
    <description> Evaluation of string-length function with argument set to &quot;string-length&quot; </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;string-length&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>13</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-17">
    <description> Evaluation of string-length function as part of a boolean expression </description>
    <created by="Carmelo Montanez" on="2005-08-11"/>
    <test>fn:string-length(&quot;abc&quot;) and fn:string-length(&quot;abc&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-string-length-18">
    <description> Evaluation of string-length function with no argument and no context item defined. </description>
    <created by="Carmelo Montanez" on="2005-09-19"/>
    <environment ref="empty"/>
    <test>fn:string-length()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPDY0002&quot;))</result-string>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  <test-case name="fn-string-length-19">
    <description> Evaluation of string-length function with an argument that is a sequence of more than one item </description>
    <created by="Nicolae Brinza" on="2009-04-01"/>
    <environment ref="works-mod"/>
    <test>fn:string-length(.//employee/@name )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="fn-string-length-20">
    <description>Evaluation of string-length function with non-BMP characters.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <test>string-length(&quot;&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case covers="named-function-ref" name="fn-string-length-21">
    <description>Evaluation of string-length applied to a function item.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <modified by="Michael Kay" change="see bug 14904" on="2012-05-17"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    <test>string-length(string-length#1)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOTY0013&quot;))</result-string>
    <result>
      <error code="FOTY0013"/>
    </result>
  </test-case>
  <test-case name="fn-string-length-22">
    <description>Evaluation of string-length applied to a node that cannot be atomized because it has element-only content. 
        This succeeds, because although getting the typed value of such a node is an error, the string value is well defined, 
        and string-length with no arguments uses the string value. Note, we assume construction from PSVI, 
        therefore insignificant whitespace is stripped.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <environment ref="qname"/>
    <dependency type="feature" value="schemaValidation"/>
    <test>/*/string-length()</test>
    <result-string/>
    <result>
      <assert-eq>38</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-23">
    <description>Evaluation of string-length applied to a node that cannot be atomized because it has element-only 
        content. Unlike string-length-22, this fails, because when string-length() has an argument it atomizes the 
        argument in the usual way.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <environment ref="qname"/>
    <dependency type="feature" value="schemaValidation"/>
    <test>/*/string-length(.)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOTY0012&quot;))</result-string>
    <result>
      <error code="FOTY0012"/>
    </result>
  </test-case>
  <test-case name="fn-string-length-24">
    <description>Call string-length() with no arguments when context item is an integer.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <environment ref="qname"/>
    <test>(1 to 100)[string-length() = 3]</test>
    <result-string/>
    <result>
      <assert-eq>100</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-string-length-25">
    <description>Call string-length() with . as argument when context item is an integer.</description>
    <created by="Michael Kay" on="2011-06-25"/>
    <environment ref="qname"/>
    <test>(1 to 100)[string-length(.) = 3]</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPTY0004&quot;))</result-string>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-1">
    <description>A test whose essence is: `string-length(&quot;a string&quot;, &quot;wrong param&quot;)`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(&quot;a string&quot;, &quot;wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-2">
    <description>A test whose essence is: `string-length(&quot;ebv&quot;) eq 3`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(&quot;ebv&quot;) eq 3</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-3">
    <description>A test whose essence is: `string-length(&quot;ebv&quot;) instance of xs:integer`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(&quot;ebv&quot;) instance of xs:integer</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-4">
    <description>A test whose essence is: `string-length(()) eq 0`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(()) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-5">
    <description>A test whose essence is: `string-length(&quot;&quot;) eq 0`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(&quot;&quot;) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-6">
    <description>A test whose essence is: `string-length(()) instance of xs:integer`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(()) instance of xs:integer</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-7">
    <description>A test whose essence is: `if(false()) then string-length() else true()`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>if(false()) then string-length() else true()</test>
    <result-string/>
    <result>
      <any-of>
        <assert-true/>
        <error code="XPDY0002"/>
      </any-of>
    </result>
  </test-case>
  <test-case name="K-StringLengthFunc-8">
    <description>A test whose essence is: `string-length(&quot;Harp not on that string, madam; that is past.&quot;) eq 45`.</description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>string-length(&quot;Harp not on that string, madam; that is past.&quot;) eq 45</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>