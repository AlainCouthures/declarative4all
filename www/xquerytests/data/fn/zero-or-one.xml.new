<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-zero-or-one" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the zero-or-one() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-zero-or-one" type="spec"/>
  <test-case name="fn-zero-or-oneint1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:int(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:int(&quot;-2147483648&quot;))</test>
    <result-string>xs:string('-2147483648')</result-string>
    <result>
      <assert-string-value>-2147483648</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneint1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:int(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:int(&quot;-1873914410&quot;))</test>
    <result-string>xs:string('-1873914410')</result-string>
    <result>
      <assert-string-value>-1873914410</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneint1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:int(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:int(&quot;2147483647&quot;))</test>
    <result-string>xs:string('2147483647')</result-string>
    <result>
      <assert-string-value>2147483647</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneintg1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:integer(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:integer(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneintg1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:integer(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:integer(&quot;830993497117024304&quot;))</test>
    <result-string>xs:string('830993497117024304')</result-string>
    <result>
      <assert-string-value>830993497117024304</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneintg1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:integer(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:integer(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedec1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:decimal(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedec1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:decimal(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:decimal(&quot;617375191608514839&quot;))</test>
    <result-string>xs:string('617375191608514839')</result-string>
    <result>
      <assert-string-value>617375191608514839</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedec1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:decimal(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedbl1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:double(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:double(&quot;-1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('-1.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>-1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedbl1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:double(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:double(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onedbl1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:double(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:double(&quot;1.7976931348623157E308&quot;))</test>
    <result-string>xs:string('1.7976931348623157E308')</result-string>
    <result>
      <assert-string-value>1.7976931348623157E308</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneflt1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:float(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:float(&quot;-3.4028235E38&quot;))</test>
    <result-string>xs:string('-3.4028235E38')</result-string>
    <result>
      <assert-string-value>-3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneflt1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:float(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:float(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneflt1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:float(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:float(&quot;3.4028235E38&quot;))</test>
    <result-string>xs:string('3.4028235E38')</result-string>
    <result>
      <assert-string-value>3.4028235E38</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onelng1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:long(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:long(&quot;-92233720368547758&quot;))</test>
    <result-string>xs:string('-92233720368547758')</result-string>
    <result>
      <assert-string-value>-92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onelng1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:long(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:long(&quot;-47175562203048468&quot;))</test>
    <result-string>xs:string('-47175562203048468')</result-string>
    <result>
      <assert-string-value>-47175562203048468</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onelng1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:long(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:long(&quot;92233720368547758&quot;))</test>
    <result-string>xs:string('92233720368547758')</result-string>
    <result>
      <assert-string-value>92233720368547758</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneusht1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedShort(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneusht1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedShort(&quot;44633&quot;))</test>
    <result-string>xs:string('44633')</result-string>
    <result>
      <assert-string-value>44633</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneusht1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedShort(&quot;65535&quot;))</test>
    <result-string>xs:string('65535')</result-string>
    <result>
      <assert-string-value>65535</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenint1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:negativeInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenint1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:negativeInteger(&quot;-297014075999096793&quot;))</test>
    <result-string>xs:string('-297014075999096793')</result-string>
    <result>
      <assert-string-value>-297014075999096793</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenint1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:negativeInteger(&quot;-1&quot;))</test>
    <result-string>xs:string('-1')</result-string>
    <result>
      <assert-string-value>-1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onepint1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:positiveInteger(&quot;1&quot;))</test>
    <result-string>xs:string('1')</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onepint1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:positiveInteger(&quot;52704602390610033&quot;))</test>
    <result-string>xs:string('52704602390610033')</result-string>
    <result>
      <assert-string-value>52704602390610033</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onepint1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:positiveInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneulng1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedLong(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneulng1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedLong(&quot;130747108607674654&quot;))</test>
    <result-string>xs:string('130747108607674654')</result-string>
    <result>
      <assert-string-value>130747108607674654</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-oneulng1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:unsignedLong(&quot;184467440737095516&quot;))</test>
    <result-string>xs:string('184467440737095516')</result-string>
    <result>
      <assert-string-value>184467440737095516</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenpi1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonPositiveInteger(&quot;-999999999999999999&quot;))</test>
    <result-string>xs:string('-999999999999999999')</result-string>
    <result>
      <assert-string-value>-999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenpi1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonPositiveInteger(&quot;-475688437271870490&quot;))</test>
    <result-string>xs:string('-475688437271870490')</result-string>
    <result>
      <assert-string-value>-475688437271870490</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenpi1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonPositiveInteger(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenni1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonNegativeInteger(&quot;0&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenni1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonNegativeInteger(&quot;303884545991464527&quot;))</test>
    <result-string>xs:string('303884545991464527')</result-string>
    <result>
      <assert-string-value>303884545991464527</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onenni1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:nonNegativeInteger(&quot;999999999999999999&quot;))</test>
    <result-string>xs:string('999999999999999999')</result-string>
    <result>
      <assert-string-value>999999999999999999</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onesht1args-1">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:short(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:short(&quot;-32768&quot;))</test>
    <result-string>xs:string('-32768')</result-string>
    <result>
      <assert-string-value>-32768</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onesht1args-2">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:short(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:short(&quot;-5324&quot;))</test>
    <result-string>xs:string('-5324')</result-string>
    <result>
      <assert-string-value>-5324</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-onesht1args-3">
    <description> Evaluates The &quot;zero-or-one&quot; function with the arguments set as follows: $arg = xs:short(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:zero-or-one(xs:short(&quot;32767&quot;))</test>
    <result-string>xs:string('32767')</result-string>
    <result>
      <assert-string-value>32767</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-zero-or-one-1">
    <description> Evaluation of the fn:zero-or-one function with argument sequence containing more than one item </description>
    <created by="Carmelo Montanez" on="2005-09-20"/>
    <test>fn:zero-or-one((1,2))</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FORG0003&quot;))</result-string>
    <result>
      <error code="FORG0003"/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-1">
    <description> A test whose essence is: `zero-or-one(1, 2)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>zero-or-one(1, 2)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-2">
    <description> A test whose essence is: `zero-or-one()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>zero-or-one()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-3">
    <description> A test whose essence is: `zero-or-one(true())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>zero-or-one(true())</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-4">
    <description> A test whose essence is: `empty(zero-or-one(()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(zero-or-one(()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-5">
    <description> A test whose essence is: `count(zero-or-one( &quot;one&quot; )) eq 1`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(zero-or-one( &quot;one&quot; )) eq 1</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-6">
    <description> A test whose essence is: `count(zero-or-one( () )) eq 0`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>count(zero-or-one( () )) eq 0</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-7">
    <description> A test whose essence is: `zero-or-one(error())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>zero-or-one(error())</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOER0000&quot;))</result-string>
    <result>
      <error code="FOER0000"/>
    </result>
  </test-case>
  <test-case name="K-SeqZeroOrOneFunc-8">
    <description> A test whose essence is: `zero-or-one( (1, 2, 3) )`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>zero-or-one( (1, 2, 3) )</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FORG0003&quot;))</result-string>
    <result>
      <error code="FORG0003"/>
    </result>
  </test-case>
  <test-case name="cbcl-if-not-empty-001">
    <description> Test an optimization in if-not-empoty for empty return </description>
    <created by="Nick Jones" on="2008-07-01"/>
    <test>for $x in zero-or-one((1 to 10)[. div 2 = 0]) return ()</test>
    <result-string>xs:string('')</result-string>
    <result>
      <assert-string-value/>
    </result>
  </test-case>
  <test-case name="cbcl-zero-or-one-001">
    <description> test fn:zero-or-one on a count-preserving function </description>
    <created by="Tim Mills" on="2008-04-10"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:generate($arg as xs:integer?) { if ($arg = 0) then (1, 2, 3) else $arg };
        fn:empty( fn:zero-or-one(fn:unordered( local:generate( () ) )) )</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-zero-or-one-002">
    <description> test fn:zero-or-one on a sequence of one-or-more items </description>
    <created by="Tim Mills" on="2008-04-10"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
        declare function local:generate($arg as xs:integer?) { if ($arg = 0) then () else if ($arg = 1) then $arg else ($arg, $arg) };
        1 + fn:zero-or-one(fn:one-or-more( local:generate( 1 ) ))</test>
    <result-string>xs:string('2')</result-string>
    <result>
      <assert-string-value>2</assert-string-value>
    </result>
  </test-case>
</test-set>