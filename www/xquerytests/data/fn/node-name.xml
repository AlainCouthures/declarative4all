<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-node-name">
   <description>Tests for the node-name() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-node-name"/>

   <test-case name="fn-node-name-1">
      <description> Evaluation of node function with argument set empty sequence. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <test>fn:count(fn:node-name(()))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-2">
      <description> Evaluation of node-name function with argument set to comment node. Use fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <environment ref="works-mod"/>
      <test>fn:count(fn:node-name(/works[1]/employee[2]/child::text()[last()]))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-3">
      <description> Evaluation of node-name function with argument set to an element node. Uses local-name-from-QName to get local part </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <environment ref="works-mod"/>
      <test>fn:local-name-from-QName(fn:node-name(/works[1]/employee[2]))</test>
      <result>
         <assert-string-value>employee</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-4">
      <description> Evaluation of node-name function with argument set to an element node. use local-name-from-QName to get the local part. </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:local-name-from-QName(fn:node-name(<shoe size = "5"/>))]]></test>
      <result>
         <assert-string-value>shoe</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-5">
      <description> Evaluation of node-name function with argument set to comment node. Use of fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:count(fn:node-name(<!-- This a comment node -->))]]></test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-6">
      <description> Evaluation of node-name function with argument set to a Processing Instruction node. Use local-name-from-QName to get local part </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:local-name-from-QName(fn:node-name(<?format role="output" ?>))]]></test>
      <result>
         <assert-string-value>format</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-7">
      <description> Evaluation of node-name function with argument set to a directly constructed element node with namespace declaration. Use namespace-uri-from-qName to retrive values from QName. </description>
      <created by="Carmelo Montanez" on="2005-11-16"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:namespace-uri-from-QName(fn:node-name(<anelement xmlns = "http://example.com/examples"></anelement>))]]></test>
      <result>
         <assert-string-value>http://example.com/examples</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-8">
      <description> Evaluation of node-name function with argument set to a computed constructed element node with no namespace declaration and no children. Use local-name-from-qName to retrieve local part. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:local-name-from-QName(fn:node-name(element elementName {}))</test>
      <result>
         <assert-string-value>elementName</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-9">
      <description> Evaluation of node-name function with argument set to a computed constructed element node with no namespace declaration and no children. Use fn:namespace-uri-from-qName to retrieve namespace. Should return empty string. Use fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(element elementName {})))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-10">
      <description> Evaluation of node-name function with argument set to a computed constructed element node with no namespace declaration and one child. Use fn:local-name-from-qName to retrieve local part. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:local-name-from-QName(fn:node-name(element elementName { element achild {"some text"}}))</test>
      <result>
         <assert-string-value>elementName</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-11">
      <description> Evaluation of node-name function with argument set to a computed constructed attribute node with value set to empty string. Use fn:local-name-from-qName to retrieve local name. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:local-name-from-QName(fn:node-name(attribute attributeName {""}))</test>
      <result>
         <assert-string-value>attributeName</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-12">
      <description> Evaluation of node-name function with argument set to a computed constructed attribute node with value set to a non empty value. Use fn:local-name-from-qName to retrieve local name. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:local-name-from-QName(fn:node-name(attribute attributeName {"an attribute value"}))</test>
      <result>
         <assert-string-value>attributeName</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-13">
      <description> Evaluation of node-name function with argument set to a computed constructed attribute node with value set to a non empty value. Use fn:namespace-uri-from-qName to retrieve local name and fn:count. to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(attribute attributeName {"an attribute value"})))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-14">
      <description> Evaluation of node-name function with argument set to a computed constructed document node with value set to the empty string. Use fn:local-name-from-qName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:local-name-from-QName(fn:node-name(document {""})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-15">
      <description> Evaluation of node-name function with argument set to a computed constructed document node with value set to the empty string. Use fn:namspace-uri-from-qName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(document {""})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-16">
      <description> Evaluation of node-name function with argument set to a computed constructed document node with value set to the a non empty value. Use fn:local-name-from-qName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:count(fn:local-name-from-QName(fn:node-name(document {"<element1> text </element1>"})))]]></test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-17">
      <description> Evaluation of node-name function with argument set to a computed constructed document node with value set to the a non empty value. Use fn:namespace-uri-from-qName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[fn:count(fn:namespace-uri-from-QName(fn:node-name(document {"<element1> text </element1>"})))]]></test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-18">
      <description> Evaluation of node-name function with argument set to a computed constructed text node with value set to the the empty string. Use fn:local-name-from-qName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:local-name-from-QName(fn:node-name(text {""})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-19">
      <description> Evaluation of node-name function with argument set to a computed constructed text node with value set to the the empty string. Use fn:namespace-uri-from-qName to retrieve namespace and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(text {""})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-20">
      <description> Evaluation of node-name function with argument set to a computed constructed text node with value set to a non empty value. Use fn:local-name-from-QName to retrieve local name and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:local-name-from-QName(fn:node-name(text {"a text value"})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-21">
      <description> Evaluation of node-name function with argument set to a computed constructed text node with value set to a non empty value. Use fn:namespace-uri-from-QName to retrieve namespace and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(text {"a text value"})))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-22">
      <description> Evaluation of node-name function with argument set to a computed constructed processing instruction node. Use fn:fn-local-name-from-QName to retrieve local name. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:local-name-from-QName(fn:node-name(processing-instruction piName {"Processing Instruction content"}))</test>
      <result>
         <assert-string-value>piName</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-23">
      <description> Evaluation of node-name function with argument set to a computed constructed processing instruction node. Use fn:fn-namespace-uri-from-QName to retrieve namespace and fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:count(fn:namespace-uri-from-QName(fn:node-name(processing-instruction piName {"Processing Instruction content"})))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-node-name-24">
      <description> Evaluation of node-name function with wrong number of arguments. </description>
      <created by="Carmelo Montanez" on="2005-11-17"/>
      <dependency type="spec" value="XQ10+"/>
      <test>fn:node-name(processing-instruction piName {"Processing Instruction content"},"A Second Argument")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-25" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on element node. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[<node xmlns="http://example.com/ns"/>/node-name()]]></test>
      <result>
         <assert-eq>QName("http://example.com/ns", "node")</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-26" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on attribute node. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <modified by="Michael Kay" on="2013-01-11" change="See bug 20650"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[<node xml:space="preserve" xmlns="http://example.com/ns"/>/@xml:space/node-name()]]></test>
      <result>
         <assert-eq>QName("http://www.w3.org/XML/1998/namespace", "space")</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-27" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on processing instruction node. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[<?test data?>/node-name()]]></test>
      <result>
         <assert-eq>QName("", "test")</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-28" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on namespace node. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[namespace{"foo"}{"http://example.com/foo"}/node-name()]]></test>
      <result>
         <assert-eq>QName("", "foo")</assert-eq>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-29" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on text node. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[<a>abc</a>/text()/node-name()]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-30" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on atomic value. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XP30+ XQ30+"/>
      <test>79[node-name()]</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-31" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments on function item. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <dependency type="spec" value="XP30+ XQ30+"/>
      <test>node-name#0!node-name()</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-node-name-32" covers="fn-node-name">
      <description> Evaluation of node-name function with no arguments with absent context. </description>
      <created by="Michael Kay" on="2013-01-07"/>
      <environment ref="empty"/>
      <dependency type="spec" value="XP30+ XQ30+"/>
      <test>node-name()</test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>

   <test-case name="K-NodeNameFunc-1">
      <description> node-name() must be passed one argument, it doesn't use the context item by default in XPath 2.0. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <modified by="O'Neil Delpratt" on="2012-05-22" change="Bug fix related to bug #14854: Modified dependency"/>
      <dependency type="spec" value="XP20 XQ10"/>
      <test>node-name()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-NodeNameFunc-1a" covers="fn-node-name">
      <description>Written by: Frans Englich modified by Michael Kay  node-name() does use the context item by default in XPath 3.0. </description>
      <created by="Frans Englich / Michael Kay" on="2011-07-04"/>
      <dependency type="spec" value="XP30+ XQ30+"/>
      <test>node-name()</test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>

   <test-case name="K-NodeNameFunc-2">
      <description> A test whose essence is: `node-name((), "wrong param")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>node-name((), "wrong param")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-NodeNameFunc-3">
      <description> A test whose essence is: `empty(node-name(()))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>empty(node-name(()))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-NodeNameFunc-1">
      <description> Invoke fn:node-name() with too many arguments. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <environment ref="works-mod"/>
      <test>node-name(/*, ())</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-NodeNameFunc-2">
      <description> Invoke fn:node-name() with an invalid argument. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>node-name("string")</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="K2-NodeNameFunc-3">
      <description> Check the return value of fn:node-name(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <environment ref="works-mod"/>
      <test>node-name(/*) instance of xs:QName</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

  <test-case name="K3-NodeNameFunc-1">
      <description> Check invalid inputs to fn:node-name(). </description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <environment ref="works-mod"/>
      <test>node-name(3.3)</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

  <test-case name="K3-NodeNameFunc-2">
      <description>Check invalid multi-node input sequence to fn:node-name().</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <modified by="Michael Dyck" on="2012-03-04" change="Add dependency on XQ10+ because the query has DirectConstructors."/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test>node-name( (&lt;a/>, &lt;b/>))</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

  <test-case name="K3-NodeNameFunc-3">
      <description>Check invalid mix node,item input sequence to fn:node-name().</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <modified by="Michael Dyck" on="2012-03-04" change="Add dependency on XQ10+ because the query has a DirectConstructor."/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test>node-name( (&lt;a/>, "mystring"))</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

  <test-case name="K3-NodeNameFunc-4">
      <description>Check invalid input sequence to fn:node-name() from fn:node-name() call.</description>
      <created by="Zhen Hua Liu" on="2012-01-18"/>
      <modified by="Michael Dyck" on="2012-03-04" change="Add dependency on XQ10+ because the query has a DirectConstructor."/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test>node-name( node-name(&lt;a/>))</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="cbcl-node-name-001">
      <description> Test fn:node-name on a comment(). </description>
      <created by="Tim Mills" on="2008-10-04"/>      
      <dependency type="spec" value="XQ10+"/>
      <test>empty(node-name( comment { "comments have no name " } ) )</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

</test-set>
