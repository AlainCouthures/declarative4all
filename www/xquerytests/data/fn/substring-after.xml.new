<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-substring-after" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description/>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-substring-after" type="spec"/>
  <test-case name="fn-substring-after-1">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;&quot;,&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-2">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;&quot;,&quot;A Character String&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-3">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;A Character String&quot;,&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;A Character String&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-4">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = () $arg2 = &quot;&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after((),&quot;&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-5">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;&quot; $arg2 = () </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;&quot;,())</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-6">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;A Character String&quot; $arg2 = () </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;A Character String&quot;,())</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;A Character String&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-7">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = () $arg2 = &quot;A Character String&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after((),&quot;A Character String&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-8">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;AAAAABBBBBCCCCC&quot; $arg2 = &quot;BBBBB&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;AAAAABBBBBCCCCC&quot;,&quot;BBBBB&quot;)</test>
    <result-string>xs:string('CCCCC')</result-string>
    <result>
      <assert-string-value>CCCCC</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-after-9">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;AAAAABBBBB&quot; $arg2 = &quot; &quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;AAAAABBBBB&quot;,&quot; &quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-10">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot; &quot; $arg2 = &quot; AAAAABBBBB&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot; &quot;,&quot;AAAAABBBBB&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-11">
    <description> Evaluates The &quot;substring-after&quot; function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:not(fn:substring-after(&quot;A&quot;,&quot;A&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-after-12">
    <description> Evaluates The &quot;substring-after&quot; function using it as a argument of a fn:not - returns true </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:not(fn:substring-after(&quot;A&quot;,&quot;B&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-substring-after-13">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = xs:string(&quot;A&quot;) $arg2 = &quot;A&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(xs:string(&quot;A&quot;),&quot;A&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-14">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;A&quot; $arg2 = xs:string(&quot;A&quot;) </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;A&quot;,xs:string(&quot;A&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-15">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;A&quot; $arg2 = &quot;a&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;A&quot;,&quot;a&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-16">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;a&quot; $arg2 = &quot;A&quot; </description>
    <created by="Carmelo Montanez" on="2005-05-27"/>
    <test>fn:substring-after(&quot;a&quot;,&quot;A&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-17">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;substring-after&quot; $arg2 = &quot;substring-after&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-after(&quot;substring-after&quot;,&quot;substring-after&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-18">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;substring-aftersubstring-after&quot; $arg2 = &quot;substring-after&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-after(&quot;substring-aftersubstring-after&quot;,&quot;substring-after&quot;)</test>
    <result-string>xs:string('substring-after')</result-string>
    <result>
      <assert-string-value>substring-after</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-after-19">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;****&quot; $arg2 = &quot;***&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-after(&quot;****&quot;,&quot;***&quot;)</test>
    <result-string>xs:string('*')</result-string>
    <result>
      <assert-string-value>*</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-after-20">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;12345&quot; $arg2 = &quot;1234&quot; </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-after(&quot;12345&quot;,&quot;1234&quot;)</test>
    <result-string>xs:string('5')</result-string>
    <result>
      <assert-string-value>5</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-substring-after-21">
    <description> Evaluates The &quot;substring-after&quot; function with the arguments set as follows: $arg1 = &quot;substring-after $arg2 = &quot;refta-gnirtsbus (&quot;substring-after&quot; backwards) </description>
    <created by="Carmelo Montanez" on="2005-06-01"/>
    <test>fn:substring-after(&quot;substring-after&quot;,&quot;refta-gnirtsbus&quot;)</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>&quot;&quot;</assert-eq>
        <assert-count>1</assert-count>
      </all-of>
    </result>
  </test-case>
  <test-case name="fn-substring-after-22">
    <description>Use absolute collation URI</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <test>substring-after(&quot;banana&quot;, &quot;a&quot;, &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;nana&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-after-23">
    <description>Use relative collation URI</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <environment>
      <static-base-uri uri="http://www.w3.org/2005/xpath-functions/"/>
    </environment>
    <test>substring-after(&quot;banana&quot;, &quot;a&quot;, &quot;collation/codepoint&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;nana&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-after-24">
    <description>Use case-blind collation (if supported)</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <environment>
      <collation uri="http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind"/>
    </environment>
    <test>substring-after(&quot;banana&quot;, &quot;A&quot;, &quot;http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;nana&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="fn-substring-after-25">
    <description>Use non-BMP characters</description>
    <created by="Michael Kay" on="2011-06-28"/>
    <test>substring-after(&quot;&quot;, &quot;&quot;)</test>
    <result-string/>
    <result>
      <assert-eq>&quot;&quot;</assert-eq>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-1">
    <description> A test whose essence is: `substring-after()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-2">
    <description> A test whose essence is: `substring-after(())`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(())</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-3">
    <description> A test whose essence is: `substring-after((), (), &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;, &quot;wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after((), (), &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;, &quot;wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-4">
    <description> A test whose essence is: `substring-after(&quot;a string&quot;, &quot;a string&quot;, &quot;http://www.example.com/COLLATION/NOT/SUPPORTED&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;a string&quot;, &quot;a string&quot;, &quot;http://www.example.com/COLLATION/NOT/SUPPORTED&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FOCH0002&quot;))</result-string>
    <result>
      <error code="FOCH0002"/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-5">
    <description> A test whose essence is: `substring-after(&quot;foo&quot;, &quot;fo&quot;, &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;) eq &quot;o&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;foo&quot;, &quot;fo&quot;, &quot;http://www.w3.org/2005/xpath-functions/collation/codepoint&quot;) eq &quot;o&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-6">
    <description> A test whose essence is: `substring-after(&quot;tattoo&quot;, &quot;tat&quot;) eq &quot;too&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;tattoo&quot;, &quot;tat&quot;) eq &quot;too&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-7">
    <description> A test whose essence is: `substring-after(&quot;tattoo&quot;, &quot;tattoo&quot;) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;tattoo&quot;, &quot;tattoo&quot;) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-8">
    <description> A test whose essence is: `substring-after(&quot;abcdefgedij&quot;, &quot;def&quot;) eq &quot;gedij&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;abcdefgedij&quot;, &quot;def&quot;) eq &quot;gedij&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-9">
    <description> A test whose essence is: `substring-after((), ()) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after((), ()) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-10">
    <description> A test whose essence is: `substring-after(&quot;a string&quot;, ()) eq &quot;a string&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;a string&quot;, ()) eq &quot;a string&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-SubstringAfterFunc-11">
    <description> A test whose essence is: `substring-after(&quot;a string&quot;, &quot;not in other&quot;) eq &quot;&quot;`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>substring-after(&quot;a string&quot;, &quot;not in other&quot;) eq &quot;&quot;</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-substring-after-001">
    <description> test fn:substring-after with collation and empty string </description>
    <created by="Tim Mills" on="2008-04-11"/>
    <test>
        fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))
      </test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>