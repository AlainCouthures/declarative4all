<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-hours-from-time" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the hours-from-time() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-hours-from-time" type="spec"/>
  <test-case name="fn-hours-from-time1args-1">
    <description> Evaluates The &quot;hours-from-time&quot; function with the arguments set as follows: $arg = xs:time(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:hours-from-time(xs:time(&quot;00:00:00Z&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time1args-2">
    <description> Evaluates The &quot;hours-from-time&quot; function with the arguments set as follows: $arg = xs:time(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:hours-from-time(xs:time(&quot;08:03:35Z&quot;))</test>
    <result-string>xs:string('8')</result-string>
    <result>
      <assert-string-value>8</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time1args-3">
    <description> Evaluates The &quot;hours-from-time&quot; function with the arguments set as follows: $arg = xs:time(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:hours-from-time(xs:time(&quot;23:59:59Z&quot;))</test>
    <result-string>xs:string('23')</result-string>
    <result>
      <assert-string-value>23</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-1">
    <description> Evaluates The &quot;hours-from-time&quot; function As per example 1 of the FO specs </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;11:23:00Z&quot;))</test>
    <result-string>xs:string('11')</result-string>
    <result>
      <assert-string-value>11</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-2">
    <description> Evaluates The &quot;hours-from-time&quot; function As per example 2 of the FO specs </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;21:23:00Z&quot;))</test>
    <result-string>xs:string('21')</result-string>
    <result>
      <assert-string-value>21</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-3">
    <description> Evaluates The &quot;hours-from-time&quot; function As per example 3 of the FO specs </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;01:23:00+05:00&quot;))</test>
    <result-string>xs:string('1')</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-4">
    <description> Evaluates The &quot;hours-from-time&quot; function As per example 4 of the FO specs </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(fn:adjust-time-to-timezone(xs:time(&quot;01:23:00+05:00&quot;), xs:dayTimeDuration(&quot;PT0H&quot;)))</test>
    <result-string>xs:string('20')</result-string>
    <result>
      <assert-string-value>20</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-5">
    <description> Evaluates The &quot;hours-from-time&quot; function using the empty sequence as an argument. Use count function to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:count(fn:hours-from-time(()))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-6">
    <description> Evaluates The &quot;hours-from-time&quot; function that returns 0. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;00:20:00Z&quot;))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-7">
    <description> Evaluates The &quot;hours-from-time&quot; function that returns 23. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;23:20:00Z&quot;))</test>
    <result-string>xs:string('23')</result-string>
    <result>
      <assert-string-value>23</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-8">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;+&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;02:00:00Z&quot;)) + fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:string('12')</result-string>
    <result>
      <assert-string-value>12</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-9">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;-&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) - fn:hours-from-time(xs:time(&quot;09:00:00Z&quot;))</test>
    <result-string>xs:string('1')</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-10">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;*&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;02:00:00Z&quot;)) * fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:string('20')</result-string>
    <result>
      <assert-string-value>20</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-11">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;div&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;22:00:00Z&quot;)) div fn:hours-from-time(xs:time(&quot;02:00:00Z&quot;))</test>
    <result-string>xs:string('11')</result-string>
    <result>
      <assert-string-value>11</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-12">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;idiv&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) idiv fn:hours-from-time(xs:time(&quot;02:00:00Z&quot;))</test>
    <result-string>xs:string('5')</result-string>
    <result>
      <assert-string-value>5</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-13">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;mod&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) mod fn:hours-from-time(xs:time(&quot;03:00:00Z&quot;))</test>
    <result-string>xs:string('1')</result-string>
    <result>
      <assert-string-value>1</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-14">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-unary-plus&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>+fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:string('10')</result-string>
    <result>
      <assert-string-value>10</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-15">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-unary-minus&quot; expression. </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>-fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:string('-10')</result-string>
    <result>
      <assert-string-value>-10</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-16">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-equal&quot; expression (eq operator) </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) eq fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-17">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-equal&quot; expression (ne operator) </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) ne fn:hours-from-time(xs:time(&quot;01:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-18">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-equal&quot; expression (le operator) </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) le fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-hours-from-time-19">
    <description> Evaluates The &quot;hours-from-time&quot; function as part of a &quot;numeric-equal&quot; expression (ge operator) </description>
    <created by="Carmelo Montanez" on="2005-06-06"/>
    <test>fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;)) ge fn:hours-from-time(xs:time(&quot;10:00:00Z&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-HoursFromTimeFunc-1">
    <description> A test whose essence is: `hours-from-time()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>hours-from-time()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-HoursFromTimeFunc-2">
    <description> A test whose essence is: `hours-from-time((), &quot;Wrong param&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>hours-from-time((), &quot;Wrong param&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-HoursFromTimeFunc-3">
    <description> A test whose essence is: `empty(hours-from-time(()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(hours-from-time(()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-HoursFromTimeFunc-4">
    <description> A test whose essence is: `hours-from-time(()) instance of xs:integer?`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>hours-from-time(()) instance of xs:integer?</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-HoursFromTimeFunc-5">
    <description> A test whose essence is: `hours-from-time(xs:time(&quot;23:11:12.43&quot;)) eq 23`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>hours-from-time(xs:time(&quot;23:11:12.43&quot;)) eq 23</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>