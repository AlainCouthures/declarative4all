<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-one-or-more">
   <description>Tests for the one-or-more() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-one-or-more"/>

   <test-case name="fn-one-or-moreint1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:int(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:int("-2147483648"))</test>
      <result>
         <assert-string-value>-2147483648</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreint1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:int(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:int("-1873914410"))</test>
      <result>
         <assert-string-value>-1873914410</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreint1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:int(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:int("2147483647"))</test>
      <result>
         <assert-string-value>2147483647</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreintg1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:integer(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:integer("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreintg1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:integer(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:integer("830993497117024304"))</test>
      <result>
         <assert-string-value>830993497117024304</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreintg1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:integer(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:integer("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredec1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:decimal(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:decimal("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredec1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:decimal(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:decimal("617375191608514839"))</test>
      <result>
         <assert-string-value>617375191608514839</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredec1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:decimal(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:decimal("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredbl1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:double(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:double("-1.7976931348623157E308"))</test>
      <result>
         <assert-string-value>-1.7976931348623157E308</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredbl1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:double(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:double("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moredbl1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:double(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:double("1.7976931348623157E308"))</test>
      <result>
         <assert-string-value>1.7976931348623157E308</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreflt1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:float(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:float("-3.4028235E38"))</test>
      <result>
         <assert-string-value>-3.4028235E38</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreflt1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:float(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:float("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreflt1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:float(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:float("3.4028235E38"))</test>
      <result>
         <assert-string-value>3.4028235E38</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morelng1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:long(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:long("-92233720368547758"))</test>
      <result>
         <assert-string-value>-92233720368547758</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morelng1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:long(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:long("-47175562203048468"))</test>
      <result>
         <assert-string-value>-47175562203048468</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morelng1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:long(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:long("92233720368547758"))</test>
      <result>
         <assert-string-value>92233720368547758</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreusht1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedShort(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedShort("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreusht1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedShort(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedShort("44633"))</test>
      <result>
         <assert-string-value>44633</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreusht1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedShort(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedShort("65535"))</test>
      <result>
         <assert-string-value>65535</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenint1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:negativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:negativeInteger("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenint1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:negativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:negativeInteger("-297014075999096793"))</test>
      <result>
         <assert-string-value>-297014075999096793</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenint1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:negativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:negativeInteger("-1"))</test>
      <result>
         <assert-string-value>-1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morepint1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:positiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:positiveInteger("1"))</test>
      <result>
         <assert-string-value>1</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morepint1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:positiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:positiveInteger("52704602390610033"))</test>
      <result>
         <assert-string-value>52704602390610033</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morepint1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:positiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:positiveInteger("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreulng1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedLong(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedLong("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreulng1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedLong(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedLong("130747108607674654"))</test>
      <result>
         <assert-string-value>130747108607674654</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moreulng1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:unsignedLong(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:unsignedLong("184467440737095516"))</test>
      <result>
         <assert-string-value>184467440737095516</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenpi1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonPositiveInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonPositiveInteger("-999999999999999999"))</test>
      <result>
         <assert-string-value>-999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenpi1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonPositiveInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonPositiveInteger("-475688437271870490"))</test>
      <result>
         <assert-string-value>-475688437271870490</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenpi1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonPositiveInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonPositiveInteger("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenni1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonNegativeInteger(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonNegativeInteger("0"))</test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenni1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonNegativeInteger(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonNegativeInteger("303884545991464527"))</test>
      <result>
         <assert-string-value>303884545991464527</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-morenni1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:nonNegativeInteger(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:nonNegativeInteger("999999999999999999"))</test>
      <result>
         <assert-string-value>999999999999999999</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moresht1args-1">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:short(lower bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:short("-32768"))</test>
      <result>
         <assert-string-value>-32768</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moresht1args-2">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:short(mid range) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:short("-5324"))</test>
      <result>
         <assert-string-value>-5324</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-moresht1args-3">
      <description> Evaluates The "one-or-more" function with the arguments set as follows: $arg = xs:short(upper bound) </description>
      <created by="Carmelo Montanez" on="2004-12-13"/>
      <test>fn:one-or-more(xs:short("32767"))</test>
      <result>
         <assert-string-value>32767</assert-string-value>
      </result>
   </test-case>

   <test-case name="fn-one-or-more-1">
      <description>Evaluation of the fn:one-or-more function with argument set to empty sequence.</description>
      <created by="Carmelo Montanez" on="2005-09-20"/>
      <test>fn:one-or-more(())</test>
      <result>
         <error code="FORG0004"/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-1">
      <description> A test whose essence is: `one-or-more(1, 2)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>one-or-more(1, 2)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-2">
      <description> A test whose essence is: `one-or-more()`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>one-or-more()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-3">
      <description> A test whose essence is: `one-or-more("one")`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>one-or-more("one")</test>
      <result>
         <assert-string-value>one</assert-string-value>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-4">
      <description> A test whose essence is: `exists(one-or-more(("one", 2)))`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>exists(one-or-more(("one", 2)))</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-5">
      <description> A test whose essence is: `count(one-or-more( "one" )) eq 1`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(one-or-more( "one" )) eq 1</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-6">
      <description> A test whose essence is: `count(one-or-more( (1, 2, 3, "four") )) eq 4`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>count(one-or-more( (1, 2, 3, "four") )) eq 4</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-7">
      <description> A test whose essence is: `one-or-more(error())`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>one-or-more(error())</test>
      <result>
         <error code="FOER0000"/>
      </result>
   </test-case>

   <test-case name="K-SeqOneOrMoreFunc-8">
      <description> A test whose essence is: `one-or-more( () )`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>one-or-more( () )</test>
      <result>
         <error code="FORG0004"/>
      </result>
   </test-case>

   <test-case name="K2-SeqOneOrMoreFunc-1">
      <description> Have fn:one-or-more() as an operand to an expression that requires zero or more, that itself has cardinality zero or more. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>codepoints-to-string(one-or-more(string-to-codepoints("foo")))</test>
      <result>
         <assert-string-value>foo</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="cbcl-one-or-more-001">
      <description> test fn:one-or-more-one on a count-preserving function </description>
      <created by="Tim Mills" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare function local:generate($arg as xs:integer?) { if ($arg = 0) then (1, 2, 3) else $arg };
        fn:one-or-more(fn:reverse( local:generate( 0 ) ))</test>
      <result>
         <assert-string-value>3 2 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-002">
      <description> test fn:one-or-more on a sequence of zero-or-one items </description>
      <created by="Tim Mills" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare function local:generate($arg as xs:integer?) { if ($arg = 0) then (1, 2, 3) else $arg };
        fn:one-or-more(fn:zero-or-one( local:generate( () ) ))</test>
      <result>
         <error code="FORG0004"/>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-003">
      <description> test fn:boolean on fn:one-or-more-one on a sequence of nodes </description>
      <created by="Oliver Hallam" on="2008-04-10"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[
      boolean(one-or-more(for $x in 1 to month-from-date(current-date()) return <a/>))
   ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-004">
      <description> test fn:boolean on fn:one-or-more-one on an empty sequence </description>
      <created by="Oliver Hallam" on="2008-04-10"/>
      <test>boolean(one-or-more(month-from-date(current-date()) to 0))</test>
      <result>
         <error code="FORG0004"/>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-005">
      <description> Tests boolean call on one-or-more </description>
      <created by="Nick Jones" on="2008-06-13"/>
      <test>boolean(one-or-more((1 to 10)[. mod 2 = 0]))</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-006">
      <description> Tests one-or-more on zero items </description>
      <created by="Nick Jones" on="2008-06-17"/>
      <test>one-or-more((1 to 10)[. div 2 = 0])</test>
      <result>
         <error code="FORG0004"/>
      </result>
   </test-case>

   <test-case name="cbcl-one-or-more-007">
      <description> Tests one or more on a single boolean value </description>
      <created by="Nick Jones" on="2008-06-17"/>
      <test>
      boolean(one-or-more(for $x in (1 to 10)[. div 2 = 1] return true()))
   </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
</test-set>