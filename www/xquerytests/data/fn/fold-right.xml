<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-fold-right"  covers="fn-fold-right">
    <description>Tests for the fn:fold-left() higher-order function introduced in XPath 3.0</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-fold-right"/>
    
    <dependency type="spec" value="XP30+ XQ30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    
    <test-case name="fold-right-001">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, 0,function($a, $b) { $a + $b })</test>
        <result>
                <assert-eq>15</assert-eq>
        </result>
    </test-case>
    <test-case name="fold-right-002">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right((2,3,5,7), 1,function($a, $b) { $a * $b })</test>
        <result>
                <assert-eq>210</assert-eq>
        </result>
    </test-case>
    <test-case name="fold-right-003">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right((true(), false(), false()), false(),function($a, $b) { $a or $b })</test>
        <result>
                <assert-true/>
        </result>
    </test-case>
    <test-case name="fold-right-004">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right((true(), false(), false()), false(),function($a, $b) { $a and $b })</test>
        <result>
                <assert-false/>
        </result>
    </test-case>
    <test-case name="fold-right-005">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>let $f := function($a, $b){($b, $a)} return fold-right(1 to 5, (), $f)</test>
        <result>
                <assert-deep-eq>5,4,3,2,1</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="fold-right-006" covers="partial-function-application">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, "", fn:concat(?, ".", ?))</test>
        <result>
                <assert-eq>'1.2.3.4.5.'</assert-eq>
        </result>
    </test-case>
    <test-case name="fold-right-007" covers="partial-function-application">
        <description>
            Higher Order Functions 
            fold-right function 
            Author - Michael Kay, Saxonica 
        </description>
        <created by="Michael Kay" on="2010-02-10"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, "$zero", fn:concat("$f(", ?, ", ", ?, ")"))</test>
        <result>
                <assert-string-value>$f(1, $f(2, $f(3, $f(4, $f(5, $zero)))))</assert-string-value>
        </result>
    </test-case>
    <test-case name="fold-right-008">
        <description>
            Higher Order Functions 
            fold-right function 
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, 0, function($a, $b, $c){ $a + $b + $c })</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="fold-right-009">
        <description>
            Higher Order Functions 
            fold-right function 
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, "", function($a, $b){ $a + $b })</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="fold-right-010">
        <description>
            Higher Order Functions 
            fold-right function 
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, 0, function($a as xs:string, $b){ $a + $b })</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="fold-right-011">
        <description>
            Higher Order Functions 
            fold-right function 
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, 0, function($a, $b as xs:string){ $a + $b })</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="fold-right-012">
        <description>
            Higher Order Functions 
            fold-right function 
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 5, 0, function($a, $b) as xs:string { $a + $b })</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="fold-right-013">
        <description>
            Higher Order Functions 
            fold-right function 
            Count the number of items in a sequence
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 1000000, 0, function($a, $b){ $b + 1 })</test>
        <result>
            <assert-string-value>1000000</assert-string-value>
        </result>
    </test-case>
    <test-case name="fold-right-014">
        <description>
            Higher Order Functions 
            fold-right function 
            Reverse the sequence order
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right((1 to 5), (), function($a , $b){ ($b, $a) })</test>
        <result>
            <assert-deep-eq>5, 4, 3, 2, 1</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="fold-right-015">
        <description>
            Higher Order Functions 
            fold-right function 
            Remove duplicate values in a sequence
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right((1, 2, 2, 3, 3, 3, 4, 5, 5), (), function($a, $b){ if(exists($b[. eq $a])) then $b else ($a, $b) })</test>
        <result>
            <assert-deep-eq>1, 2, 3, 4, 5</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="fold-right-016">
        <description>
            Higher Order Functions 
            fold-right function 
            Double each value in a sequence
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right((1 to 5), (), function($a, $b){ ($a, $a, $b) })</test>
        <result>
            <assert-deep-eq>1, 1, 2, 2, 3, 3, 4, 4, 5, 5</assert-deep-eq>
        </result>
    </test-case>
    <test-case name="fold-right-017" covers="partial-function-application">
        <description>
            Higher Order Functions 
            fold-right function 
            Show fold-right structural transformation
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right((1 to 13), 0, concat("(", ?, "+", ?, ")"))</test>
        <result>
            <assert-string-value>(1+(2+(3+(4+(5+(6+(7+(8+(9+(10+(11+(12+(13+0)))))))))))))</assert-string-value>
        </result>
    </test-case>
    <test-case name="fold-right-018">
        <description>
            Higher Order Functions 
            fold-right function 
            Returns the accumulated length of all strings
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(("Hello", "World"), 0, function($a, $b){ string-length($a) + $b })</test>
        <result>
            <assert-string-value>10</assert-string-value>
        </result>
    </test-case>
    <test-case name="fold-right-019">
        <description>
            Higher Order Functions 
            fold-right function 
            Max() function
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right( 1 to 10, (), function($a, $b){ if(empty($b)) then $a else if($a lt $b) then $b else $a })</test>
        <result>
            <assert-string-value>10</assert-string-value>
        </result>
    </test-case>
    <test-case name="fold-right-020">
        <description>
            Higher Order Functions 
            fold-right function 
            Min() function
        </description>
        <created by="William Candillon" on="2011-11-27"/>
        <environment ref="empty"/>
        <test>fold-right(1 to 10, (), function($a, $b){ if(empty($b)) then $a else if($a gt $b) then $b else $a })</test>
        <result>
            <assert-string-value>1</assert-string-value>
        </result>
    </test-case>
    	
</test-set>
