<?xml version="1.0" encoding="UTF-8"?>
<test-set name="fn-adjust-time-to-timezone" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the adjust-time-to-timezone() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-adjust-time-to-timezone" type="spec"/>
  <test-case name="fn-adjust-time-to-timezone1args-1">
    <description> Evaluates The &quot;adjust-time-to-timezone&quot; function with the arguments set as follows: $arg = xs:time(lower bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;00:00:00Z&quot;),xs:dayTimeDuration(&quot;-PT10H&quot;))</test>
    <result-string>xs:string('14:00:00-10:00')</result-string>
    <result>
      <assert-string-value>14:00:00-10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone1args-2">
    <description> Evaluates The &quot;adjust-time-to-timezone&quot; function with the arguments set as follows: $arg = xs:time(mid range) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;08:03:35Z&quot;),xs:dayTimeDuration(&quot;-PT10H&quot;))</test>
    <result-string>xs:string('22:03:35-10:00')</result-string>
    <result>
      <assert-string-value>22:03:35-10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone1args-3">
    <description> Evaluates The &quot;adjust-time-to-timezone&quot; function with the arguments set as follows: $arg = xs:time(upper bound) </description>
    <created by="Carmelo Montanez" on="2004-12-13"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;23:59:59Z&quot;),xs:dayTimeDuration(&quot;-PT10H&quot;))</test>
    <result-string>xs:string('13:59:59-10:00')</result-string>
    <result>
      <assert-string-value>13:59:59-10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-1">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 1 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-05:00&quot;),xs:dayTimeDuration(&quot;-PT5H0M&quot;))</test>
    <result-string>xs:string('10:00:00-05:00')</result-string>
    <result>
      <assert-string-value>10:00:00-05:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-2">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 2 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;),xs:dayTimeDuration(&quot;-PT5H0M&quot;))</test>
    <result-string>xs:string('12:00:00-05:00')</result-string>
    <result>
      <assert-string-value>12:00:00-05:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-3">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 3 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <dependency type="spec" value="XP30+ XQ10+"/>
    <test>let $tz := xs:dayTimeDuration(&quot;-PT10H&quot;) 
         return fn:adjust-time-to-timezone(xs:time(&quot;10:00:00&quot;), $tz)
      </test>
    <result-string>xs:string('10:00:00-10:00')</result-string>
    <result>
      <assert-string-value>10:00:00-10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-4">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 4 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <dependency type="spec" value="XP30+ XQ10+"/>
    <test>let $tz := xs:dayTimeDuration(&quot;-PT10H&quot;) 
         return fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), $tz)
      </test>
    <result-string>xs:string('07:00:00-10:00')</result-string>
    <result>
      <assert-string-value>07:00:00-10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-5">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 5 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-05:00&quot;),())</test>
    <result-string>xs:string('10:00:00')</result-string>
    <result>
      <assert-string-value>10:00:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-6">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 6 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), ())</test>
    <result-string>xs:string('10:00:00')</result-string>
    <result>
      <assert-string-value>10:00:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-7">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as per example 7 (for this function) of the FO specs. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), xs:dayTimeDuration(&quot;PT10H&quot;))</test>
    <result-string>xs:string('03:00:00+10:00')</result-string>
    <result>
      <assert-string-value>03:00:00+10:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-8">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function using the empty sequence as the first argument, Uses the count function to avoid empty file. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:count(fn:adjust-time-to-timezone((),()))</test>
    <result-string>xs:string('0')</result-string>
    <result>
      <assert-string-value>0</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-9">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as part of a subtraction expression, whicg results on a negative number. Uses two adjust-time-to-timezone functions. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;09:00:00Z&quot;),()) - fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())</test>
    <result-string>xs:string('-PT1H')</result-string>
    <result>
      <assert-string-value>-PT1H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-10">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as part of an subtraction expression. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),()) - fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())</test>
    <result-string>xs:string('PT0S')</result-string>
    <result>
      <assert-string-value>PT0S</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-11">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as an argument to a string function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),()))</test>
    <result-string>xs:string('10:00:00')</result-string>
    <result>
      <assert-string-value>10:00:00</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-12">
    <description>Test Description: Evaluates The string value &quot;adjust-time-to-timezone&quot; function as an argument to a boolean function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:boolean(fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-13">
    <description>Test Description: Evaluates The string value of &quot;adjust-time-to-timezone&quot; function as an argument to the &quot;fn:not&quot; function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:not(fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())))</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-14">
    <description>Test Description: Evaluates The string value of &quot;adjust-time-to-timezone&quot; function part of a boolean (or) expression and the fn:true function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())) or fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-15">
    <description>Test Description: Evaluates The string value of &quot;adjust-time-to-timezone&quot; function as part of a boolean (or) expression and the fn:false function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())) or fn:false()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-16">
    <description>Test Description: Evaluates The string value of &quot;adjust-time-to-timezone&quot; function as part of a boolean (and) expression and the fn:true function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())) and fn:true()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-17">
    <description>Test Description: Evaluates The string value of &quot;adjust-time-to-timezone&quot; function as part of a boolean (and) expression and the fn:false function. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:string(fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),())) and fn:false()</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-18">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as part of a subtraction expression, which results on a negative number. Uses one adjust-time-to-timezone function and one xs:time constructor. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <dependency type="spec" value="XP30+ XQ10+"/>
    <test>let $tz := xs:dayTimeDuration(&quot;PT10H&quot;) 
         return fn:adjust-time-to-timezone(xs:time(&quot;01:00:00Z&quot;),$tz) - xs:time(&quot;10:00:00Z&quot;)
      </test>
    <result-string>xs:string('-PT9H')</result-string>
    <result>
      <assert-string-value>-PT9H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-19">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function where an xs:time value is subtracted. Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <dependency type="spec" value="XP30+ XQ10+"/>
    <test>let $tz := xs:dayTimeDuration(&quot;PT10H&quot;) 
         return fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),$tz) - xs:time(&quot;09:00:00Z&quot;)
      </test>
    <result-string>xs:string('PT1H')</result-string>
    <result>
      <assert-string-value>PT1H</assert-string-value>
    </result>
  </test-case>
  <test-case name="fn-adjust-time-to-timezone-20">
    <description>Test Description: Evaluates The &quot;adjust-time-to-timezone&quot; function as part of a comparisson expression (ge operator). Use zulu timezone and empty sequence for 2nd argument. </description>
    <created by="Carmelo Montanez" on="2005-09-10"/>
    <test>fn:adjust-time-to-timezone(xs:time(&quot;10:00:00Z&quot;),()) ge fn:adjust-time-to-timezone(xs:time(&quot;11:00:00Z&quot;),())</test>
    <result-string>xs:boolean('false')</result-string>
    <result>
      <assert-false/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-1">
    <description> A test whose essence is: `adjust-time-to-timezone()`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone()</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-2">
    <description> A test whose essence is: `adjust-time-to-timezone((), (), &quot;WRONG PARAM&quot;)`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone((), (), &quot;WRONG PARAM&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0017&quot;))</result-string>
    <result>
      <error code="XPST0017"/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-3">
    <description> A test whose essence is: `empty(adjust-time-to-timezone(()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(adjust-time-to-timezone(()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-4">
    <description> A test whose essence is: `empty(adjust-time-to-timezone((), ()))`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>empty(adjust-time-to-timezone((), ()))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-5">
    <description> A test whose essence is: `adjust-time-to-timezone(()) instance of xs:time?`. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(()) instance of xs:time?</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-6">
    <description> Passing a too large xs:dayTimeDuration as timezone to adjust-time-to-timezone(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;08:02:00&quot;), xs:dayTimeDuration(&quot;PT14H1M&quot;))</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODT0003&quot;))</result-string>
    <result>
      <error code="FODT0003"/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-7">
    <description> Passing a too small xs:dayTimeDuration as timezone to adjust-time-to-timezone(). </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;08:02:00&quot;), xs:dayTimeDuration(&quot;-PT14H1M&quot;))</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODT0003&quot;))</result-string>
    <result>
      <error code="FODT0003"/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-8">
    <description> Passing a xs:dayTimeDuration as timezone to adjust-time-to-timezone() which isn't an integral number of minutes. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;08:02:00&quot;), xs:dayTimeDuration(&quot;PT14H0M0.001S&quot;))</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODT0003&quot;))</result-string>
    <result>
      <error code="FODT0003"/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-9">
    <description> Test that the implicit timezone in the dynamic context is used if $timezone is empty; indirectly also tests context stability. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>timezone-from-time(adjust-time-to-timezone(xs:time(&quot;00:00:00&quot;))) eq implicit-timezone()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-10">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00&quot;), xs:dayTimeDuration(&quot;-PT5H0M&quot;)) eq xs:time(&quot;10:00:00-05:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-11">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), xs:dayTimeDuration(&quot;-PT5H0M&quot;)) eq xs:time(&quot;12:00:00-05:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-12">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00&quot;), xs:dayTimeDuration(&quot;-PT10H&quot;)) eq xs:time(&quot;10:00:00-10:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-13">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), xs:dayTimeDuration(&quot;-PT10H&quot;)) eq xs:time(&quot;07:00:00-10:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-14">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00&quot;), ()) eq xs:time(&quot;10:00:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-15">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), ()) eq xs:time(&quot;10:00:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-AdjTimeToTimezoneFunc-16">
    <description> Example from FO. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>adjust-time-to-timezone(xs:time(&quot;10:00:00-07:00&quot;), xs:dayTimeDuration(&quot;PT10H&quot;)) eq xs:time(&quot;03:00:00+10:00&quot;)</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-adjust-time-to-timezone-001">
    <description>Check optimization codepath in adjust-time-to-timezone </description>
    <created by="Oliver Hallam" on="2008-04-10"/>
    <test>adjust-time-to-timezone(current-time(), implicit-timezone()) eq current-time()</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="cbcl-adjust-time-to-timezone-002">
    <description>Trigger EvaluateToItem in adjust-time-to-timezone </description>
    <created by="Oliver Hallam" on="2008-04-10"/>
    <test>adjust-time-to-timezone(xs:time(&quot;12:00:00Z&quot;)) eq adjust-time-to-timezone(xs:time(&quot;13:00:00+01:00&quot;))</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
</test-set>