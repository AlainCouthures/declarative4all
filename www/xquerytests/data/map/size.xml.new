<?xml version="1.0" encoding="UTF-8"?>
<test-set name="map-size" xmlns="http://www.w3.org/2010/09/qt-fots-catalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <description>Tests for the map:size function introduced in XPath 3.0</description>
  <link document="http://www.w3.org/TR/xpath-functions-30/" idref="func-map-size" type="spec"/>
  <dependency type="spec" value="XT30+"/>
  <test-case name="map-size-001">
    <description>Size of empty map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map{})</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-002">
    <description>Size of empty map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:new(()))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-003">
    <description>Size of singleton map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map{&quot;a&quot;:=1})</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-004">
    <description>Size of singleton map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:entry(&quot;a&quot;, &quot;1&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-005">
    <description>Size of two-entry map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:new((map:entry(&quot;a&quot;, &quot;1&quot;), map:entry(&quot;b&quot;, 2))))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>2</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-006">
    <description>Size of two-entry map</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map{&quot;a&quot;:=1, &quot;b&quot;:=2})</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>2</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-007">
    <description>Elimination of duplicates</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map{&quot;a&quot;:=1, &quot;a&quot;:=2})</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-008">
    <description>Elimination of duplicates</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:new((map:entry(&quot;a&quot;,1), map:entry(&quot;a&quot;,2))))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-009">
    <description>Size after removing an entry</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:remove(map{&quot;a&quot;:=1,&quot;b&quot;:=2}, &quot;b&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-010">
    <description>Size after removing the only entry</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:remove(map:entry(1,2),1))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-011">
    <description>Size after removing the only two entries</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:remove(map:remove(map{&quot;a&quot;:=1,&quot;b&quot;:=2},&quot;b&quot;),&quot;a&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>0</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-012">
    <description>Size after adding a NaN entry</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map{number('NaN'):=1,&quot;b&quot;:=2})</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>1</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
  <test-case name="map-size-013">
    <description>Size after a null remove operation</description>
    <created by="Michael Kay, Saxonica" on="2011-03-27"/>
    <test>map:size(map:remove(map{&quot;a&quot;:=1,&quot;b&quot;:=2}, &quot;c&quot;))</test>
    <result-string/>
    <result>
      <all-of>
        <assert-eq>2</assert-eq>
        <assert-type>xs:integer</assert-type>
      </all-of>
    </result>
  </test-case>
</test-set>