<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="math-tan" covers="math-tan">
    <description>Tests for the math:tan function introduced in XPath 3.0</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-tan"/>
    <dependency type="spec" value="XP30+ XQ30+"/>

    <test-case name="math-tan-001">
        <description>Evaluate the function math:tan() with the argument ()</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(())</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="math-tan-002">
        <description>Evaluate the function math:tan() with the argument 0</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(0)</test>
        <result>
            <assert-eq>0.0e0</assert-eq>
        </result>
    </test-case>
    <test-case name="math-tan-003">
        <description>Evaluate the function math:tan() with the argument -0.0e0</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(-0.0e0)</test>
        <result>
            <assert-eq>-0.0e0</assert-eq>
        </result>
    </test-case>
    <test-case name="math-tan-004">
        <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(math:pi() div 4)</test>
        <result>
            <assert>abs($result - 1.0e0) lt 0.0000001</assert>
        </result>
    </test-case>
    <test-case name="math-tan-005">
        <description>Evaluate the function math:tan() with the argument -math:pi() div 4</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(-math:pi() div 4)</test>
        <result>
            <assert>abs($result - -1.0e0) lt 0.0000001</assert>
        </result>
    </test-case>
    <test-case name="math-tan-006">
        <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <modified by="Michael Kay, Saxonica" on="2012-05-29" change="avoid function singularity, see bug 15233"/>
        <modified by="Michael Kay, Saxonica" on="2013-05-01" change="allow imprecision, see bug 18478"/>
        <environment ref="math"/>
        <test>math:tan(math:pi() div 4) - 1</test>
        <result>
            <assert>abs($result) le 1e-12</assert>
        </result>
    </test-case>
    <test-case name="math-tan-007">
        <description>Evaluate the function math:tan() with the argument math:pi() div 4</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <modified by="Michael Kay, Saxonica" on="2012-05-29" change="avoid function singularity, see bug 15233"/>
        <modified by="Michael Kay, Saxonica" on="2013-05-01" change="allow imprecision, see bug 18478"/>
        <environment ref="math"/>
        <test>math:tan(-math:pi() div 4) + 1</test>
        <result>
            <assert>abs($result) le 1e-12</assert>
        </result>
    </test-case>
    <test-case name="math-tan-008">
        <description>Evaluate the function math:tan() with the argument math:pi()</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(math:pi())</test>
        <result>
            <assert>abs($result) &lt; 1e-12</assert>
        </result>
    </test-case>
    <test-case name="math-tan-009">
        <description>Evaluate the function math:tan() with the argument xs:double('NaN')</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(xs:double('NaN'))</test>
        <result>
            <assert-string-value>NaN</assert-string-value>
        </result>
    </test-case>
    <test-case name="math-tan-010">
        <description>Evaluate the function math:tan() with the argument xs:double('INF')</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(xs:double('INF'))</test>
        <result>
            <assert-string-value>NaN</assert-string-value>
        </result>
    </test-case>
    <test-case name="math-tan-011">
        <description>Evaluate the function math:tan() with the argument xs:double('-INF')</description>
        <created by="O'Neil Delpratt, Saxonica" on="2010-12-10"/>
        <environment ref="math"/>
        <test>math:tan(xs:double('-INF'))</test>
        <result>
            <assert-string-value>NaN</assert-string-value>
        </result>
    </test-case>
</test-set>