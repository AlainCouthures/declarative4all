<?xml version="1.0" encoding="UTF-8"?>
<test-set name="prod-EmptyOrderDecl" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the EmptyOrderDecl production</description>
  <link document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-EmptyOrderDecl" type="spec"/>
  <link document="XQuery" idref="id-empty-order-decl" section-number="4.8" type="spec"/>
  <dependency type="spec" value="XQ10+"/>
  <test-case name="emptyorderdecl-1">
    <description> Evaluation of a prolog with two empty order declarations. </description>
    <created by="Carmelo Montanez" on="2005-10-13"/>
    <test>declare default order empty least; declare default order empty greatest;  &quot;aaa&quot;</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0069&quot;))</result-string>
    <result>
      <error code="XQST0069"/>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-2">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of nodes (one empty) and sort them in ascending order </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a>7</a><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-3">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of nodes (two empty) and sort them in ascending order </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a>7</a><a/><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-4">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of numbers (one that results in NaN) and sort them in ascending order </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,0 div 0E0,7) order by $i ascending return $i</test>
    <result-string>xs:string('1 4 7 NaN')</result-string>
    <result>
      <assert-string-value>1 4 7 NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-5">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of numbers (two that results in NaN) and sort them in ascending order </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,0 div 0E0,0 div 0E0,7) order by $i ascending return $i</test>
    <result-string>xs:string('1 4 7 NaN NaN')</result-string>
    <result>
      <assert-string-value>1 4 7 NaN NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-6">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of nodes (one empty) and no order by clause </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a/><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-7">
    <description> Evaluation of a prolog that specifies &quot;empty least&quot; with a set of nodes (one empty) and no order by clause </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a/><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-8">
    <description> Evaluation of a prolog that specifies &quot;empty greatest&quot; with a set of numbers (one empty) and no order by clause </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,0 div 0E0,7) return $i</test>
    <result-string>xs:string('1 4 NaN 7')</result-string>
    <result>
      <assert-string-value>1 4 NaN 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-9">
    <description> Evaluation of a prolog that specifies &quot;empty least&quot; with a set of numbers (one empty) and no order by clause </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,0 div 0E0,7) return $i</test>
    <result-string>xs:string('1 4 NaN 7')</result-string>
    <result>
      <assert-string-value>1 4 NaN 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-10">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (one empty) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) descending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a>7</a><a>4</a><a>1</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-11">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (two of them empty) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) descending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a/><a>7</a><a>4</a><a>1</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-12">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of numbers (one set to Nan Expression) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,0 div 0E0,7) order by $i descending return $i</test>
    <result-string>xs:string('NaN 7 4 1')</result-string>
    <result>
      <assert-string-value>NaN 7 4 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-13">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of numbers (two of them set to Nan Expression) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,0 div 0E0,0 div 0E0,7) order by $i descending return $i</test>
    <result-string>xs:string('NaN NaN 7 4 1')</result-string>
    <result>
      <assert-string-value>NaN NaN 7 4 1</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-14">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of nodes (one empty) sorted in ascening order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a>1</a><a>4</a><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-15">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of nodes (two of them empty) sorted in ascending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a/><a>1</a><a>4</a><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-16">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (one set to Nan Expression) sorted in ascending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,0 div 0E0,7) order by $i ascending return $i</test>
    <result-string>xs:string('NaN 1 4 7')</result-string>
    <result>
      <assert-string-value>NaN 1 4 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-17">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (two of them set to Nan Expression) sorted in ascending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,0 div 0E0,0 div 0E0,7) order by $i ascending return $i</test>
    <result-string>xs:string('NaN NaN 1 4 7')</result-string>
    <result>
      <assert-string-value>NaN NaN 1 4 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-18">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (one empty) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) descending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>7</a><a>4</a><a>1</a><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-19">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (two of them empty) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) descending return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>7</a><a>4</a><a>1</a><a/><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-20">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (one set to Nan Expression) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,0 div 0E0,7) order by $i descending return $i</test>
    <result-string>xs:string('7 4 1 NaN')</result-string>
    <result>
      <assert-string-value>7 4 1 NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-21">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (two of them set to Nan Expression) sorted in descending order. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,0 div 0E0,0 div 0E0,7) order by $i descending return $i</test>
    <result-string>xs:string('7 4 1 NaN NaN')</result-string>
    <result>
      <assert-string-value>7 4 1 NaN NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-22">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (one of them set to empty) sorted in ascending order and local order by overrides empty order declaration in prolog (empty least. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending empty least return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a>1</a><a>4</a><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-23">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of numbers (one of them set to a NaN expression) sorted in ascending order and local order by overrides empty order declaration in prolog (empty least. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,3,0 div 0E0,7) order by $i ascending empty least return $i</test>
    <result-string>xs:string('NaN 1 3 4 7')</result-string>
    <result>
      <assert-string-value>NaN 1 3 4 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-24">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of nodes (one of them set to empty) sorted in ascending order and local order by overrides empty order declaration in prolog (empty greatest. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty greatest;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by zero-or-one($i/text()) ascending empty greatest return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a>7</a><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-25">
    <description> Evaluation of empty order declaration set to &quot;empty greatest&quot; and a set of numbers (one of them set to a NaN expression) sorted in ascending order and local order by clause set to empty greatest. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty greatest;  for $i in (1,4,3,0 div 0E0,7) order by $i ascending empty greatest return $i</test>
    <result-string>xs:string('1 3 4 7 NaN')</result-string>
    <result>
      <assert-string-value>1 3 4 7 NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-26">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of nodes (one of them set to empty) sorted in ascending order and a local order by clause that overriddes empty order declaration in prolog. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by $i/text() ascending empty greatest return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a>1</a><a>4</a><a>7</a><a/>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-27">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (one of them set to a NaN expression) sorted in ascending order and local order by that overriddes empty order declaration in prolog. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,3,0 div 0E0,7) order by $i ascending empty greatest return $i</test>
    <result-string>xs:string('1 3 4 7 NaN')</result-string>
    <result>
      <assert-string-value>1 3 4 7 NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-28">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of nodes (one of them set to empty) sorted in ascending order and local order by clause set to the same value. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <dependency type="spec" value="XQ10+"/>
    <test>
      <![CDATA[declare default order empty least;  for $i in (<a>1</a>,<a>4</a>,<a></a>,<a>7</a>) order by $i/text() ascending empty least return $i]]>
    </test>
    <result-string/>
    <result>
      <assert-xml>
        <![CDATA[<a/><a>1</a><a>4</a><a>7</a>]]>
      </assert-xml>
    </result>
  </test-case>
  <test-case name="emptyorderdecl-29">
    <description> Evaluation of empty order declaration set to &quot;empty least&quot; and a set of numbers (one of them set to a NaN expression) sorted in ascending order and local order by clause set to the same value. </description>
    <created by="Carmelo Montanez" on="2005-12-06"/>
    <test>declare default order empty least;  for $i in (1,4,3,0 div 0E0,7) order by $i ascending empty least return $i</test>
    <result-string>xs:string('NaN 1 3 4 7')</result-string>
    <result>
      <assert-string-value>NaN 1 3 4 7</assert-string-value>
    </result>
  </test-case>
  <test-case name="K-EmptyOrderProlog-1">
    <description> A simple 'declare default order empty' declaration, specifying 'greatest'. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>declare(::)default order empty(::)greatest; 1 eq 1</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-EmptyOrderProlog-2">
    <description> A simple 'declare default order empty' declaration, specifying 'least'. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>declare(::)default order empty(::)least; 1 eq 1</test>
    <result-string>xs:boolean('true')</result-string>
    <result>
      <assert-true/>
    </result>
  </test-case>
  <test-case name="K-EmptyOrderProlog-3">
    <description> Two 'declare default order empty' declarations are invalid. </description>
    <created by="Frans Englich" on="2007-11-26"/>
    <test>declare(::)default order empty(::)greatest; declare(::)default order empty(::)least; 1 eq 1</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0069&quot;))</result-string>
    <result>
      <error code="XQST0069"/>
    </result>
  </test-case>
</test-set>