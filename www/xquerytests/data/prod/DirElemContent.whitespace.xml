<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="prod-DirElemContent.whitespace">
   <description>Tests for the DirElemContent.whitespace production</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-DirElemContent.whitespace"/>
   <link type="spec" document="XQuery" section-number="3.7.1.4" idref="id-whitespace"/>

   <test-case name="Constr-ws-tag-1">
      <description> strip whitespace space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-2">
      <description> strip whitespace line feed </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-3">
      <description> strip whitespace tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-4">
      <description> strip mixed whitespace </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> <a> </a> <a> </a> <a> <b> </b> </a> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem><a/><a/><a><b/></a></elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-5">
      <description> count text nodes when stripping whitespace </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; fn:count((<elem> <a> </a> <a> </a> <a> <b> </b> </a> </elem>)//text())]]></test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-6">
      <description> preserve whitespace space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>   </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>   </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-7">
      <description> preserve whitespace line feed </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>


</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>


</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-8">
      <description> preserve whitespace tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>			</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>			</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-9">
      <description> preserve mixed whitespace </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>   	
      	    <a>          	         
		
	
        </a>	
<a>        	     </a>             <a>	  <b>

         	 </b>

  </a>	

		
      </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>   	
      	    <a>          	         
		
	
        </a>	
<a>        	     </a>             <a>	  <b>

         	 </b>

  </a>	

		
      </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-tag-10">
      <description> count text nodes when preserving whitespace </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; fn:count((<elem> <a> </a> <a> </a> <a> <b> </b> </a> </elem>)//text())]]></test>
      <result>
         <assert-eq>9</assert-eq>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-1">
      <description> strip whitespace space between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> {1}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-2">
      <description> strip whitespace line feed between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> {1}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-3">
      <description> strip whitespace tab between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> {1}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-4">
      <description> strip whitespace space between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} {2}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>12</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-5">
      <description> strip whitespace line feed between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} {2}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>12</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-6">
      <description> strip whitespace tab between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} {2}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>12</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-7">
      <description> strip whitespace space between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-8">
      <description> strip whitespace line feed between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-9">
      <description> strip whitespace tab between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{1} </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-10">
      <description> strip whitespace space between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> <a/> <b/> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem><a/><b/></elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-11">
      <description> strip whitespace line feed between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> <a/> <b/> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem><a/><b/></elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-12">
      <description> strip whitespace tab between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> <a/> <b/> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem><a/><b/></elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-13">
      <description> preserve whitespace space between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>   {1}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>   1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-14">
      <description> preserve whitespace line feed between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem>


{1}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>


1</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-15">
      <description> preserve whitespace tab between open tag and enclosed expression </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-15.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-15.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-16">
      <description> preserve whitespace space between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-16.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-16.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-17">
      <description> preserve whitespace line feed between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-17.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-17.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-18">
      <description> preserve whitespace tab between enclosed expressions </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-18.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-18.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-19">
      <description> preserve whitespace space between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-19.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-19.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-20">
      <description> preserve whitespace line feed between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-20.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-20.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-21">
      <description> preserve whitespace tab between enclosed expression and close tag </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-21.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-21.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-22">
      <description> preserve whitespace space between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-22.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-22.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-23">
      <description> preserve whitespace line feed between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-23.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-23.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-enclexpr-24">
      <description> preserve whitespace tab between child elements </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-enclexpr-24.xq"/>
      <result>
         <assert-xml file="DirElemContent.whitespace/Constr-ws-enclexpr-24.out"/>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-1">
      <description> preserve leading space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> x</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem> x</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-2">
      <description> preserve leading CRLF (as newline)</description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-nobound-2.xq"/>
      <result>
         <assert>string-to-codepoints(string($result))[1] = 10</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-3">
      <description> preserve leading tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-nobound-3.xq"/>
      <result>
         <assert>string-to-codepoints(string($result))[1] = 9</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-4">
      <description> preserve trailing space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>x </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>x </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-5">
      <description> preserve trailing CRLF (as newline) </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-nobound-5.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (120, 10))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-nobound-6">
      <description> preserve trailing tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-nobound-6.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (120, 9))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-genchref-1">
      <description> preserve character reference x20 </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>&#x20;</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem> </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-genchref-2">
      <description> preserve character reference xA </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>&#xA;</elem>]]></test>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (10))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-genchref-3">
      <description> preserve character reference xD </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>&#xD;</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>&#xD;</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-genchref-4">
      <description> preserve character reference x9 </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>&#x9;</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem>	</elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-gencdata-1">
      <description> preserve cdata space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test>declare boundary-space strip; &lt;elem&gt;&lt;![CDATA[ ]]&gt;&lt;/elem&gt;</test>
      <result>
         <assert-xml><![CDATA[<elem> </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-gencdata-3">
      <description> preserve cdata tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-gencdata-3.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (9))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjchref-1">
      <description> preserve space adjacent to character reference </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem> &#x30; </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem> 0 </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjchref-2">
      <description> preserve line feed adjacent to character reference </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-adjchref-2.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (10, 48, 10))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjchref-3">
      <description> preserve tab adjacent to character reference </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-adjchref-3.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (9, 48, 9))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjcdata-1">
      <description> preserve space adjacent to cdata section </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-adjcdata-1.xq"/>
      <result>
         <assert-xml><![CDATA[<elem>  </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjcdata-2">
      <description> preserve line feed adjacent to cdata section </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-adjcdata-2.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (10, 10))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-adjcdata-3">
      <description> preserve tab adjacent to cdata section </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-adjcdata-3.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (9, 9))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-genenclexpr-1">
      <description> preserve enclosed exp space </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem>{" "}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem> </elem>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-genenclexpr-2">
      <description> preserve enclosed exp line feed </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-genenclexpr-2.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (10))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-genenclexpr-3">
      <description> preserve enclosed exp tab </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test file="DirElemContent.whitespace/Constr-ws-genenclexpr-3.xq"/>
      <result>
         <assert>deep-equal(string-to-codepoints(string($result)), (9))</assert>
      </result>
   </test-case>

   <test-case name="Constr-ws-xmlspace-1">
      <description> ignore xml:space attribute preserve </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <elem xml:space="preserve"> </elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem xml:space="preserve"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="Constr-ws-xmlspace-2">
      <description> ignore xml:space attribute strip </description>
      <created by="Andreas Behm" on="2005-01-05"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <elem xml:space="strip"> </elem>]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<elem xml:space="strip"> </elem>]]></assert-xml>
            <error code="XQDY0092"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-1">
      <description> Apply fn:string() on a direct element constructor with preserved whitespace. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; string(<e> <b/> </e>)]]></test>
      <result>
         <assert-string-value>  </assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-2">
      <description> Element constructor with no content. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<elem>{""}</elem>]]></test>
      <result>
         <assert-xml><![CDATA[<elem/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-3">
      <description> Apply fn:string to an element constructor with two text nodes. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<a>aaaa<b/>aaaa</a>)]]></test>
      <result>
         <assert-string-value>aaaaaaaa</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-4">
      <description> Serialize a direct element constructor with preserved whitespace. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <e> <b/>  </e>]]></test>
      <result>
         <assert-xml><![CDATA[<e> <b/>  </e>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-5">
      <description> xml:space declarations are ignored. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; string(<e xml:space="preserve"> </e>) eq ""]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-6">
      <description> xml:space declarations are ignored(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space strip; <e xml:space="preserve"> </e>]]></test>
      <result>
         <assert-xml><![CDATA[<e xml:space="preserve"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-7">
      <description> xml:space declarations are ignored(#3). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; string(<e xml:space="default"> </e>) eq " "]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-8">
      <description> xml:space declarations are ignored(#4). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare boundary-space preserve; <e xml:space="preserve"> </e>]]></test>
      <result>
         <assert-xml><![CDATA[<e xml:space="preserve"> </e>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-9">
      <description> No escaping mechanism applies for quotes/apostrophes inside element content. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e>'a''a'''a"a""a"""a"</e>) eq "'a''a'''a""a""""a""""""a"""]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-10">
      <description> Ensure non-boundary characters, a character reference, are handled properly. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e> &#32; </e>)]]></test>
      <result>
         <assert-string-value>   </assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-11">
      <description> Ensure non-boundary characters, CDATA, are handled properly. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;e&gt; &lt;![CDATA[ ]]&gt; &lt;/e&gt;)</test>
      <result>
         <assert-string-value>   </assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-12">
      <description> Ensure extracting the string value from mixed content involving elements is properly done. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e>123<b>XX</b>abc</e>)]]></test>
      <result>
         <assert-string-value>123XXabc</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-13">
      <description> Ensure extracting the string value from mixed content involving comments is properly done. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e>123<!-- a comment -->ab<!-- another comment -->c</e>)]]></test>
      <result>
         <assert-string-value>123abc</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-14">
      <description> Ensure extracting the string value from mixed content involving processing instructions is properly done. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e>123<?target content ?>ab<?target2 content?>c</e>)]]></test>
      <result>
         <assert-string-value>123abc</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-15">
      <description> Ensure only one text node is constructed for contiguous data. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[count(<elem>str{""}asdas{"asd", "asd", "''", ""}{''}asd{''}{''}</elem>/text())]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-16">
      <description> Test empty element content result in an element with no children. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[count(<a></a>/node())]]></test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-17">
      <description> Test empty element content result in an element with no children(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[count(<a/>/node())]]></test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-18">
      <description> Empty CDATA sections nevertheless causes whitespace to be preserved. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;elem&gt; &lt;![CDATA[]]&gt; &lt;/elem&gt;)</test>
      <result>
         <assert-string-value>  </assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-19">
      <description> Extract the string value of nested elements. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<e>e<b>ddd</b></e>)]]></test>
      <result>
         <assert-string-value>eddd</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-20">
      <description> Extract the string value of nested elements with adjacent enclosed expressions. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<e>{1}{1}{1}<e/></e>]]></test>
      <result>
         <assert-xml><![CDATA[<e>111<e/></e>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-21">
      <description> Extract the string value of nested elements with adjacent enclosed expressions(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<e><e/>{1}{1}{1}</e>]]></test>
      <result>
         <assert-xml><![CDATA[<e><e/>111</e>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-22">
      <description> It is valid to put ']]&gt;' in element content. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;e&gt;]]&gt;&lt;/e&gt;)</test>
      <result>
         <assert-string-value>]]&gt;</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-23">
      <description> Extract the string value of mixed content. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;elem&gt;&lt;![CDATA[cdat]]&gt;&lt;!-- a comment --&gt;&lt;?target content?&gt;&lt;/elem&gt;)</test>
      <result>
         <assert-string-value>cdat</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-24">
      <description> Extract the string value of mixed content(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;elem&gt; content &lt;![CDATA[ content ]]&gt; content &lt;/elem&gt;)</test>
      <result>
         <assert-string-value> content  content  content </assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-25">
      <description> Extract the string value of mixed content(#3). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>string(&lt;elem&gt;&lt;![CDATA[cdata&amp;&lt;&gt;'"&lt; ]]&gt;asda &lt;?target content?&gt;asdad&lt;/elem&gt;) eq "cdata&amp;amp;&lt;&gt;'""&amp;lt;&amp;#x20;asda asdad"</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-DirectConElemWhitespace-26">
      <description> Extract the string value of a couple of nested elements. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[string(<a> {1} <b> {1} </b> </a>)]]></test>
      <result>
         <assert-string-value>11</assert-string-value>
      </result>
   </test-case>
</test-set>