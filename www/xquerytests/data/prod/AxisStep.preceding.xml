<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-AxisStep.preceding">
   <description>Tests for the preceding axis</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-AxisStep.preceding"/>
   <link type="spec" document="XQuery" section-number="3.2.1.1" idref="axes"/>

   <test-case name="preceding-1">
      <description> Evaluation of the preceding axis for which the context node is not a node. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <test>(200)/preceding::*</test>
      <result>
         <error code="XPTY0019"/>
      </result>
   </test-case>

   <test-case name="preceding-2">
      <description> Evaluation of the preceding axis for which the given node does not exists. Uses fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>fn:count(/works/employee[1]/preceding::noSuchNode)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="preceding-3">
      <description> Evaluation of the preceding axis that is part of an "is" expression (return true). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[2]/preceding::employee) is exactly-one(/works/employee[1])</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-4">
      <description> Evaluation of the preceding axis that is part of an "is" expression (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works[1]/employee[2]/preceding::employee) is exactly-one(/works[1]/employee[2])</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="preceding-5">
      <description> Evaluation of the preceding axis that is part of an "node before" expression (return true). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[exactly-one(/works[1]/employee[2]/preceding::employee) << exactly-one(/works[1]/employee[2])]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-6">
      <description> Evaluation of the preceding axis that is part of an "node before" expression and both operands are the same (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[exactly-one(/works[1]/employee[2]/preceding::employee) << exactly-one(/works[1]/employee[2]/preceding::employee)]]></test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="preceding-7">
      <description> Evaluation of the preceding axis that is part of an "node before" expression both operands are differents (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[exactly-one(/works[1]/employee[2]/preceding::employee) << exactly-one(/works[1])]]></test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="preceding-8">
      <description> Evaluation of the preceding axis that is part of a "node after" expression (returns true). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works[1]/employee[13]) >> exactly-one(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-9">
      <description> Evaluation of the preceding axis that is part of an "node after" expression with both operands the same (returns false). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works[1]/employee[2]/preceding::employee) >> exactly-one(/works[1]/employee[2]/preceding::employee)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="preceding-10">
      <description> Evaluation of the preceding axis that is part of an "node after" expression with different operands (returns false). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works[1]/employee[13]) >> exactly-one(/works[1]/employee[2]/preceding::employee)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-11">
      <description> Evaluation of the preceding axis that is part of an "union " operation. Both operands are the same. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2]/preceding::day)</test>
      <result>
         <assert-xml><![CDATA[<day>Monday</day>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="preceding-12">
      <description> Evaluation of the preceding axis that is part of an "union" operation. Both operands are different </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2])</test>
      <result>
         <assert-xml><![CDATA[<day>Monday</day><day>Tuesday</day>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="preceding-13">
      <description> Evaluation of the preceding axis that is part of an "intersect" operation. Both operands are the same. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day) intersect (/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</test>
      <result>
         <assert-xml><![CDATA[<day>Monday</day>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="preceding-14">
      <description> Evaluation of the preceding axis that is part of an "except" operation. Both operands are the same. Uses fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>fn:count((/works[1]/employee[12]/preceding::employee) except (/works[1]/employee[12]/preceding::employee))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="preceding-15">
      <description> Evaluation of the preceding axis that is part of an "except" operation. Both operands are different. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[2]/preceding::day)</test>
      <result>
         <assert-xml><![CDATA[<day>Tuesday</day>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="preceding-16">
      <description> Evaluation of the preceding axis that is part of a boolean expression ("and" and fn:true(). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/preceding::employee) and fn:true()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-17">
      <description> Evaluation of the preceding axis that is part of a boolean expression ("and" and fn:false()). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/preceding::employee) and fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="preceding-18">
      <description> Evaluation of the preceding axis that is part of a boolean expression ("or" and fn:true()). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/preceding::employee) or fn:true()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-19">
      <description> Evaluation of the preceding axis that is part of a boolean expression ("or" and fn:false()). </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>(/works[1]/employee[12]/preceding::employee) or fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-20">
      <description> Evaluation of the preceding axis that used as part of the deep-equal-function. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <environment ref="works-mod"/>
      <test>fn:deep-equal(/works[1]/employee[12]/preceding::employee,/works[1]/employee[12]/preceding::employee)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="preceding-21">
      <description> Evaluation of the preceding axis used together with a newly constructed element. Uses fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-12-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[let $var := <anElement>Some Content</anElement> return fn:count($var/preceding::*)]]></test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="preceding-22">
      <description> Evaluation of the preceding axis from the last node in the document. </description>
      <created by="Frans Englich" on="2005-12-13"/>
      <environment>
         <source role="." file="AxisStep.preceding/SmallTree.xml">
           <description/>
           <created by="Frans Englich" on="2008-04-03"/>
         </source>
      </environment>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<result> { (//node())[last()]/preceding::node() } </result>]]></test>
      <result>
         <assert-xml><![CDATA[<result>
    <section1 noValue="">
        text1
        <?target1 data1?>
        <?target2 data2?>
        <?target3 data3?>
    </section1>
        text1
        <?target1 data1?>
        <?target2 data2?>
        <?target3 data3?>
    
    <section2 attr1="1" attr2="2"/>
    <!-- comment1 -->
    <section3/>
    <!-- comment2 -->
    <!-- comment3 -->
    <noChildren/>
    <oneTextChild>theTextChild2</oneTextChild>theTextChild2</result>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="preceding-23">
      <description> Evaluation of the preceding axis from the last node in the document, containing only attributes and elements. </description>
      <created by="Frans Englich" on="2005-12-13"/>
      <environment>
         <source role="." file="AxisStep.preceding/AttributesAndElements.xml">
            <description/>
            <created by="Frans Englich" on="2008-04-03"/>
         </source>
      </environment>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<result> { (//node())[last()]/preceding::node(), empty((//node())[last()]/preceding::node()) } </result>]]></test>
      <result>
         <assert-xml><![CDATA[<result>true</result>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-1">
      <description> Evaluate the child node from the last node in a tree. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child/> <child/> <child> <child2> <child3> <leaf/> </child3> </child2> </child> </root>; empty(root($i)/preceding::node())]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-2">
      <description> Evaluate from a node that has no preceding nodes. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <child2> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; empty(root($i)//leaf/preceding::node())]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-3">
      <description> Apply a numeric predicate to axis preceding. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; root($i)//leaf/preceding::node()[1]]]></test>
      <result>
         <assert-xml><![CDATA[<preceding1/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-4">
      <description> Apply a numeric predicate to axis preceding, combined with a numeric predicate. The paranteses ensures the step is parsed as a primary expression, and hence is in document order, not reversed. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; root($i)//leaf/(preceding::node())[1]]]></test>
      <result>
         <assert-xml><![CDATA[<preceding2/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-5">
      <description> Apply a numeric predicate to axis preceding, combined with fn:last(). The paranteses ensures the step is parsed as a primary expression, and hence is in document order, not reversed. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; root($i)//leaf/(preceding::node())[last()]]]></test>
      <result>
         <assert-xml><![CDATA[<preceding1/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-6">
      <description> Apply fn:last() to axis preceding. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; root($i)//leaf/preceding::node()[last()]]]></test>
      <result>
         <assert-xml><![CDATA[<preceding2/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-7">
      <description> Apply fn:count() to axis preceding. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; count(root($i)//leaf/preceding::node())]]></test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-precedingAxis-8">
      <description> Apply fn:count() to axis preceding. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[declare variable $i := <root> <child> <preceding2/> <child2> <preceding1/> <child3> <leaf/> </child3> <following/> </child2> <following/> </child> <following/> </root>; root($i)//count(preceding::*)]]></test>
      <result>
         <assert-string-value>0 0 0 1 1 2 2 4 6 8</assert-string-value>
      </result>
   </test-case>
</test-set>