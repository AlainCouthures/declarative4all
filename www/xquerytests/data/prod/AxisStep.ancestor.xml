<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-AxisStep.ancestor">
   <description>Tests for the AxisStep production</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-AxisStep"/>
   <link type="spec" document="XQuery" section-number="3.2.1.1" idref="axes"/>

   <test-case name="ancestor-1">
      <description> Evaluation of the ancestor axis for which the context node is not a node. </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <test>(200)/ancestor::*</test>
      <result>
         <error code="XPTY0019"/>
      </result>
   </test-case>

   <test-case name="ancestor-2">
      <description> Evaluation of the ancestor axis for which the given node does not exists. Uses fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>fn:count(/works/employee[1]/ancestor::noSuchNode)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="ancestor-3">
      <description> Evaluation of the ancestor axis that is part of an "is" expression (return true). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-4">
      <description> Evaluation of the ancestor axis that is part of an "is" expression (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works/employee[1])</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="ancestor-5">
      <description> Evaluation of the ancestor axis that is part of an "node before" expression (return true). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test><![CDATA[exactly-one(/works/employee[1]/ancestor::works) << exactly-one(/works/employee[1])]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-6">
      <description> Evaluation of the ancestor axis that is part of an "node before" expression and both operands are the same (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test><![CDATA[exactly-one(/works/employee[1]/ancestor::works) << exactly-one(/works/employee[1]/ancestor::works)]]></test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="ancestor-7">
      <description> Evaluation of the ancestor axis that is part of an "node before" expression both operands are differents (return false). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test><![CDATA[exactly-one(/works/employee[1]/ancestor::works) << exactly-one(/works/employee[1])]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-8">
      <description> Evaluation of the ancestor axis that is part of an "node after" expression (returns true). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[1]) >> exactly-one(/works/employee[1]/ancestor::works)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-9">
      <description> Evaluation of the ancestor axis that is part of an "node after" expression with both operands the same (returns false). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[1]/ancestor::works) >> exactly-one(/works/employee[1]/ancestor::works)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="ancestor-10">
      <description> Evaluation of the ancestor axis that is part of an "node after" expression with both operands the same (returns false). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>exactly-one(/works/employee[1]/ancestor::works) >> exactly-one(/works/employee[1]/hours)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="ancestor-11">
      <description> Evaluation of the ancestor axis that is part of an "union " operation. Both operands are the same. </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/*/day/ancestor::overtime) | (/works/employee[12]/*/day/ancestor::overtime)</test>
      <result>
         <assert-xml><![CDATA[<overtime>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="ancestor-12">
      <description> Evaluation of the ancestor axis that is part of an "union" operation. Both operands are different </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/*/day[1]/ancestor::overtime) | (/works/employee[12]/*/day[2]/ancestor::overtime)</test>
      <result>
         <assert-xml><![CDATA[<overtime>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="ancestor-13">
      <description> Evaluation of the ancestor axis that is part of an "intersect" operation. Both operands are the same. Uses fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day/ancestor::employee) intersect (/works/employee[12]/overtime/day/ancestor::employee)</test>
      <result>
         <assert-xml><![CDATA[<employee name="John Doe 12" gender="male">
   <empnum>E4</empnum>
   <pnum>P4</pnum>
   <hours>40</hours>
   <overtime>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="ancestor-14">
      <description> Evaluation of the ancestor axis that is part of an "except" operation. Both operands are the same. Uses fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>fn:count((/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[ancestor::overtime]))</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="ancestor-15">
      <description> Evaluation of the ancestor axis that is part of an "except" operation. Both operands are different. Uses fn:count to avoid empty file </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[1])</test>
      <result>
         <assert-string-value>Tuesday</assert-string-value>
      </result>
   </test-case>

   <test-case name="ancestor-16">
      <description> Evaluation of the ancestor axis that is part of a boolean expression ("and" and fn:true(). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:true()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-17">
      <description> Evaluation of the ancestor axis that is part of a boolean expression ("and" and fn:false()). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:false()</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="ancestor-18">
      <description> Evaluation of the ancestor axis that is part of a boolean expression ("or" and fn:true()). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:true()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-19">
      <description> Evaluation of the ancestor axis that is part of a boolean expression ("or" and fn:false()). </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:false()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-20">
      <description> Evaluation of the ancestor axis that used as part of the deep-equal-function. </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <environment ref="works-mod"/>
      <test>fn:deep-equal(/works/employee[12]/overtime/ancestor::works,/works/employee[12]/overtime/ancestor::works)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="ancestor-21">
      <description> Evaluation of the ancestor axis used together with a newly constructed element. Uses fn:count to avoid empty file. </description>
      <created by="Carmelo Montanez" on="2005-12-12"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[let $var := <anElement>Some Content</anElement> return fn:count($var/ancestor::*)]]></test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>

   <test-case name="unabbreviatedSyntax-10">
      <description> Evaluate selecting an ancestor (ancestor::employee)- Select the "employee" ancestors of the context node </description>
      <created by="Carmelo Montanez" on="2005-07-08"/>
      <environment ref="works-mod"/>
      <test>for $h in (/works/employee[1]/hours) return $h/ancestor::employee</test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-1">
      <description> Apply the ancestor axis to a single processing instruction. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[empty(<?target data?>/ancestor::node())]]></test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-2">
      <description> Apply the ancestor axis to a single comment. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[empty(<!-- content -->/ancestor::node())]]></test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-3">
      <description> Apply the ancestor axis to a single element. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[empty(<anElement/>/ancestor::node())]]></test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-4">
      <description> Apply the ancestor axis to a single attribute. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>empty(attribute name {"content"}/ancestor::node())</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-5">
      <description> Apply the ancestor axis to a single document node. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>empty(document {()}/ancestor::node())</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-6">
      <description> Apply the ancestor axis to a single document node with content. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[empty(document {<e><f/><f/>text</e>}/ancestor::node())]]></test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-7">
      <description> Apply the ancestor axis to a simple tree constructed with constructors. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>/b/c/ancestor::*]]></test>
      <result>
         <assert-xml><![CDATA[<a><b c=""><c/></b><d/></a><b c=""><c/></b>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-8">
      <description> Apply the ancestor axis to a simple tree constructed with constructors, combined with a [1]-predicate. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>/b/c/ancestor::*[1]]]></test>
      <result>
         <assert-xml><![CDATA[<b c=""><c/></b>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-9">
      <description> Apply the ancestor axis to a simple tree constructed with constructors, combined with a [1]-predicate. Paranteses are added to ensure that the result of the axis step is delivered in document order. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>/b/c/(ancestor::*)[1]]]></test>
      <result>
         <assert-xml><![CDATA[<a><b c=""><c/></b><d/></a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-10">
      <description> Apply axis ancestor on a single root node. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[empty(<element/>/ancestor::node())]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-11">
      <description> Apply the ancestor axis to a simple tree constructed with constructors, combined with fn:last(). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>/b/c/ancestor::*[fn:last()]]]></test>
      <result>
         <assert-xml><![CDATA[<a><b c=""><c/></b><d/></a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-12">
      <description> Apply the ancestor axis to a simple tree constructed with constructors, combined with fn:last(). Paranteses are added to ensure that the result of the axis step is delivered in document order. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>/b/c/(ancestor::*)[last()]]]></test>
      <result>
         <assert-xml><![CDATA[<b c=""><c/></b>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-13">
      <description> Apply axis ancestor on a single element. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[1, <element/>/ancestor::node(), 1]]></test>
      <result>
         <assert-string-value>1 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-14">
      <description> Apply axis ancestor to a single processing instruction. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[1, <?target data?>/ancestor::node(), 1]]></test>
      <result>
         <assert-string-value>1 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-15">
      <description> Apply axis ancestor to a single attribute. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>1, attribute name {"content"}/ancestor::node(), 1</test>
      <result>
         <assert-string-value>1 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-16">
      <description> Apply axis ancestor to a single comment. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[1, <!-- content -->/ancestor::node(), 1]]></test>
      <result>
         <assert-string-value>1 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-17">
      <description> Apply axis ancestor to a single document node. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>document {()}/ancestor::node(), count(document {()}/ancestor::node()), 1</test>
      <result>
         <any-of>
            <assert-string-value>0 1</assert-string-value>
            <error code="XPST0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-18">
      <description> Apply axis ancestor to a single text node. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>1, text {""}/ancestor::node(), 1</test>
      <result>
         <assert-string-value>1 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-19">
      <description> Apply fn:count() to the result of axis ancestor. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[count(<a> <b c=""> <c/> </b> <d/> </a>/b/c/(ancestor::*))]]></test>
      <result>
         <assert-string-value>2</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-20">
      <description> Apply fn:count() to the result of axis ancestor(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<a> <b c=""> <c/> </b> <d/> </a>//count(ancestor::*)]]></test>
      <result>
         <assert-string-value>0 1 2 1</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-ancestorAxis-21">
      <description> Use positional predicates. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[<r> <a> <b> <c/> </b> </a> </r>/a/b/c/(ancestor::*[1], ancestor::*[2], ancestor::*[last()], ancestor::*[10])]]></test>
      <result>
         <assert-xml><![CDATA[<r><a><b><c/></b></a></r><a><b><c/></b></a><b><c/></b>]]></assert-xml>
      </result>
   </test-case>
</test-set>
