<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-VarDefaultValue" covers="default-external-var">
   <description>Tests for the prod-VarDefaultValue operator</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/"
         idref="func-prod-VarDefaultValue"/>
   <link type="spec" document="XQuery 1.1" section-number="4.15"
         idref="id-variable-declarations"/>
         
   <dependency type="spec" value="XQ30+"/>      

   <environment name="hats" >
      <schema uri="http://www.w3.org/XQueryTest/hats" file="SchemaImport/hats.xsd">
         <description>A schema defining a motley collection of types.</description>
         <created by="Michael Kay" on="2006-11-14"/>
      </schema>
   </environment>

   <test-case name="extvardef-001">
      <description>external variable with a default value </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[declare variable $ext external := 0; <a>{$ext}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>0</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-001a">
      <description>external variable with a default value </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <environment>
         <param name="ext" select="5" declared="true"/>
      </environment>
      <test><![CDATA[declare variable $ext external := 0; $ext]]></test>
      <result>
         <assert-eq>5</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-002">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[declare variable $ext as xs:integer external := 0; <a>{$ext}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>0</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-002a">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <environment>
         <param name="ext" select="5" declared="true"/>
      </environment>
      <test><![CDATA[declare variable $ext as xs:integer external := 0; <a>{$ext}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>5</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-002b">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <modified by="Michael Kay" on="2011-09-05" change="define expected error code"/>
      <environment>
         <param name="ext" select="xs:date('2008-12-01')" declared="true"/>
      </environment>
      <test><![CDATA[declare variable $ext as xs:integer external := 0; <a>{$ext}</a>]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="extvardef-003">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[declare variable $ext as xs:integer* external := (0,1,2); <a>{sum($ext)}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>3</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-003a">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <environment>
         <param name="ext" select="4,5,6" declared="true"/>
      </environment>
      <test><![CDATA[declare variable $ext as xs:integer* external := (0,1,2); <a>{sum($ext)}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>15</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-003b">
      <description>external variable with a default value and a required type </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <environment>
         <param name="ext" select="42" declared="true"/>
      </environment>
      <test><![CDATA[declare variable $ext as xs:integer* external := (0,1,2); <a>{sum($ext)}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>42</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-004">
      <description>external variable with a default value - static error - it must be an ExprSingle </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[declare variable $ext as xs:integer* external := 0,1,2; <a>{sum($ext)}</a>]]></test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="extvardef-005">
      <description>external variable with a default value - static error - it must be an ExprSingle </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[declare variable $ext as xs:integer* external := ; <a></a>]]></test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="extvardef-006">
      <description>external variable with a default value that depends on other vars </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[
         declare variable $var as xs:integer := 17; 
         declare variable $ext as element(a) external := <a>{$var}</a>; 
         <out>{$ext}</out>]]></test>
      <result>
         <assert-xml><![CDATA[<out><a>17</a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-006a">
      <description>external variable with a default value that depends on other vars </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <modified by="Michael Kay" on="2011-09-05" change="correct unintended error in test"/>
      <environment>
         <param name="ext" select="862" declared="true"/>
      </environment>
      <test><![CDATA[
        declare variable $var as xs:integer := 17; 
        declare variable $ext as xs:integer external := $var; 
        <out>{$ext}</out>
      ]]></test>
      <result>
         <assert-xml><![CDATA[<out>862</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-006b">
      <description>external variable with a default value that depends on other vars </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <modified by="Michael Kay" on="2011-09-05" change="define expected error code"/>
      <modified by="Michael Kay" on="2013-04-26" change="allow success result, see bug 21832"/>
      <environment>
         <param name="ext" select="862" declared="true"/>
      </environment>
      <test><![CDATA[
        declare variable $var as xs:integer := 17; 
        declare variable $ext as xs:integer external := <a>{$var}</a>; 
        <out>{$ext}</out>
      ]]></test>
      <result>
         <any-of>
            <error code="XPTY0004"/>
            <assert-xml><![CDATA[<out>862</out>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="extvardef-007">
      <description>external variable with a default value that depends on context </description>
      <created by="Michael Kay" on="2008-12-01"/>
      <test><![CDATA[
        declare variable $ext as xs:date external := current-date() + xs:dayTimeDuration('P30D'); 
        $ext gt xs:date('2008-12-30')
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="extvardef-008">
     <description>If no value is provided for the variable by the external enviroment, and no default value specified -> err:XPDY0002. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[declare variable $x external; $x]]></test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>

   <test-case name="extvardef-009">
     <description>It is implementation-dependent whether an error is raised if no value is provided by the external environment, no default value is specified, and the evaluation of the query does not reference the value of the variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[declare variable $x external; "result"]]></test>
      <result>
         <any-of>
           <assert-string-value>result</assert-string-value>
           <error code="XPDY0002"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="extvardef-010">
     <description>The variable values contain the values of all variables present in the static context (in this case, forward references). </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $a := 1;
        declare variable $x external := $a + $b;
        declare variable $b external := 2;
        $x
      ]]></test>
      <result>
        <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-010a">
     <description>Functions contain the values of all variables present in the static context. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $a external := 6 + local:foo();
        declare variable $b external := 12;
        declare function local:foo() { $b + 10 };
        $a
      ]]></test>
      <result>
        <assert-eq>28</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-011">
     <description>Cycles are forbidden. </description>
      <created by="David Graf" on="2011-12-02"/>
      <modified by="Michael Kay" on="2012-05-17" change="fix bug 15691"/>
      <modified by="O'Neil Delpratt" on="2012-10-08" change="fix bug 19331 change error code" />
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $a := $x;
        declare variable $x external := $a + 2;
        $x
      ]]></test>
      <result>
         <error code="XQDY0054"/>
      </result>
   </test-case>

   <test-case name="extvardef-011a">
     <description>Cycles are forbidden. </description>
      <created by="David Graf" on="2011-12-02"/>
      <modified by="O'Neil Delpratt" on="2012-10-08" change="fix bug 19331: change error code" />
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x external := 3 + local:foo();
        declare variable $b external := 2 + local:foo();

        declare function local:foo()
        {
         $b
         };

         $x
      ]]></test>
      <result>
         <error code="XQDY0054"/>
      </result>
   </test-case>

   <test-case name="extvardef-012">
     <description>The named functions component contains a function for each statically known function signature present in the static context. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare function local:aaa() { 1 };
        declare variable $x external := local:bbb() + local:aaa();
        declare function local:bbb() { 2 };
        $x 
      ]]></test>
      <result>
        <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-013">
      <description>The named functions component contains a function for each statically known function signature present in the static context. </description>
      <created by="David Graf" on="2011-12-02"/>
      <environment>
         <param name="y" select="16" declared="true"/>
      </environment>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $y external;
        declare variable $z external := 10;
        declare function local:aaa() { $z };
        declare variable $x external := local:bbb() + local:aaa() + 2;
        declare function local:bbb() { $y };
        $x 
      ]]></test>
      <result>
        <assert-eq>28</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-014">
      <description>Context item in default value for external variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <environment ref="works-mod"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x external := /works/employee[@name eq "Jane Doe 1"];
        fn:count($x)
      ]]></test>
      <result>
        <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-015" covers="context-item-decl">
      <description>It is a static error if the initializer of the context item depends on the context item. </description>
      <created by="David Graf" on="2011-12-02"/>
      <modified by="O'Neil Delpratt" on="2012-10-08" change="fix bug 19331 change error code" />
      <modified by="Tim Mills" on="2012-11-05" change="fix bug 19331 change error code" />
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $y := /works/employee;
        declare context item := $y[9];
        declare variable $x external := fn:position();
        $x
      ]]></test>
      <result>
         <error code="XQDY0054"/>
      </result>
   </test-case>

   <test-case name="extvardef-016a" covers="context-item-decl">
     <description>Context position in default value for external variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <modified by="O'Neil Delpratt" on="2012-05-29" change="fix bug 16034"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $y := (<a>1</a>,<a>2</a>,<a>3</a>,<a>4</a>,<a>5</a>,<a>6</a>,<a>7</a>,<a>8</a>,<a>9</a>,<a>10</a>);
        declare context item := $y[3];
        declare variable $x external := fn:position();
        $x
      ]]></test>
      <result>
        <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-016b" covers="context-item-decl">
      <description>Context last in default value for external variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <modified by="O'Neil Delpratt" on="2012-05-29" change="fix bug 16034"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $y := <root><a>1</a>,<a>2</a>,<a>3</a>,<a>4</a>,<a>5</a>,<a>6</a>,<a>7</a>,<a>8</a>,<a>9</a>,<a>10</a></root>;
        declare context item := $y;
        declare variable $x external := fn:last();
        $x
      ]]></test>
      <result>
        <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-017">
      <description>Implicit cast of external variable default. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x as xs:decimal external := xs:integer(10);
        $x
      ]]></test>
      <result>
        <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-018">
      <description>Undeclared variable in external variable default value. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x external := $a + 10;
        $x
      ]]></test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>

   <test-case name="extvardef-019">
      <description>External default variable used in external default variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x external := 10;
        declare variable $y external := 18 + $x;
        $y
      ]]></test>
      <result>
        <assert-eq>28</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-020">
      <description>External default variable used indirectly in external default variable. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x external := 5;
        declare variable $a := $x + 2;
        declare function local:foo() {$x +$a};
        declare variable $y external := 11 + local:foo() + $x;
        $y
      ]]></test>
      <result>
        <assert-eq>28</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-021">
      <description>External default variable used indirectly in external default variable, with implicit cast. </description>
      <created by="David Graf" on="2011-12-02"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare variable $x as xs:integer external := xs:int(5);
        declare variable $y as xs:decimal external := $x;
        $y instance of xs:decimal
      ]]></test>
      <result>
        <assert-eq>fn:true()</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-022">
      <description>Using external default variable in a function declared before the variable. </description>
      <created by="David Graf" on="2011-12-05"/>
      <dependency type="spec" value="XQ30+"/>
      <test><![CDATA[
        declare function local:foo() {
          $x
        };
        declare variable $x external := 5;
        local:foo()
      ]]></test>
      <result>
        <assert-eq>5</assert-eq>
      </result>
   </test-case>

   <test-case name="extvardef-023">
      <description>Schema validation in default external var. </description>
      <created by="David Graf" on="2011-12-05"/>
      <environment ref="hats"/>
      <dependency type="spec" value="XQ30+"/>
      <dependency type="feature" value="schemaImport"/>
      <test><![CDATA[
        declare construction strip; 
        import schema default element namespace "http://www.w3.org/XQueryTest/hats";
        declare variable $x :=
          validate strict {
            <abf> 
              <a/> <b/> <b/> <f/> <f/> <f/> 
            </abf>};
        $x
      ]]></test>
      <result>
        <assert-xml><![CDATA[<abf xmlns="http://www.w3.org/XQueryTest/hats"><a/><b/><b/><f/><f/><f/></abf>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-024">
      <description>Schema validation failure in default external var. </description>
      <created by="David Graf" on="2011-12-05"/>
      <environment ref="hats"/>
      <dependency type="spec" value="XQ30+"/>
      <dependency type="feature" value="schemaImport"/>
      <test><![CDATA[
        declare construction strip; 
        import schema default element namespace "http://www.w3.org/XQueryTest/hats"; 
        declare variable $x external :=
          validate strict {
            <abc> 
              <a/> <b/> <b/> <f/> <f/> <f/> 
            </abc>};
        $x
      ]]></test>
      <result>
         <error code="XQDY0084"/>
      </result>
   </test-case>

   <test-case name="extvardef-025">
      <description>Schema validation in default external var, incl variable type. Type match. </description>
      <created by="David Graf" on="2011-12-05"/>
      <environment ref="hats"/>
      <dependency type="spec" value="XQ30+"/>
      <dependency type="feature" value="schemaImport"/>
      <test><![CDATA[
        declare construction strip; 
        import schema namespace hats="http://www.w3.org/XQueryTest/hats"; 
        declare variable $x as schema-element(hats:abf) external :=
          validate strict {
            <hats:abf> 
              <hats:a/> <hats:b/> <hats:b/> <hats:f/> <hats:f/> <hats:f/> 
            </hats:abf>};
        $x
      ]]></test>
      <result>
        <assert-xml><![CDATA[<hats:abf xmlns:hats="http://www.w3.org/XQueryTest/hats"><hats:a/><hats:b/><hats:b/><hats:f/><hats:f/><hats:f/></hats:abf>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="extvardef-026">
      <description>Schema validation in default external var, incl variable type. Type missmatch. </description>
      <created by="David Graf" on="2011-12-05"/>
      <environment ref="hats"/>
      <dependency type="spec" value="XQ30+"/>
      <dependency type="feature" value="schemaImport"/>
      <test><![CDATA[
        declare construction strip; 
        import schema namespace hats="http://www.w3.org/XQueryTest/hats"; 
        declare variable $x as schema-element(hats:s) external :=
          validate strict {
            <hats:abf> 
              <hats:a/> <hats:b/> <hats:b/> <hats:f/> <hats:f/> <hats:f/> 
            </hats:abf>};
        $x
      ]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="extvardef-027">
      <description>Schema validation in default external var, incl variable type. Validation missing. </description>
      <created by="David Graf" on="2011-12-05"/>
      <environment ref="hats"/>
      <dependency type="spec" value="XQ30+"/>
      <dependency type="feature" value="schemaImport"/>
      <test><![CDATA[
        declare construction strip; 
        import schema namespace hats="http://www.w3.org/XQueryTest/hats"; 
        declare variable $x as schema-element(hats:s) external :=
            <hats:abf> 
              <hats:a/> <hats:b/> <hats:b/> <hats:f/> <hats:f/> <hats:f/> 
            </hats:abf>;
        $x
      ]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>


</test-set>
