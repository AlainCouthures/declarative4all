<?xml version="1.0" encoding="UTF-8"?>
<test-set covers="decimal-decl" name="prod-DecimalFormatDecl" xmlns="http://www.w3.org/2010/09/qt-fots-catalog">
  <description>Tests for the XQuery 3.0 decimal format declaration, controlling the format-number() function</description>
  <link document="http://www.w3.org/TR/xpath-functions-11/" idref="func-format-number" type="spec"/>
  <dependency type="spec" value="XQ30+"/>
  <test-case name="decimal-format-01">
    <description>
        Purpose: Test of format-number with 2 arguments, showing zeroes. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format zero-digit=&quot;0&quot; grouping-separator=&quot;,&quot; decimal-separator=&quot;.&quot;;
      	format-number(2392.14*36.58,'000,000.000000')</test>
    <result-string>xs:string(&quot;087,504.481200&quot;)</result-string>
    <result>
      <assert-string-value>087,504.481200</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-02">
    <description>
        Purpose: Test of format-number and # and 0 in format string. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit=&quot;#&quot; grouping-separator=&quot;,&quot; decimal-separator=&quot;.&quot;;
      	format-number(12792.14*96.58,'##,###,000.000###')</test>
    <result-string>xs:string(&quot;1,235,464.8812&quot;)</result-string>
    <result>
      <assert-string-value>1,235,464.8812</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-03">
    <description>
        Purpose: Test of format-number on a negative number. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format minus-sign=&quot;-&quot; grouping-separator=&quot;,&quot; decimal-separator=&quot;.&quot;;
      	format-number(2792.14*(-36.58),'000,000.000###')</test>
    <result-string>xs:string(&quot;-102,136.4812&quot;)</result-string>
    <result>
      <assert-string-value>-102,136.4812</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-04">
    <description>
        Purpose: Test of format-number on a negative number; should choose second pattern. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format minus-sign=&quot;-&quot; pattern-separator=&quot;;&quot; grouping-separator=&quot;,&quot; decimal-separator=&quot;.&quot;;
      	format-number(2392.14*(-36.58),'000,000.000###;###,###.000###')</test>
    <result-string>xs:string(&quot;87,504.4812&quot;)</result-string>
    <result>
      <assert-string-value>87,504.4812</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-05">
    <description>
        Purpose: Test of format-number percentage format. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format local:df minus-sign=&quot;-&quot; percent=&quot;%&quot; decimal-separator=&quot;.&quot;;
      	format-number(0.4857,'###.###%', 'local:df')</test>
    <result-string>xs:string(&quot;48.57%&quot;)</result-string>
    <result>
      <assert-string-value>48.57%</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-06">
    <description>
        Purpose: Test of format-number per-mille format. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format local:df minus-sign=&quot;-&quot; per-mille=&quot;&quot; decimal-separator=&quot;.&quot;;
      	format-number(0.4857,'###.###')</test>
    <result-string>xs:string(&quot;485.7&quot;)</result-string>
    <result>
      <assert-string-value>485.7</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-07">
    <description>
        Purpose: Test of format-number currency symbol, which is not supposed to be there. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format local:df minus-sign=&quot;-&quot; currency-symbol=&quot;&quot; decimal-separator=&quot;.&quot;;
      	format-number(95.4857,'###.####', &quot;local:df&quot;)</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XPST0003&quot;))</result-string>
    <result>
      <error code="XPST0003"/>
    </result>
  </test-case>
  <test-case name="decimal-format-09">
    <description>
        Purpose: Test non-default decimal-format on separator characters, changing both. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
         declare default decimal-format decimal-separator=&quot;|&quot; grouping-separator=&quot;.&quot;; 
         format-number(931.4857,'000.000|###')</test>
    <result-string>xs:string(&quot;000.931|486&quot;)</result-string>
    <result>
      <assert-string-value>000.931|486</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-11">
    <description>
        Purpose: Test default decimal-format on pattern-only characters, positive number. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit=&quot;!&quot; pattern-separator=&quot;\&quot;;
        format-number(26931.4,'+!!!,!!!.!!!\-!!,!!!.!!!')</test>
    <result-string>xs:string(&quot;+26,931.4&quot;)</result-string>
    <result>
      <assert-string-value>+26,931.4</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-12">
    <description>
        Purpose: Test default decimal-format on pattern-only characters, negative number. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit=&quot;!&quot; pattern-separator=&quot;\&quot;;
        format-number(-26931.4,'+!!,!!!.!!!\-!!!,!!!.!!!')</test>
    <result-string>xs:string(&quot;-26,931.4&quot;)</result-string>
    <result>
      <assert-string-value>-26,931.4</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-13">
    <description>
        Purpose: Test default decimal-format on pattern-only characters, negative number and one pattern. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit=&quot;!&quot; pattern-separator=&quot;\&quot;;
        format-number(-26931.4,'!!!,!!!.!!!')</test>
    <result-string>xs:string(&quot;-26,931.4&quot;)</result-string>
    <result>
      <assert-string-value>-26,931.4</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-14">
    <description>
        Purpose: Test specified result pattern for infinity. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format local:df2 infinity=&quot;off-the-scale&quot;;
        format-number(1 div 0e0,'###############################', 'local:df2')</test>
    <result-string>xs:string(&quot;off-the-scale&quot;)</result-string>
    <result>
      <assert-string-value>off-the-scale</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-15">
    <description>
        Purpose: Test specified result pattern for not-a-number. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format local:df2 NaN=&quot;non-numeric&quot;;
        format-number(number('none'), '#############', 'local:df2')</test>
    <result-string>xs:string(&quot;non-numeric&quot;)</result-string>
    <result>
      <assert-string-value>non-numeric</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-16">
    <description>
        Purpose: Test of decimal-format per-mille format with character being changed. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format  per-mille=&quot;m&quot;;
        format-number(0.4857,'###.###m')</test>
    <result-string>xs:string(&quot;485.7m&quot;)</result-string>
    <result>
      <assert-string-value>485.7m</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-17">
    <description>
        Purpose: Test decimal-format output character for negative, 2 patterns. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format  minus-sign=&quot;_&quot;;
        format-number(-26931.4,'+###,###.###;-###,###.###')</test>
    <result-string>xs:string(&quot;-26,931.4&quot;)</result-string>
    <result>
      <assert-string-value>-26,931.4</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-18">
    <description>
        Purpose: Test decimal-format output character for negative, one pattern. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format minus-sign=&quot;_&quot;;
        format-number(-26931.4,'###,###.###')</test>
    <result-string>xs:string(&quot;_26,931.4&quot;)</result-string>
    <result>
      <assert-string-value>_26,931.4</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-19">
    <description>
        Purpose: Test decimal-format declaration with an unprefixed name. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format myminus minus-sign=&quot;_&quot;; 
        concat(format-number(-26931.4,'###,###.###','myminus'), '/',
        format-number(-42857.1,'###,###.###'))</test>
    <result-string>xs:string(&quot;_26,931.4/-42,857.1&quot;)</result-string>
    <result>
      <assert-string-value>_26,931.4/-42,857.1</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-20">
    <description>
        Purpose: Test of decimal-format with qualified name. Unqualified name provided as a trap. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare namespace foo=&quot;http://foo.ns&quot;;
        declare decimal-format foo:decimal1  decimal-separator=&quot;!&quot; grouping-separator=&quot;*&quot;;
        declare decimal-format decimal1  decimal-separator=&quot;*&quot; grouping-separator=&quot;!&quot;;
        format-number(1234.567,'#*###*###!###','foo:decimal1')</test>
    <result-string>xs:string(&quot;1*234!567&quot;)</result-string>
    <result>
      <assert-string-value>1*234!567</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-21">
    <description>
        Purpose: Decimal formats apply only within their own module. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <module file="DecimalFormatDecl/dfd-module-001.xq" uri="http://www.w3.org/TestModules/dfd-module-001"/>
    <test>
        import module namespace m=&quot;http://www.w3.org/TestModules/dfd-module-001&quot;;
        declare decimal-format df001 grouping-separator=&quot;!&quot;;
        format-number(123456.789,'#!###!###.###','df001')||'-'||m:do()
      </test>
    <result-string>xs:string(&quot;123!456.789-123'456.789&quot;)</result-string>
    <result>
      <assert-string-value>123!456.789-123'456.789</assert-string-value>
    </result>
  </test-case>
  <test-case name="decimal-format-901err">
    <description>
        Purpose: Create a conflict in the use of the '!' character. 
      </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <!--SOURCE: decimal-format-/decimal-format-901err.xml-->
    <dependency type="spec" value="XQ30+"/>
    <test>
        declare default decimal-format decimal-separator=&quot;!&quot; grouping-separator=&quot;!&quot;;
        format-number(931.4857,'###!###!###')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0098&quot;))</result-string>
    <result>
      <error code="XQST0098"/>
    </result>
  </test-case>
  <test-case name="decimal-format-902err">
    <description>
        Creator: Michael Kay (bug report from doerschlein) 
        Purpose: Test use of an illegal picture. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit='$';
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODF1310&quot;))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="decimal-format-903err">
    <description>
        Purpose: Two default decimal declarations. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit='$';
        declare default decimal-format minus-sign='_';
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0111&quot;))</result-string>
    <result>
      <error code="XQST0111"/>
    </result>
  </test-case>
  <test-case name="decimal-format-904err">
    <description>
        Purpose: Two decimal format declarations with same name. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare namespace a=&quot;http://a.com/&quot;;
        declare namespace b=&quot;http://a.com/&quot;;
        declare decimal-format a:one digit='$';
        declare decimal-format two digit='$';
        declare decimal-format three digit='$';
        declare decimal-format four digit='$';
        declare decimal-format five digit='$';
        declare decimal-format b:one minus-sign=&quot;_&quot;;
        declare default decimal-format minus-sign='_';
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0111&quot;))</result-string>
    <result>
      <error code="XQST0111"/>
    </result>
  </test-case>
  <test-case name="decimal-format-905err">
    <description>
        Purpose: test error condition: no digit or zero-digit in picture. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare decimal-format q decimal-separator=&quot;.&quot; grouping-separator=&quot;,&quot;;
        format-number(931.4857,'fred.ginger', 'q')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODF1310&quot;))</result-string>
    <result>
      <error code="FODF1310"/>
    </result>
  </test-case>
  <test-case name="decimal-format-906err">
    <description>
        Purpose: Test raising error FODF1280. </description>
    <created by="Zhen Hua Liu" on="2012-01-18"/>
    <environment/>
    <test>format-number(931.45, '000.##0', 'foo:bar')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;FODF1280&quot;))</result-string>
    <result>
      <error code="FODF1280"/>
    </result>
  </test-case>
  <test-case name="decimal-format-907err">
    <description>
        Purpose: Decimal format declaration declares the same property twice. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare namespace a=&quot;http://a.com/&quot;;
        declare namespace b=&quot;http://a.com/&quot;;
        declare decimal-format a:one digit='$' zero-digit=&quot;0&quot; minus-sign=&quot;_&quot; digit=&quot;#&quot;;
        format-number(931.4857,'000.$$0', 'a:one')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0114&quot;))</result-string>
    <result>
      <error code="XQST0114"/>
    </result>
  </test-case>
  <test-case name="decimal-format-908err">
    <description>
        Purpose: Decimal format declaration declares invalid property value. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format digit=&quot;one&quot;;
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0097&quot;))</result-string>
    <result>
      <error code="XQST0097"/>
    </result>
  </test-case>
  <test-case name="decimal-format-909err">
    <description>
        Purpose: Decimal format declaration declares invalid property value. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format zero-digit=&quot;1&quot;;
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0097&quot;))</result-string>
    <result>
      <error code="XQST0097"/>
    </result>
  </test-case>
  <test-case name="decimal-format-910err">
    <description>
        Purpose: Decimal format declaration declares invalid property value. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format zero-digit=&quot;a&quot;;
        format-number(931.4857,'aaa.$$a')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0097&quot;))</result-string>
    <result>
      <error code="XQST0097"/>
    </result>
  </test-case>
  <test-case name="decimal-format-911err">
    <description>
        Purpose: Decimal format declaration declares invalid property value. </description>
    <created by="Michael Kay, Saxonica" on="2012-10-08"/>
    <test>
        declare default decimal-format minus-sign=&quot;--&quot;;
        format-number(931.4857,'000.$$0')</test>
    <result-string>fn:error(fn:QName(&quot;http://www.w3.org/2005/xqt-errors&quot;, &quot;XQST0097&quot;))</result-string>
    <result>
      <error code="XQST0097"/>
    </result>
  </test-case>
</test-set>