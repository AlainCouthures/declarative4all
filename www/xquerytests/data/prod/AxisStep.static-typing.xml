<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-AxisStep.static-typing">
   <description>Tests for the AxisStep production with (pessimistic) static typing</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-AxisStep.schema"/>
   <link type="spec" document="XQuery" section-number="3.2.1.1" idref="axes"/>
   
   <environment name="TopMany">
      <source role="." file="AxisStep/TopMany.xml">
         <description>Like TreeCompass, but with comments and PIs off the root. PI targets vary.
            All text nodes must have non-whitespace characters.</description>
         <created by="David Marston" on="2003-03-25"/>   
      </source>
   </environment>
   
   <environment name="TreeCompass">
      <source role="." file="AxisStep/TreeCompass.xml">
         <description>A tree intended to allow many kinds of path expressions.
         Need multiple attributes on center, west, and south, plus @mark scattered around.
         Mix of text and element children in many places, but east should have only a text node.
         All text nodes must have non-whitespace characters.
         Top element is far-north.</description>
         <created by="David Marston" on="2003-03-25"/>   
      </source>
   </environment>

   <environment name="Tree1Text">
      <source role="." file="AxisStep/Tree1Text.xml">
         <description>A "compass" tree that has just a text node and no child element off the center node.</description>
         <created by="David Marston" on="2003-03-25"/>   
      </source>
   </environment>

   <dependency type="feature" value="staticTyping"/>

   <test-case name="ST-Axes001">
      <description> self:: axis with explicit name test called on set of nodes which do not contain any nodes of this name </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/self::nowhere)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes002">
      <description> Path 'self::*' from an attribute. </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-2/self::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes003">
      <description> Path 'self::' with specified attribute name, from that attribute. </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-3/self::center-attr-3)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes004">
      <description> Path 'self::' with specified attribute name that is not found, from an attribute. </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-1/self::nowhere)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes005">
      <description> self::name from a text node gets nothing, because node kind differs </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/text()/self::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes006">
      <description> self::name from a text node gets nothing, because node kind differs </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/text()/self::center)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes007">
      <description> descendant-or-self::* from an attribute gets nothing </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-1/descendant-or-self::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes008">
      <description> descendant-or-self::name from an attribute gets nothing </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-2/descendant-or-self::far-south)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes009">
      <description> descendant-or-self::name from an attribute gets nothing, even with attribute's name </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(//center/@center-attr-2/descendant-or-self::center-attr-2)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes010">
      <description> descendant-or-self::* from a text node gets nothing </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="Tree1Text"/>
      <test>fn:count(//center/text()/descendant-or-self::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes011">
      <description> /attribute::* gets nothing because root can't have attributes </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(/attribute::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes012">
      <description> /@* gets nothing because root can't have attributes </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(/@*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes013">
      <description> /parent::* gets nothing because root can't have parent </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(/parent::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes014">
      <description> /.. gets nothing because root can't have parent </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TreeCompass"/>
      <test>fn:count(/..)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   <test-case name="ST-Axes015">
      <description> /self::* gets nothing because root is not an element node </description>
      <created by="Mike Rorke" on="2003-02-25"/>
      <environment ref="TopMany"/>
      <test>fn:count(/self::*)</test>
      <result>
         <error code="XPST0005"/>
      </result>
   </test-case>

   
</test-set>
