<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module load
-->
<xsl:template match="xforms:load" mode="script" priority="1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:apply-templates select="@*" mode="scriptattr"/>
	<js xmlns="">
		<xsl:text>var </xsl:text>
		<xsl:value-of select="$vn_pf"/>
		<xsl:text>load_</xsl:text>
		<xsl:value-of select="$workid"/>
		<xsl:text> = new XsltForms_load(</xsl:text>
		<xsl:value-of select="$vn_subform"/>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptBinding"><xsl:with-param name="p" select="@ref"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:choose>
			<xsl:when test="xforms:resource/@value">
				<xsl:for-each select="xforms:resource[1]">
					<xsl:call-template name="toScriptBinding"/>
				</xsl:for-each>
			</xsl:when>
			<xsl:when test="xforms:resource/text()">
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="normalize-space(xforms:resource/text())"/></xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@resource"/></xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@show"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@target | @targetid"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@instance"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@if"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@while"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@iterate"/></xsl:call-template>
		<xsl:text>);</xsl:text>
	</js>
	<xsl:apply-templates select="node()" mode="script">
		<xsl:with-param name="parentworkid" select="$workid"/>
	</xsl:apply-templates>
	</xsl:template>