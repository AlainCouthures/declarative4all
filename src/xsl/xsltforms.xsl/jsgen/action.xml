<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module action
-->
<xsl:template match="xforms:action" mode="script" priority="1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:apply-templates select="@*" mode="scriptattr"/>
	<xsl:apply-templates select="node()" mode="script">
		<xsl:with-param name="parentworkid" select="$workid"/>
	</xsl:apply-templates>
	<js xmlns="">
		<xsl:text>var </xsl:text>
		<xsl:value-of select="$vn_pf"/>
		<xsl:text>action_</xsl:text>
		<xsl:value-of select="$workid"/>
		<xsl:text> = new XsltForms_action(</xsl:text>
		<xsl:value-of select="$vn_subform"/>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@if"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@while"/></xsl:call-template>
		<xsl:text>,</xsl:text>
		<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@iterate"/></xsl:call-template>
		<xsl:text>)</xsl:text>
		<xsl:for-each select="node()">
			<xsl:if test="contains(':var:wrap:setselection:setvalue:split:insert:delete:action:toggle:send:setfocus:setindex:setnode:load:message:dispatch:rebuild:recalculate:refresh:reset:revalidate:show:hide:script:unload:',concat(':',local-name(),':'))">
				<xsl:text>.add(</xsl:text>
				<xsl:value-of select="$vn_pf"/>
				<xsl:value-of select="local-name()"/>
				<xsl:text>_</xsl:text>
				<xsl:value-of select="concat(position(),'_',$workid)"/>
				<xsl:text>)</xsl:text>
			</xsl:if>
		</xsl:for-each>
		<xsl:text>;</xsl:text>
	</js>
</xsl:template>