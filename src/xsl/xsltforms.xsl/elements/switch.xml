<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module switch
-->
<xsl:template match="xforms:switch" priority="2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:variable name="elt">
		<xsl:choose>
			<xsl:when test="namespace-uri(parent::*) = 'http://www.w3.org/2000/svg'">g</xsl:when>
			<xsl:otherwise>div</xsl:otherwise>
		</xsl:choose>
	</xsl:variable>
	<xsl:variable name="ns">
		<xsl:if test="$elt = 'g'">http://www.w3.org/2000/svg</xsl:if>
	</xsl:variable>
	<xsl:element name="{$elt}" namespace="{$ns}">
		<xsl:copy-of select="@*[local-name() != 'ref' and local-name() != 'id' and local-name() != 'class']"/>
		<xsl:call-template name="genid">
			<xsl:with-param name="workid" select="$workid"/>
		</xsl:call-template>
		<xsl:call-template name="style">
			<xsl:with-param name="class">xforms-switch</xsl:with-param>
		</xsl:call-template>
		<xsl:variable name="noselected" select="count(xforms:case[@selected='true']) = 0"/>
		<xsl:variable name="caseref" select="@caseref != ''"/>
		<xsl:for-each select="node()">
			<xsl:if test="self::xforms:case">
				<xsl:variable name="nopreviousselected" select="count(preceding-sibling::xforms:case[@selected='true']) = 0"/>
				<xsl:element name="{$elt}" namespace="{$ns}">
					<xsl:call-template name="genid">
						<xsl:with-param name="workid" select="concat(position(),'_',$workid)"/>
					</xsl:call-template>
					<xsl:call-template name="style">
						<xsl:with-param name="class">xforms-case</xsl:with-param>
					</xsl:call-template>
					<xsl:if test="$caseref or not(($noselected and count(preceding-sibling::xforms:case) = 0) or (@selected = 'true' and $nopreviousselected))">
						<xsl:attribute name="style">display:none;</xsl:attribute>
					</xsl:if>
					<xsl:apply-templates select="node()">
						<xsl:with-param name="parentworkid" select="concat(position(),'_',$workid)"/>
					</xsl:apply-templates>
				</xsl:element>
			</xsl:if>
		</xsl:for-each>
	</xsl:element>
</xsl:template>