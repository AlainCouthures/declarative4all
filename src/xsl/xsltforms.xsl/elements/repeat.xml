<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module repeat
-->
<xsl:template match="xforms:repeat[count(xhtml:tr | tr | xhtml:td | td | xhtml:th | th) &lt; 2 and not(parent::*[local-name() = 'tr'] and ancestor::*[2][local-name() = 'repeat' and namespace-uri() = 'http://www.w3.org/2002/xforms']) and ((not(following-sibling::*) and not(preceding-sibling::*)) or not(xhtml:tr | tr | xhtml:td | td | xhtml:th | th))]" priority="3" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:call-template name="group">
		<xsl:with-param name="workid" select="$workid"/>
		<xsl:with-param name="type" select="'repeat'"/>
	</xsl:call-template>
</xsl:template>
<xsl:template match="xforms:repeat" priority="2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(count(preceding-sibling::node()) + 1,'_',$parentworkid)"/>
	<xsl:apply-templates select="node()">
		<xsl:with-param name="parentworkid" select="$workid"/>
	</xsl:apply-templates>
</xsl:template>