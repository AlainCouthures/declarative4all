<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module escapeJS
-->
<xsl:template name="escapeJS" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:param name="text"/>
	<xsl:param name="trtext"/>
	<xsl:choose>
		<xsl:when test="function-available('msxsl:node-set') and contains($trtext, '&#9;')">
			<xsl:value-of select="substring-before($trtext, '&#9;')"/>
			<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, '&#9;'))+1, 1)"/>
			<xsl:choose>
				<xsl:when test="$c = $newline">\n</xsl:when>
				<xsl:when test="$c = $carriagereturn">\r</xsl:when>
				<xsl:when test="$c = '&#9;'">\t</xsl:when>
				<xsl:when test="$c = $quot">\"</xsl:when>
				<xsl:when test="$c = $apos">\'</xsl:when>
				<xsl:when test="$c = '\'">\\</xsl:when>
				<xsl:when test="$c = ' '">\x20</xsl:when>
			</xsl:choose>
			<xsl:variable name="text2" select="substring-after($text, $c)"/>
			<xsl:variable name="trtext2" select="substring-after($trtext, '&#9;')"/>
			<xsl:variable name="text3" select="substring($text2, 1, string-length($text2) div 2)"/>
			<xsl:variable name="trtext3" select="substring($trtext2, 1, string-length($trtext2) div 2)"/>
			<xsl:variable name="text4" select="substring($text2, string-length($text2) div 2 + 1)"/>
			<xsl:variable name="trtext4" select="substring($trtext2, string-length($trtext2) div 2 + 1)"/>
			<xsl:call-template name="escapeJS">
				<xsl:with-param name="text" select="$text3"/>
				<xsl:with-param name="trtext" select="$trtext3"/>
			</xsl:call-template>
			<xsl:call-template name="escapeJS">
				<xsl:with-param name="text" select="$text4"/>
				<xsl:with-param name="trtext" select="$trtext4"/>
			</xsl:call-template>
		</xsl:when>
		<xsl:when test="not(function-available('msxsl:node-set')) and contains($trtext, $tab)">
			<xsl:value-of select="substring-before($trtext, $tab)"/>
			<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, $tab))+1, 1)"/>
			<xsl:choose>
				<xsl:when test="$c = $newline">\n</xsl:when>
				<xsl:when test="$c = $carriagereturn">\r</xsl:when>
				<xsl:when test="$c = $tab">\t</xsl:when>
				<xsl:when test="$c = $quot">\"</xsl:when>
				<xsl:when test="$c = $apos">\'</xsl:when>
				<xsl:when test="$c = '\'">\\</xsl:when>
				<xsl:when test="$c = ' '">\x20</xsl:when>
			</xsl:choose>
			<xsl:variable name="text2" select="substring-after($text, $c)"/>
			<xsl:variable name="trtext2" select="substring-after($trtext, $tab)"/>
			<xsl:variable name="text3" select="substring($text2, 1, string-length($text2) div 2)"/>
			<xsl:variable name="trtext3" select="substring($trtext2, 1, string-length($trtext2) div 2)"/>
			<xsl:variable name="text4" select="substring($text2, string-length($text2) div 2 + 1)"/>
			<xsl:variable name="trtext4" select="substring($trtext2, string-length($trtext2) div 2 + 1)"/>
			<xsl:call-template name="escapeJS">
				<xsl:with-param name="text" select="$text3"/>
				<xsl:with-param name="trtext" select="$trtext3"/>
			</xsl:call-template>
			<xsl:call-template name="escapeJS">
				<xsl:with-param name="text" select="$text4"/>
				<xsl:with-param name="trtext" select="$trtext4"/>
			</xsl:call-template>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="$text"/>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>