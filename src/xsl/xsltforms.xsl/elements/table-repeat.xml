<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module table-repeat
-->
<xsl:template match="xhtml:thead[count(xforms:repeat) = 1] | thead[count(xforms:repeat) = 1] | xhtml:tbody[count(xforms:repeat) = 1] | tbody[count(xforms:repeat) = 1] | xhtml:tfoot[count(xforms:repeat) = 1] | tfoot[count(xforms:repeat) = 1] | xhtml:tr[count(xforms:repeat) = 1 and not(parent::xforms:repeat)] | tr[count(xforms:repeat) = 1 and not(parent::xforms:repeat)]" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<xsl:choose>
		<xsl:when test="xforms:repeat[count(xhtml:tr | tr | xhtml:td | td | xhtml:th | th) &lt; 2 and not(parent::*[local-name() = 'tr'] and ancestor::*[2][local-name() = 'repeat' and namespace-uri() = 'http://www.w3.org/2002/xforms']) and ((not(following-sibling::*) and not(preceding-sibling::*)) or not(xhtml:tr | tr | xhtml:td | td | xhtml:th | th))]">
			<xsl:apply-templates select="@* | node()">
				<xsl:with-param name="parentworkid" select="$workid"/>
			</xsl:apply-templates>
		</xsl:when>
		<xsl:otherwise>
			<xsl:copy>
				<xsl:apply-templates select="@*"/>
				<xsl:apply-templates select="node()">
					<xsl:with-param name="parentworkid" select="$workid"/>
				</xsl:apply-templates>
			</xsl:copy>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>
<xsl:template match="xhtml:table[count(xforms:repeat) = 1] | table[count(xforms:repeat) = 1]" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
	<xsl:param name="parentworkid"/>
	<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
	<table>
		<xsl:apply-templates select="@*"/>
		<xsl:if test="count(*[following-sibling::xforms:repeat]) != 0">
			<thead>
				<xsl:apply-templates select="*[following-sibling::xforms:repeat]">
					<xsl:with-param name="parentworkid" select="$workid"/>
				</xsl:apply-templates>
			</thead>
		</xsl:if>
		<tbody>
			<xsl:call-template name="genid">
				<xsl:with-param name="workid" select="$workid"/>
			</xsl:call-template>
			<xsl:apply-templates select="xforms:repeat">
				<xsl:with-param name="parentworkid" select="$workid"/>
			</xsl:apply-templates>
		</tbody>
		<xsl:if test="count(*[preceding-sibling::xforms:repeat]) != 0">
			<tfoot>
				<xsl:apply-templates select="*[preceding-sibling::xforms:repeat]">
					<xsl:with-param name="parentworkid" select="$workid"/>
				</xsl:apply-templates>
			</tfoot>
		</xsl:if>
	</table>
</xsl:template>