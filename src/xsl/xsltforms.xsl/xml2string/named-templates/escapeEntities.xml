<!--
 * @author Alain Couthures <alain.couthures@agencexml.com>
 * @licence LGPL - See file 'LICENSE.md' in this project.
 * @module escapeEntities
-->
<xsl:variable name="trEntities1" select="concat($amp,$apos,$lt,$gt,$quot,$backslash,$newline,$lineseparator,$carriagereturn)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"/>
<xsl:variable name="trEntities2" select="concat($tab,$tab,$tab,$tab,$tab,$tab,$tab,$tab,$tab)" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"/>
<xsl:template name="escapeEntities" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:param name="text"/>
	<xsl:param name="trtext"/>
	<xsl:choose>
		<xsl:when test="function-available('msxsl:node-set') and contains($trtext, '&#9;')">
			<xsl:value-of select="substring-before($trtext, '&#9;')"/>
			<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, '&#9;'))+1, 1)"/>
			<xsl:choose>
				<xsl:when test="$c = $amp">&amp;amp;</xsl:when>
				<xsl:when test="$c = $apos">&amp;apos;</xsl:when>
				<xsl:when test="$c = $lt">&amp;lt;</xsl:when>
				<xsl:when test="$c = $gt">&amp;gt;</xsl:when>
				<xsl:when test="$c = $quot">&amp;quot;</xsl:when>
				<xsl:when test="$c = $backslash">\\</xsl:when>
				<xsl:when test="$c = $newline">&amp;#10;</xsl:when>
				<xsl:when test="$c = $lineseparator">&amp;#10;</xsl:when>
				<xsl:when test="$c = $carriagereturn">&amp;#13;</xsl:when>
				<xsl:when test="$c = '&#9;'">&amp;#9;</xsl:when>
			</xsl:choose>
			<xsl:call-template name="escapeEntities">
				<xsl:with-param name="text" select="substring-after($text, $c)"/>
				<xsl:with-param name="trtext" select="substring-after($trtext, '&#9;')"/>
			</xsl:call-template>
		</xsl:when>
		<xsl:when test="not(function-available('msxsl:node-set')) and contains($trtext, $tab)">
			<xsl:value-of select="substring-before($trtext, $tab)"/>
			<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, $tab))+1, 1)"/>
			<xsl:choose>
				<xsl:when test="$c = $amp">&amp;amp;</xsl:when>
				<xsl:when test="$c = $apos">&amp;apos;</xsl:when>
				<xsl:when test="$c = $lt">&amp;lt;</xsl:when>
				<xsl:when test="$c = $gt">&amp;gt;</xsl:when>
				<xsl:when test="$c = $quot">&amp;quot;</xsl:when>
				<xsl:when test="$c = $backslash">\\</xsl:when>
				<xsl:when test="$c = $newline">&amp;#10;</xsl:when>
				<xsl:when test="$c = $lineseparator">&amp;#10;</xsl:when>
				<xsl:when test="$c = $carriagereturn">&amp;#13;</xsl:when>
				<xsl:when test="$c = $tab">&amp;#9;</xsl:when>
			</xsl:choose>
			<xsl:call-template name="escapeEntities">
				<xsl:with-param name="text" select="substring-after($text, $c)"/>
				<xsl:with-param name="trtext" select="substring-after($trtext, $tab)"/>
			</xsl:call-template>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="$text"/>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>